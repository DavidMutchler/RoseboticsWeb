unit_id,unit_title,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_objectives
1,Introduction to Python,1,The Flipped Classroom,yes,Questions,https://github.com/CSSE120StartingCode/IntroductionToPython,rtDYAN-lShY,"<ul><li>Before starting this unit make sure you have completed the <a target='_blank' href='https://docs.google.com/document/d/1sB-CAunUbr8WZdkzgjOgXL9Z7kz6s5RAY-JBmSpdYiw/edit?usp=sharing'>PyCharm and Git installation guide</a>.  In that guide you will also checkout the code for this unit by making a <b>fork</b> of the <a target='_blank' href='https://github.com/CSSE120StartingCode/IntroductionToPython'>starting code</a> and setting up a PyCharm project.</li><li>Learn more about how the structure of this class will work, and how it may be different from your other classes</li><li style='margin-left: 30px;'><b>In Class</b> - Exercises where you write code and hopefully ask questions as they come up</li><li style='margin-left: 30px;'><b>Out of class</b> - Watch videos and listen to the instructor (what many students expect to happen in class)</li><li>Note, the quiz questions will happen immediately after you finish this video when you hit next.</li></ul>"
1,Introduction to Python,2,What is Software Engineering?,yes,Questions,https://github.com/CSSE120StartingCode/IntroductionToPython,BAvF-YAOoqQ,"<ul><li>We'd love for you all to become Software Engineers, it's pretty great, but let's talk more about what that means.</li></ul>"
1,Introduction to Python,3,m1e Comments Strings and print,yes,Questions,https://github.com/CSSE120StartingCode/IntroductionToPython,G84xslBEeFA,"<ul><li>You will download the starting code using Git and work in PyCharm, <a target='_blank' href='https://docs.google.com/document/d/1sB-CAunUbr8WZdkzgjOgXL9Z7kz6s5RAY-JBmSpdYiw/edit?usp=sharing'>as per these instructions</a></li><li>This video uses Eclipse with SVN, so somethings will look different.  Only worry about the code and not the tool differences.</li></ul>"
1,Introduction to Python,4,m2 Hello world,,,https://github.com/CSSE120StartingCode/IntroductionToPython,4wBA_rq3PwI,"<ul><li>Hello, World is a classic first programming exercise</li><li>If you would like you can begin reading this exercise now and work the TODOs or you can wait until class.</li><li>When you do a commit you will be using Git instead of SVN as discussed in the code comments.</li></ul>"
1,Introduction to Python,5,m3 SimpleTurtles,,,https://github.com/CSSE120StartingCode/IntroductionToPython,NVp58Wvr-kw,"<ul><li>To start learning about writing code, we'll use the SimpleTurtle class to practice writing code that you can see on your screen</li><li>Learn the SimpleTurtle methods by pattern matching the example code.</li><li>Pattern matching is a great first step when learning to write you own code.  Later you'll be asked to make something fun (and maybe even cool or interesting) with Turtle graphics.</li></ul>"
1,Introduction to Python,6,m4e Loopy Turtles concept,,,https://github.com/CSSE120StartingCode/IntroductionToPython,VOK6AO8Pp-s,"<ul><li>Let's take at the code in m4e and discuss the concepts that you should be learning.</li></ul>"
2,Objects Functions and Methods,1,Your first program with Functions,yes,Questions,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,ANMJaAOrIHs,"<ul><li>Start this unit by making a <b>fork</b> of the <a target='_blank' href='https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods'>starting code from here</a> and setting up a PyCharm project</li><li style='margin-left: 30px;'>If you need a reminder for how to fork a project then create a project in PyCharm from your forked repo revisit <a target='_blank' href='https://docs.google.com/document/d/1sB-CAunUbr8WZdkzgjOgXL9Z7kz6s5RAY-JBmSpdYiw/edit#heading=h.46un8o425mzw'>the instructors from the last unit</a></li><li>Note: This video refers to exercises that you will see in Session 2 (the video falsely claims that you will see them in Session 1).</li></ul>"
2,Objects Functions and Methods,2,Calling Functions,yes,Questions,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,cWeaYTMQXEE,"<ul><li>The preceding video explained how a program's flow of control changes when a function call occurs.</li><li>This video explains the flow of information that occurs during a function call.</li></ul><img src='assets/img/four_step_function_process.png' alt='four steps of calling a function'>"
2,Objects Functions and Methods,3,Coding to a specification,yes,Questions,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,y9JSDnRnyoA,"<ul><li>You will apply the ideas of this video in all subsequent exercises in this class (and beyond).</li></ul>"
2,Objects Functions and Methods,4,Object Oriented Programming,yes,Questions,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,uZEhumLGhzs,"<ul><li>This video explains the concept of Object Oriented Programming, contrasting it with Procedural Programming.</li></ul>"
2,Objects Functions and Methods,5,UML Class Diagrams,yes,Questions,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,PpER4ObybBI,"<ul><li>The previous video introduced the concept of Object Oriented Programming (OOP).</li><li>This video explains the programming constructs that embody OOP â€” classes, objects, instance variables and methods.</li></ul>"
2,Objects Functions and Methods,6,Using Objects,yes,Questions,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,ZpvzmheXD50,"<ul><li>This video extends the concepts from the previous videos to show how a software developer uses objects to be more productive.</li></ul>"
2,Objects Functions and Methods,7,Flow Control,,,https://github.com/CSSE120StartingCode/ObjectsFunctionsAndMethods,605QWg-3t_U,"<ul><li>This video is optional.  Here is the code for this video:</li></ul><script src='https://gist.github.com/fisherds/b08f0118952cd84110e4fb80f68efabf.js'></script>"
3,Accumulators and Functions with Parameters,1,Reading: Functions with Parameters,yes,Questions,https://github.com/CSSE120StartingCode/AccumulatorsAndFunctionsWithParameters,DJF8QXrTqXE,"<ul><li>Start this unit by making a <b>fork</b> of the <a target='_blank' href='https://github.com/CSSE120StartingCode/AccumulatorsAndFunctionsWithParameters'>starting code from here</a> and setting up a PyCharm project</li><li>Read this explanation of <a target='_blank' href='assets/pdf/FunctionsWithParameters.pdf'>Functions with Parameters</a> (clicking the link will open a pdf in a new tab)</li><li>Read this important explanation carefully!</li><li>It reinforces what you saw previously in a video on functions.</li><li>Once you are done reading that document, close that tab, return to this page, and click Next Page below.</li></ul>"
3,Accumulators and Functions with Parameters,2,Reading: Namespaces and Variables' Scope,,,https://github.com/CSSE120StartingCode/AccumulatorsAndFunctionsWithParameters,DJF8QXrTqXE,"<ul><li>Read this handout on <a target='_blank' href='assets/pdf/NamespacesAndVariablesScope.pdf'>Namespaces and Variables' Scope</a> (clicking the link will open a pdf in a new tab)</li><li>Don't worry if some of its ideas are confusing to you. The NEXT item (a video) should clear up your confusion.</li><li>Once you are done reading that document, close that tab, return to this page, and click Next Page below.</li></ul>"
3,Accumulators and Functions with Parameters,3,Namespaces Parameters Returns,yes,Questions,https://github.com/CSSE120StartingCode/AccumulatorsAndFunctionsWithParameters,b8ZSQQX3CO0,"<ul><li>The contents of this video are critical to your success in this course. Be sure that all of this video is crystal clear to you, and if not, ** BRING YOUR QUESTIONS ABOUT IT TO CLASS. **</li></ul><script src='https://gist.github.com/fisherds/e13ffe32a59af37e550eeaeda1814681.js'></script>"
3,Accumulators and Functions with Parameters,4,Reading: Counted Loops,yes,Questions,https://github.com/CSSE120StartingCode/AccumulatorsAndFunctionsWithParameters,DJF8QXrTqXE,"<ul><li>Read this explaination of <a target='_blank' href='assets/pdf/CountedLoops.pdf'>Counted Loops</a> (clicking the link will open a pdf in a new tab)</li><li>Read this important explanation carefully!</li><li>Study the examples in it.</li><li>Once you are done reading that document, close that tab, return to this page, and click Next Page below.</li></ul>"
3,Accumulators and Functions with Parameters,5,The Accumulator Pattern Summing,yes,Questions,https://github.com/CSSE120StartingCode/AccumulatorsAndFunctionsWithParameters,gQEgwylnzfU,"<ul><li>This is a common pattern that will help you not only in many exercises, but also in your coding career.</li></ul>"
4,The Accumulator Pattern,1,Conditionals: IF statements,yes,Questions,https://github.com/CSSE120StartingCode/TheAccumulatorPattern,DJF8QXrTqXE,"<ul><li>Start this unit by making a <b>fork</b> of the <a target='_blank' href='https://github.com/CSSE120StartingCode/TheAccumulatorPattern'>starting code from here</a> and setting up a PyCharm project</li><li>Read <a target='_blank' href='assets/pdf/Conditionals.pdf'>this explanation of conditionals</a> (clicking the link will open a pdf in a new tab)</li><li>Once you are done reading that document, close that tab, return to this page, and click Next Page below.</li></li></ul>The above PDF was constructed from portions of <strong><a href='http://openbookproject.net/thinkcs/python/english3e/conditionals.html'>Chapter 5. Conditionals</a></strong>, which itself is part of <a href='http://openbookproject.net/thinkcs/python/english3e/'> <em>How to Think Like a Computer Scientist: Learning with Python 3</em></a> by Peter Wentworth, Jeffrey Elkner, Allen B. Downey, and Chris Meyers. The book is a nice online resource, as are the other books from the <a href='http://www.openbookproject.net/'>Open Book Project</a>.</p>"
4,The Accumulator Pattern,2,The Accumulator Pattern Counting and Graphics,,,https://github.com/CSSE120StartingCode/TheAccumulatorPattern,5AT9gv_BBUY,"<ul><li>This video extends the accumulator pattern from the summing pattern that you have seen previously to include the counting and in-graphics accumulator patterns.</li><li>The video uses a graphics system call Zellegraphics that preceded RoseGraphics, so you will see <b>zg</b> instead of <b>rg</b> and other such small changes from what we use now. The concepts are unchanged.</li></ul>"
4,The Accumulator Pattern,3,First Do a Concrete Example By Hand,,,https://github.com/CSSE120StartingCode/TheAccumulatorPattern,B7x-bAq_EC8,"<ul><li>This video works through an example of a technique that you will use often.</li><li>Note: The video uses the following example: Given a line, draw a diamond from the line. The video should have said that the given line is the upper-left line of the diamond. (Instead, the video wrongly spoke of 'positive slope'.)</li></ul>"
4,The Accumulator Pattern,4,Unit Testing,,,https://github.com/CSSE120StartingCode/TheAccumulatorPattern,DJF8QXrTqXE,"<span style='color:red'>Read this explanation </span> of <blockquote><strong>What is Unit Testing?</strong></blockquote><img src='assets/img/unit-testing.png' alt='Unit Testing'><br>taken from <a href='http://softwaretestingfundamentals.com/unit-testing/'>Unit Testing chapter</a> of <a href='http://softwaretestingfundamentals.com/'>Software Testing Fundamentals</a>.<br><br><br><span style='color:red'>Read this explanation </span> of <blockquote><strong>Why Do Unit Testing?</strong></blockquote><b>Question:</b><br><img src='assets/img/UnitTestingFromStackOverflow-1.jpg' alt='Why Unit Testing'><br><br><b>Answer:</b><br><img src='assets/img/UnitTestingFromStackOverflow-2.jpg' alt='Why Unit Testing'><br>taken from this <a href='http://stackoverflow.com/questions/1383/what-is-unit-testing/' target='_blank'>question on Stack Overflow</a>.<br><br>"

