unit_id,unit_title,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_objectives
1,Drive Motors,1,Introduction to this unit,yes,Questions,https://github.com/Rosebotics/ev3dev-curriculum,-8gce3R701k,"<ul><li>In this video we'll show an example of the mini-project that we'll build for this unit called <b>m5_drive_polygon</b></li><li>We'll also show a potentially useful debugging trick if your robot runs away after a code crash.</ul>"
1,Drive Motors,2,ev3.Motor API,yes,Questions,https://github.com/Rosebotics/ev3dev-curriculum,j0-ATIe6pqg,"<ul><li>During this video you should have the <a target='_blank' href='https://docs.google.com/document/d/1vGc-O2wMRQNLbN8IyN05TaWJPiuUNm2e3XbCtTNpxV8/edit?usp=sharing'>Drive Motors One Page Summary</a> on a sheet of paper in front of you.  If you received one already, get it out.  If you did not receive one, print it out before starting the video.</li><li>In addition to that handout your should also visit and bookmark the <a target='_blank' href='http://python-ev3dev.readthedocs.io/en/stable/'>official python-ev3dev API</a> (the important links are at the bottom of that page)</li><li>Drive motors use the <b>ev3.Motor</b> class.  This class, like all classes, has instance variables and methods.</li><li style='margin-left: 30px;'><b>Instance variables</b> - position_sp, speed_sp, stop_action, and time_sp</li><li style='margin-left: 30px;'><b>Methods</b> - run_forever(), stop(), run_to_rel_pos(), run_to_abs_pos(), run_timed(), and wait_while()</li></ul>"
1,Drive Motors,3,Modules summary,yes,Questions,https://github.com/Rosebotics/ev3dev-curriculum,UW5tH9fWc74,"<ul><li>The robot modules will build up to <b>m5_drive_polygon.py</b>, teaching you to use the ev3.Motor API along the way.</li><li>You will make library functions to encapsulate your work and you'll be doing some calculations to convert wheel degrees into linear inches.</li></ul>"
1,Drive Motors,4,Wait until Event pattern,yes,Questions,https://github.com/Rosebotics/ev3dev-curriculum,VDjCvOqZ5iY,"<ul><li>In the Drive Motors unit you will regularly be asking the user for input and then ending the program if the user enters 0 for the speed or time.  This is called the wait-until-event pattern as discussed in this video.</li><li>In addition to watching this video make a <b>fork</b> of the <a target='_blank' href='https://github.com/CSSE120StartingCode/WaitUntilEvent'>Wait Until Event project from here</a> and set up a PyCharm project</li><li>Work at least <b>m2_console_input.py</b> in that project and look at a few examples.  We recommend you work all the modules for practice, but only require m2.</li><li>Note, we will NOT be working those modules in class, they are super short and they should be worked now.  It's a mini-project that is just for this one video.  Your REAL project will be the Drive Motor folder of your team robot project repository.</li></ul>"
