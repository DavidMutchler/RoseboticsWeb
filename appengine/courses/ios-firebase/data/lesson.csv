unit_id,unit_title,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_objectives
1,Introduction to Firebase,1,Favorite Things Overview,,,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,-hmkMQbtfhs,"<ul><li>Welcome to the <a href='http://firebase.google.com' target='_blank'>Firebase</a> track!</li><li>Firebase is a cool Backend as a Service company that is owned by Google</li><li>Firebase was started by Rose-Hulman alumni and they still hire a lot of Rose students.</li></ul>"
1,Introduction to Firebase,2,Preparing our happy pointless app,yes,Questions,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,jobWjaSLJ6s,"<ul><li>We'll make an entire app in a single video.</li><li>You should feel comfortabl with all steps in this video. We're just making a simple pointless app to prepare to learn Firebase.</li><li>At 11:20 you will need this code...</li></ul><script src='https://gist.github.com/fisherds/1a73b9cc4c9aa9d4abaae2f08cbb2bf2.js'></script>"
1,Introduction to Firebase,3,Setting up the Firebase backend,yes,Questions,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,u-mTdDIfhYY,"<ul><li>You can use <a href='https://console.firebase.google.com/' target='_blank'>this link</a> to jump straight to the Firebase console</li><li>Firebase requires no backend code, which is really just cool.</li><li>It provides a great way to visualize your data</li><li>It defaults to requiring users to be signed-in to read and write data (which we'll change for this app)</li></ul>"
1,Introduction to Firebase,4,Setting up the Firebase client,yes,Questions,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,Iy2vzXtsU3g,"<ul><li>I can't believe we've made it this far in the course without showing you how use 3rd party libraries in iOS. They are SO handy. Expect to use one or more in your project too. You can learn more about CocoaPods <a target='_blank' href='https://guides.cocoapods.org/using/getting-started.html'>here</a></li><li>There is also a page with pod info specific to Firebase <a target='_blank' href='https://cocoapods.org/pods/Firebase'>here</a></li><li>There are a few steps to get your app setup, but you'll find CocoaPods and Firebase setup easy before you know it.</li></ul>"
1,Introduction to Firebase,5,Pushing data to Firebase,yes,Questions,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,255eVL5EoDE,"<ul><li>Step #1: Push data up to the Firebase database</li><li>Step #2 (which we'll do in a later video): Retrieving data from the Firebase database to our app.</li><li>To learn the Firebase API on your own you should plan to visit the <a target='_blank' href='https://firebase.google.com/docs/'>Firebase docs</a></li><li>You can watch pushes to your datastore using the <a href='https://console.firebase.google.com/' target='_blank'>Firebase console</a></li></ul>"
1,Introduction to Firebase,6,Single event reads,yes,Questions,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,MXiqMpOb1gI,"<ul><li>We'll break data retrieval into two types for this app:</li><li style='margin-left: 30px;'><b>Single event reads</b> - (this video) Basically using Firebase as if it is only a traditional RESTful API</li><li style='margin-left: 30px;'><b>Continuous event observing</b> - (next video) Using the power of sockets and Firebase's <b>real time, synchronous</b> database</li><li>Sometimes single event reads are useful in a real app, but that is not the norm.</li></ul>"
1,Introduction to Firebase,7,Continuous event observing,yes,Questions,https://docs.google.com/presentation/d/1Ek_nU5QKyPK8-5riap7Z4qCK0l49lP2W6Zpw7yZ4L_c/edit?usp=sharing,ZUnUd3A0MzM,"<ul><li>We broke data retrieval into two types for this app:</li><li style='margin-left: 30px;'><b>Single event reads</b> - (prior video) Basically using Firebase as if it is only a traditional RESTful API</li><li style='margin-left: 30px;'><b>Continuous event observing</b> - Using the power of sockets and Firebase's <b>real time, synchronous</b> database</li><li>The biggest thing that makes continuous observers more complex is that you have a responsibility to remove the observer when appropriate.</li></ul>"
1,Introduction to Firebase,8,Understanding Firebase Database concepts,yes,Questions,https://docs.google.com/presentation/d/1u-56CGZ43FI41MnVoE5W4JazSsd1BKyzBO-s-UoEYfs/edit?usp=sharing,xuebjw_gP4M,"<ul><li>Taking a brief intermission from making apps to talk about data that goes into the Firebase Database</li></ul>"
1,Introduction to Firebase,9,MovieQuotes Overview,,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,j1F0EnaWZvI,"<ul><li>Our next follow along app in this unit is called <b>Movie Quotes</b></li><li>We'll be updating our Core Data Movie Quotes app to make it much cooler. :)</li></ul>"
1,Introduction to Firebase,10,Backend setup,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,b3O9RsLFJ0U,"<ul><li>Create a new project on <a target='_blank' href='https://console.firebase.google.com/'>https://console.firebase.google.com/</a></li><li>We'll do the backend setup (pretty trivially easy with a BaaS)</li><li>We'll also show you that rules are possible (I just want you to know some things you can do)</li></ul><script src='https://gist.github.com/fisherds/51fd948369fa53d37429587f5cfbb2e7.js'></script>"
1,Introduction to Firebase,11,Web app,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,CmFXAfTExVo,"<ul><li>Here is the link to the <a target='_blank' href='https://github.com/rockwotj/FirebaseMovieQuotesWeb/tree/firebase-solution'>Web Client Code</a></li><li>Tyler Rockwood and I made this using AngularJs + Bootstrap</li><li>Here is the link to the <a target='_blank' href='https://firebase.google.com/docs/hosting/quickstart'>Firebase Hosting Deployment instructions</a></li><li>We wanted to include a web app since it shows that Firebase is for iOS, Android, and web. They all talk to the same backend.</li></ul>"
1,Introduction to Firebase,12,Firebase app setup,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,oOQcQ51la1c,"<ul><li>We'll get practice adding Firebase to an app again.  For the official instructions visit <a target='_blank' href='https://firebase.google.com/docs/ios/setup'>Add Firebase to your iOS Project</a></li><li>You need to <a target='_blank' href='https://drive.google.com/file/d/0B-KIW0IjgQ5pdDBKNGR3REdQYzA/view?usp=sharing'>get the starting code</a> or use your own MovieQuotesNoCoreDataYet app, then...</li><li>pod init, add your pods to the Podfile, pod install, open the .xcworkspace file, download your GoogleService-Info.plist file, and call FIRApp config</li></ul>"
1,Introduction to Firebase,13,Read via ChildAdded,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,0BihpKA9y0I,"<ul><li>We'll start with the <b>R</b> in C<b>R</b>UD this time since we already have some data.</li><li>When using the repeated object pattern in Firebase, retrieving data from the Database has three independent observers: .ChildAdded, .ChildChanged, and .ChildRemoved</li><li>In this video we'll implement only .ChildAdded (it's the most important)</li></ul>"
1,Introduction to Firebase,14,Read via ChildChanged and ChildRemoved,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,BfLlfxQc270,"<ul><li>We'll finish retrieving data from Firebase by implementing observers for .ChildChanged and .ChildRemoved</li><li>For .ChildChanged we'll just find the existing quote (the one with a matching key) and change the movie and quote values</li><li>For .ChildRemoved we'll just find the exiting quote (the one with a matching key) and remove it from the local copy of our array.</li><li>We still won't be able to edit or delete quotes form this app, but we'll be able to listen for when these event occur (done by either our web app or from the Firebase console)</li></ul>"
1,Introduction to Firebase,15,Create and Delete,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,L1E6P8kgS2s,"<ul><li>Because they will both be easy we'll implement <b>C</b> and <b>D</b> of <b>C</b>RU<b>D</b>.  So we'll be up to CRD after this video.</li><li>To create a value you first make an autogenerated key (which gives you a FIRDatabaseReference to that new location), then you set the value on that location.  Presto data is created.</li><li>To remove a value you take a FIRDatabaseReference and set the value to null via .removeValue().  Then the key gets auto cleaned up.  Presto gone.</li><li>My favorite part about Firebase is that CUD actions are completely independent of R.  R doesn't even care that it was this device that performed the CUD action.  Isn't that neat? :)</li></ul>"
1,Introduction to Firebase,16,Update,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,KP0bJWcj-NI,"<ul><li>We'll implement U in the MovieQuoteDetailViewController which will require two steps</li><li style='margin-left: 30px;'><b>R</b> - Setting up this view controller with a .Value event observer so that we can retrieve data initially and retrieve any changes (R for <b>this</b> view controller).</li><li style='margin-left: 30px;'><b>U</b> - Using .setValue to push changes whenever a user modifies a quote</li><li>To be super cool we'll push changes on every keystroke of an edit (not normally recommended but fun here).</li></ul>"
1,Introduction to Firebase,17,PhotoBucket Lab,yes,Questions,https://docs.google.com/presentation/d/1TUlB9uPRDOTbKEzEwiH_Kz7y8QWlmRKqZRfbXX3wpR8/edit?usp=sharing,youtubeId,"<ul><li>Coming soon</li></ul>"
