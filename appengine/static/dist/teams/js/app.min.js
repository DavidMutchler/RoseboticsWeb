CLIENT_ID="963009065087-2a5ccl5rhm4ghgm88li21fkjgsu5eua0@developer.gserviceaccount.com",SCOPES="https://www.googleapis.com/auth/userinfo.email",RESPONSE_TYPE="token id_token",init=function(){var o,a="//"+window.location.host+"/_ah/api";-1===window.location.host.indexOf("localhost")&&(a="https://roseboticsweb.appspot.com/_ah/api");var t=function(){0==--o&&angular.bootstrap(document,["TeamApp"])};o=2,gapi.client.load("teams","v1",t,a),gapi.client.load("oauth2","v2",t)};
"use strict";angular.module("TeamApp",["TeamControllers","ModalControllers","OverviewControllers","ManageControllers","TeamServices","InviteControllers","ui.bootstrap","ngRoute","TeamDirectives","angular.snackbar"]).config(["$routeProvider",function(e){e.when("/overview/",{templateUrl:"/static/teams/partials/overview.html",controller:"OverviewCtrl as overview"}).when("/preview/",{templateUrl:"/static/teams/partials/preview.html",controller:"PreviewCtrl as preview"}).when("/teams/",{templateUrl:"/static/teams/partials/teams.html",controller:"TeamsCtrl as teams",resolve:{teams:["api",function(e){return e.getTeams()}]}}).when("/teams/:team_key/courses",{templateUrl:"/static/teams/partials/teams_course.html",controller:"TeamsCourseCtrl as courses",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/teams/:team_key/courses/:course_name/tracks",{templateUrl:"/static/teams/partials/teams_track.html",controller:"TeamsTrackCtrl as tracks",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/teams/:team_key/courses/:course_name/tracks/:track_name/units",{templateUrl:"/static/teams/partials/teams_unit.html",controller:"TeamsUnitCtrl as units",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/invites/",{templateUrl:"/static/teams/partials/invites.html",controller:"InvitesCtrl as invites",resolve:{invites:["api",function(e){return e.getInvites()}]}}).when("/manage/",{templateUrl:"/static/teams/partials/manage.html",controller:"ManageCtrl as manage",resolve:{teams:["api",function(e){return e.getLeadTeams()}]}}).when("/manage/:team_key",{templateUrl:"/static/teams/partials/manage_team.html",controller:"ManageTeamCtrl as manage",resolve:{teams:["api",function(e){return e.getLeadTeams()}],user:["oAuth",function(e){return e.getUserInfo()}],courses:["api",function(e){return e.getCourses()}]}}).when("/manage/:team_key/sweeps",{templateUrl:"/static/teams/partials/manage_sweeps.html",controller:"SweepsTeamCtrl as sweeps",resolve:{teams:["api",function(e){return e.getLeadTeams()}],sweeps:["api","$route",function(e,t){return e.getSweeps(t.current.params)}],progress:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).otherwise({redirectTo:"/overview/"})}]).run(["$rootScope","$location","oAuth","sidebar",function(e,t,r,a){angular.element(document.querySelectorAll(".hidden.container")).removeClass("hidden"),angular.element(document.querySelector("div.spinner")).addClass("hidden"),r.check().then(null,function(){t.path("/preview"),a.show.set(!1)})}]);
angular.module("InviteControllers",[]).controller("InvitesCtrl",["invites","api","snackbar",function(e,s,n){this.pending=[],this.accepted=[];var t=e.invites;void 0==t&&(t=[]);for(var i=0;i<t.length;i++)"NOT_CHOSEN"===t[i].response?this.pending.push(t[i]):this.accepted.push(t[i]);var r=this;this.editInvite=function(e,t){var i=!1;if("NOT_CHOSEN"===e.response&&"NOT_CHOSEN"!==t){for(var o=0;o<r.pending.length;o++)if(r.pending[o].team_key===e.team_key){r.pending.splice(o,1);break}r.accepted.push(e),i=!0}if("REJECT_INVITE"===t){for(var o=0;o<r.accepted.length;o++)if(r.accepted[o].team_key===e.team_key){r.accepted.splice(o,1);break}i=!0}e.response=t,n.create("Sending response...",4),s.editInvite(e).then(function(){n.remove(4),n.createWithTimeout("<b>Success!</b> Response saved"),i&&s.getTeams(!0)},function(){n.remove(4),n.createWithTimeout("<b>Error!</b> Response not saved")})},this.pendingResponses=["NOT_CHOSEN","ALL_MEMBERS","TEAM_LEADER","REJECT_INVITE"],this.acceptedResponses=["ALL_MEMBERS","TEAM_LEADER","REJECT_INVITE"],this.responseOptions={NOT_CHOSEN:"No response",ALL_MEMBERS:"All members can see my progress",TEAM_LEADER:"Only the leader can see my progress",REJECT_INVITE:"Reject invite and no one can see my progress"}}]);
angular.module("ManageControllers",[]).controller("ManageCtrl",["$modal","teams","api","snackbar","oAuth",function(e,t,r,o,a){this.items=t.teams;var s=this;this.toggleCreateTeamModal=function(){var n=e.open({templateUrl:"/static/teams/partials/modals/create_team_modal.html",controller:"CreateTeamModalInstanceCtrl",controllerAs:"modal",resolve:{user:function(){return a.getUserInfo()},courses:function(){return r.getCourses()}}});n.result.then(function(e){o.create("Creating team...",1),r.insertTeam(e).then(function(e){o.remove(1),o.createWithTimeout("<b>Success!</b> Team created"),void 0==t.teams&&(t.teams=[],s.items=t.teams),t.teams.push(e)},function(e){o.remove(1),o.createWithTimeout("<b>Error!</b> Team not created")})})}}]).controller("ManageTeamCtrl",["$routeParams","$modal","teams","$scope","snackbar","api","$location","user","courses",function(e,t,r,o,a,s,n,i,m){for(var l=r.teams,u=-1,c=0;c<l.length;c++)if(l[c].team_key==e.team_key){this.team=l[c],u=c;break}this.goToSweep=function(){n.path(n.path()+"/sweeps")},this.offeredCourses=m,console.log(m),this.getCourseTitle=function(e){for(var t=0;t<m.ids.length;t++)if(m.ids[t]===e)return m.titles[t];return""};var p=0,h=this,d=o.$watch(function(){return h.team},function(){p++,h.onInputMadeDirty(p)},!0);this.onInputMadeDirty=function(e){e>1&&(a.createWithTimeout("<b>Warning!</b> You must press submit to save your changes"),d())},this.deleteMember=function(e){for(var t=h.team.members,r=0;r<t.length;r++)if(t[r].email==e.email){t.splice(r,1);break}},this.saveTeam=function(){a.create("Saving team...",3),s.insertTeam(h.team).then(function(e){a.remove(3),a.createWithTimeout("<b>Success!</b> Team saved")},function(){a.remove(3),a.createWithTimeout("<b>Error!</b> Team not saved")})},this.toggleDeleteTeamModal=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/delete_team_modal.html",controller:"DeleteTeamModalInstanceCtrl",controllerAs:"modal"});e.result.then(function(){l.splice(c,1),a.create("Deleting team...",2),s.deleteTeam(h.team).then(function(){a.remove(2),a.createWithTimeout("<b>Success!</b> Team deleted")},function(){a.remove(2),a.createWithTimeout("<b>Error!</b> Team not deleted")}),n.path("/manage")})},this.toggleCreateMemberModal=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/create_member_modal.html",controller:"NewMemberModalInstanceCtrl",controllerAs:"modal"});e.result.then(function(e){var t={email:e,visibility:"NOT_CHOSEN"};void 0==h.team.members&&(h.team.members=[]),e==i.email&&(t.visibility="ALL_MEMBERS"),h.team.members.push(t),h.team.newMembers=!0})},this.visibilityOptions={NOT_CHOSEN:"No Response",ALL_MEMBERS:"Progress visible by everyone",TEAM_LEADER:"Progress visible by leader only"}}]).controller("SweepsTeamCtrl",["$routeParams","$modal","teams","sweeps","$location","progress","snackbar","api","$scope",function(e,t,r,o,a,s,n,i,m){var l=r.teams;this.sweeps=o.sweeps||[];var u=-1;this.today=new Date,this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"],this.done=function(){a.path("/manage/"+e.team_key)};for(var c=0;c<l.length;c++)if(l[c].team_key==e.team_key){this.team=l[c],u=c;break}for(var p=this,c=0;c<this.sweeps.length;c++){var h=this.sweeps[c];h.hourNum=parseInt(h.hour);var d=new Date(0);d.setFullYear(h.year),d.setMonth(parseInt(h.month)-1,parseInt(h.day)),h.dt=d}this.saveSweep=function(e){n.create("Saving Sweep...",6),e.hour=e.hourNum.toString(),e.year=e.dt.getFullYear().toString(),e.month=(e.dt.getMonth()+1).toString(),e.day=e.dt.getDate().toString(),i.insertSweep(e).then(function(e){n.remove(6),n.createWithTimeout("<b>Success!</b> Sweep saved")},function(){n.remove(6),n.createWithTimeout("<b>Error!</b> Sweep not saved")})},this.deleteSweep=function(e){n.create("Removing Sweep...",7),i.deleteSweep(e).then(function(){for(var t=0;t<p.sweeps.length;t++)if(e.sweep_key===p.sweeps[t].sweep_key){p.sweeps.splice(t,1);break}n.remove(7),n.createWithTimeout("<b>Success!</b> Sweep removed")},function(){n.remove(7),n.createWithTimeout("<b>Error!</b> Sweep not removed")})},this.stopEvent=function(e){e.preventDefault(),e.stopPropagation()},this.toggleImportSweepsDialog=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/import_sweeps_modal.html",controller:"ImportSweepsModalInstanceCtrl",controllerAs:"modal",resolve:{teams:function(){return l}}});e.result.then(function(e){console.log(e),n.create("Importing from "+e.name+"...",10),i.getSweeps(e).then(function(e){if(console.log(e),!e.sweeps||!e.sweeps.length)return n.remove(10),void n.createWithTimeout("<b>Error!</b> There were no sweeps to import");for(var t=0;t<e.sweeps.length;t++){var r=e.sweeps[t];delete r.sweep_key,r.team_key=p.team.team_key,i.insertSweep(r).then(function(e){console.log(e),e.hourNum=parseInt(e.hour);var t=new Date(0);t.setFullYear(e.year),t.setMonth(parseInt(e.month)-1,parseInt(e.day)),e.dt=t,void 0==o.sweeps&&(o.sweeps=[],p.sweeps=o.sweeps);for(var r=!1,a=0;a<p.sweeps.length;a++)if(p.sweeps[a].dt.getTime()<e.dt.getTime()||p.sweeps[a].dt.getTime()===e.dt.getTime()&&p.sweeps[a].hourNum<e.hourNum){p.sweeps.splice(a,0,e),r=!0;break}r||p.sweeps.push(e)})}n.remove(10),n.createWithTimeout("<b>Success!</b> Sweeps Imported")},function(){n.remove(10),n.createWithTimeout("<b>Error!</b> Import failed")})})},this.toggleSweepOptionsModal=function(e){var r=t.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"SweepOptionsModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return s},optionString:function(){return e.options}}});r.result.then(function(t){e.options=t})},this.toggleCreateSweepDialog=function(){var r=t.open({templateUrl:"/static/teams/partials/modals/create_sweep_modal.html",controller:"NewSweepModalInstanceCtrl",controllerAs:"modal",resolve:{team_key:function(){return e.team_key},progress:function(){return s}}});r.result.then(function(e){n.create("Creating Sweep...",8),e.hour=e.hourNum.toString(),e.year=e.dt.getFullYear().toString(),e.month=(e.dt.getMonth()+1).toString(),e.day=e.dt.getDate().toString();for(var t=e.repeats||0,r=[e],a=function(e,t){return new Date(e.getFullYear(),e.getMonth(),e.getDate()+7*t)},s=1;t>=s;s++){var m=angular.copy(r[0]),l=a(m.dt,s);m.year=l.getFullYear().toString(),m.month=(l.getMonth()+1).toString(),m.day=l.getDate().toString(),r.push(m)}for(var u=0;u<r.length;u++)e=r[u],i.insertSweep(e).then(function(e){e.hourNum=parseInt(e.hour);var t=new Date(0);t.setFullYear(e.year),t.setMonth(parseInt(e.month)-1,parseInt(e.day)),e.dt=t,void 0==o.sweeps&&(o.sweeps=[],p.sweeps=o.sweeps);for(var r=!1,a=0;a<p.sweeps.length;a++)if(p.sweeps[a].dt.getTime()<e.dt.getTime()||p.sweeps[a].dt.getTime()===e.dt.getTime()&&p.sweeps[a].hourNum<e.hourNum){p.sweeps.splice(a,0,e),r=!0;break}r||p.sweeps.push(e),n.remove(8),n.createWithTimeout("<b>Success!</b> Sweep created")},function(){n.remove(8),n.createWithTimeout("<b>Error!</b> Sweep not created")})})}}]);
angular.module("ModalControllers",[]).controller("ModalToggleCtrl",["$modal",function(e){this.toggleSignOutModal=function(){e.open({templateUrl:"logout_modal.html",controller:"SimpleModalInstanceCtrl",controllerAs:"modal"})},this.toggleEditProfileModal=function(){e.open({templateUrl:"edit_profile_modal.html",controller:"SimpleModalInstanceCtrl",controllerAs:"modal"})}}]).controller("SimpleModalInstanceCtrl",["$modalInstance",function(e){this.cancel=function(){e.dismiss("cancel")}}]).controller("NewMemberModalInstanceCtrl",["$modalInstance","$controller",function(e,t){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.email="",this.addMember=function(t){return t=t.trim(),0===t.length?void e.dismiss("cancel"):(t.indexOf("@")<0&&(t+="@gmail.com"),void e.close(t))}}]).controller("DeleteTeamModalInstanceCtrl",["$modalInstance","$controller",function(e,t){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.remove=function(){e.close()}}]).controller("ImportSweepsModalInstanceCtrl",["$modalInstance","$controller","teams",function(e,t,n){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.teams=n,this.selectedTeam=n[0],this["import"]=function(){e.close(this.selectedTeam)}}]).controller("CreateTeamModalInstanceCtrl",["$modalInstance","$controller","user","courses","CSV","$scope",function(e,t,n,o,s,a){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.teamName="",this.teamMembers="",this.includeLeader=!1,this.file=!1;var r=this;this.courses=angular.copy(o.ids),this.offeredCourses=o,this.getCourseTitle=function(e){for(var t=0;t<o.ids.length;t++)if(o.ids[t]===e)return o.titles[t];return""},this.upload=function(){var e=function(e){alert(e)},t=new FileReader;t.onload=function(n){var o=t.result,l=null;try{l=s.toArray(o)}catch(n){e("Cannot read CSV!")}for(var i=!1,c=[],m=0;m<l.length;m++){var p=l[m];if(i===!1)for(var u=0;u<p.length;u++)"Email"===p[u]&&(i=u);else p.length>i&&c.push(p[i].toLowerCase())}a.$apply(function(){r.teamMembers+=c.join()})},t.readAsText(this.file)},this.add=function(){for(var t={name:r.teamName,leader:n.email,members:[],courses:r.courses},o=r.teamMembers.split(","),s=0;s<o.length;s++){var a=o[s].trim();0!==a.length&&(a.indexOf("@")<0&&(a+="@gmail.com"),t.members.push({email:a,visibility:"NOT_CHOSEN"}))}r.includeLeader&&t.members.push({email:n.email,visibility:"ALL_MEMBERS"}),e.close(t)}}]).controller("ExportModalParentCtrl",["$modalInstance","$controller","team","$window",function(e,t,n){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.team=n,this.fullname=!0,this.username=!0,this.hasTimestamp=!0,this.pointValue="tasks",this.pointsPerUnit=parseInt(localStorage.getItem("ppu"))||1,this.pointsPerTask=parseInt(localStorage.getItem("ppt"))||1,this.includeCourseProgress=!1,this.includeTrackProgress=!1,this.timezone="EST",this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"];this.generate=function(){var e="team_urlsafe="+n.team_key;this.fullname&&(e+="&student_name=true"),this.username&&(e+="&rose_username=true"),this.hasTimestamp&&(e+="&timezone="+this.timezone),this.includeCourseProgress&&(e+="&course_progress=true"),this.includeTrackProgress&&(e+="&track_progress=true"),"points"===this.pointValue?(e+="&ppu="+this.pointsPerUnit,localStorage.setItem("ppu",this.pointsPerUnit)):(e+="&ppt="+this.pointsPerTask,localStorage.setItem("ppt",this.pointsPerTask)),this.onPostGenerate(e)}}]).controller("ExportModalInstanceCtrl",["$modalInstance","$controller","team","$window",function(e,t,n,o){angular.extend(this,t("ExportModalParentCtrl",{$modalInstance:e,$controller:t,team:n})),this.onPostGenerate=function(t){var n="http://"+o.location.host+"/teams/export.csv?";o.open(n+encodeURI(t),"_blank"),e.close()},this.doneButtonText="Generate"}]).controller("NewSweepModalInstanceCtrl",["$modalInstance","$controller","team_key","$modal","progress",function(e,t,n,o,s){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e}));var a=localStorage.getItem("ppu")||"1";this.sweep={dt:new Date,team_key:n,options:"student_name=true&rose_username=true&timezone=EST&ppu="+a,hourNum:12,tz:"EST"},this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"],this.today=new Date,this.doesRepeat=!1,this.repeatWeeks=0,this.stopEvent=function(e){e.preventDefault(),e.stopPropagation()},this.addSweep=function(){this.doesRepeat&&(this.sweep.repeats=this.repeatWeeks),e.close(this.sweep)};var r=this;this.toggleSweepOptionsModal=function(){var e=o.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"SweepOptionsModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return s},optionString:function(){return r.sweep.options}}});e.result.then(function(e){r.sweep.options=e})}}]).controller("SweepOptionsModalInstanceCtrl",["$modalInstance","$controller","team","optionString",function(e,t,n,o){if(angular.extend(this,t("ExportModalParentCtrl",{$modalInstance:e,$controller:t,team:n})),this.onPostGenerate=function(t){e.close(t)},this.doneButtonText="Done",""!==o){var s={};o=o.split("&");for(var a=0;a<o.length;a++){var r=o[a].split("=");s[r[0]]=r[1]}this.fullname="true"===s.student_name,this.username="true"===s.rose_username,this.hasTimestamp=void 0!=s.timezone,this.pointValue=s.ppu?"points":"tasks",this.pointsPerUnit=parseInt(s.ppu)||parseInt(localStorage.getItem("ppu"))||1,this.pointsPerTask=parseInt(s.ppt)||parseInt(localStorage.getItem("ppt"))||1,this.includeCourseProgress="true"===s.course_progress,this.includeTrackProgress="true"===s.track_progress,this.timezone=s.timezone||"EST",this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"]}}]);
angular.module("OverviewControllers",[]).controller("OverviewCtrl",function(){}).controller("PreviewCtrl",["oAuth","$location","sidebar","$rootScope","snackbar","userEmail",function(t,e,o,n,r,i){t.check().then(function(){e.path("/overview"),o.show.set(!0),n.$apply()}),this.signup=function(){t.signup().then(function(){t.getUserInfo().then(function(t){t.email!==i&&r.createWithTimeout("<b>Danger!</b> Signing up for teams with another account may cause errors!",6e3)}),e.path("/overview"),o.show.set(!0)},function(){r.createWithTimeout("<b>Error!</b> Sign up failed")})}}]).controller("SidebarCtrl",["sidebar","$location","$scope",function(t,e,o){this.routes=t.routes,this.show=t.show.get();var n=this;o.$watch(function(){return t.show.get()},function(t){n.show=t}),this.isActive=function(t){var o=e.path();return t=t.substring(1),o.startsWith(t)}}]);
angular.module("TeamControllers",[]).controller("TeamsCtrl",["$modal","teams",function(r,e){this.items=e.teams}]).controller("TeamsParentCtrl",["$modal","team",function(r,e){this.toggleExportProgressModal=function(){r.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"ExportModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return e}}})}}]).controller("TeamsCourseCtrl",["$modal","team","$controller",function(r,e,s){if(angular.extend(this,s("TeamsParentCtrl",{$modal:r,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.courses=[],e.members_progress.length>0){courses=e.members_progress[0].course_progress;for(var t=0;t<courses.length;t++)this.courses.push(courses[t].name)}}]).controller("TeamsTrackCtrl",["$routeParams","team","$modal","$controller",function(r,e,s,t){if(angular.extend(this,t("TeamsParentCtrl",{$modal:s,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.course=r.course_name,this.tracks=[],e.members_progress.length>0)for(var o=e.members_progress[0].course_progress,a=0;a<o.length;a++)if(o[a].name===this.course){this.courseNum=a;for(var m=o[a].track_progress,n=0;n<m.length;n++)this.tracks.push(m[n].name);break}var l=this;this.getProgressForMemberTrack=function(r,e){return r.course_progress[l.courseNum].track_progress[e].progress}}]).controller("TeamsUnitCtrl",["$routeParams","team","$modal","$controller",function(r,e,s,t){if(angular.extend(this,t("TeamsParentCtrl",{$modal:s,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.course=r.course_name,this.track=r.track_name,this.units=[],e.members_progress.length>0)for(var o=e.members_progress[0].course_progress,a=0;a<o.length;a++)if(o[a].name===this.course){this.courseNum=a;for(var m=o[a].track_progress,n=0;n<m.length;n++)if(m[n].name===this.track){this.trackNum=n;for(var l=m[n].unit_progress,i=0;i<l.length;i++)this.units.push(l[i].name);break}break}var c=this;this.getProgressForMemberUnit=function(r,e){return r.course_progress[c.courseNum].track_progress[c.trackNum].unit_progress[e].progress}}]);
angular.module("TeamServices",[]).factory("sidebar",function(){var e=!0;return{routes:[{name:"Overview",href:"#/overview/"},{name:"Teams",href:"#/teams/"},{name:"Invites",href:"#/invites/"},{name:"Manage",href:"#/manage/"}],show:{get:function(){return e},set:function(t){e=t}}}}).factory("userEmail",["$rootScope",function(e){return e.userEmail}]).factory("CSV",function(){var e=function(e,t){t=t||",";for(var i=new RegExp("(\\"+t+'|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\'+t+"\\r\\n]*))","gi"),n=[[]],r=null;r=i.exec(e);){var s=r[1];if(s.length&&s!=t&&n.push([]),r[2])var a=r[2].replace(new RegExp('""',"g"),'"');else var a=r[3];n[n.length-1].push(a)}return n};return{toArray:e}}).service("oAuth",["$q","$location",function(e,t){var i=function(t){return function(){var i=e.defer();return gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:t},function(e){e.error?i.reject(e):i.resolve(e)}),i.promise}};this.signup=i(!1),this.check=i(!0),this.execute=function(t){var i=e.defer();return gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:!0},function(){t.execute(function(e){e.code?i.reject(e):i.resolve(e.result)})}),i.promise},this.getUserInfo=function(){return this.execute(gapi.client.oauth2.userinfo.get())}}]).service("api",["oAuth","$q",function(e,t){var i={};this.deleteCache=function(){i={}};var n=function(n,r){return function(s){var a=t.defer();return void 0!=i[n]&&void 0==s?(a.resolve(i[n]),a.promise):(e.execute(r).then(function(e){i[n]=e,a.resolve(e)},function(e){a.reject(e)}),a.promise)}},r=function(n,r){return function(s){var a=t.defer();return void 0!=i[n+s.team_key]?(a.resolve(i[n+s.team_key]),a.promise):(e.execute(r(s)).then(function(e){i[n+s.team_key]=e,a.resolve(e)},function(e){a.reject(e)}),a.promise)}};this.deleteTeam=function(t){if(void 0!=i.get_teams)for(var n=i.get_teams.teams,r=0;r<n.length;r++)if(t.team_key==n[r].team_key){n.splice(r,1);break}return e.execute(gapi.client.teams["delete"](t))},this.insertTeam=function(n){var r=t.defer(),s=void 0!=i.get_teams,a=void 0,o=void 0==n.team_key;return s&&(a=i.get_teams.teams,void 0==a&&(i.get_teams.teams=[],a=i.get_teams.teams)),e.execute(gapi.client.teams.insert(n)).then(function(e){if(s)if(o)a.push(e);else for(var t=0;t<a.length;t++)if(e.team_key===a[t].team_key){a[t]=e;break}r.resolve(e)},function(e){r.reject(e)}),r.promise},this.getInvites=n("get_invites",gapi.client.teams.invites.list()),this.editInvite=function(t){return e.execute(gapi.client.teams.invites.respond(t))},this.getTeams=n("get_teams",gapi.client.teams.list.all()),this.getLeadTeams=n("get_lead_teams",gapi.client.teams.list.leader()),this.getProgress=r("progress",gapi.client.teams.progress),this.getSweeps=r("sweep",gapi.client.teams.sweeps.get),this.insertSweep=function(t){return e.execute(gapi.client.teams.sweeps.insert(t))},this.deleteSweep=function(t){return e.execute(gapi.client.teams.sweeps["delete"](t))},this.getCourses=n("courses",gapi.client.teams.courses())}]);
angular.module("TeamDirectives",[]).directive("teamTitle",function(){return{restrict:"E",scope:{team:"="},templateUrl:"/static/teams/partials/components/team_title.html"}}).directive("routeLoadingIndicator",["$rootScope",function(e){return{restrict:"E",templateUrl:"/static/teams/partials/components/loading_spinner.html",link:function(t,n,i){e.$on("$routeChangeStart",function(){e.isRouteLoading=!0}),e.$on("$routeChangeSuccess",function(){e.isRouteLoading=!1})}}}]).directive("fileChange",function(){return{restrict:"A",require:"ngModel",scope:{fileChange:"&"},link:function(e,t,n,i){function r(){n.multiple?i.$setViewValue(t[0].files):i.$setViewValue(t[0].files[0]),e.$apply(function(){e.fileChange()})}t.on("change",r),e.$on("destroy",function(){t.off("change",r)})}}}).filter("percentage",["$filter",function(e){return function(t,n){return e("number")(100*t,n)+"%"}}]).filter("pendingSweeps",function(){return function(e){var t=new Date,n=new Date(0);n.setFullYear(t.getFullYear()),n.setMonth(t.getMonth(),t.getDate());var i=t.getHours(),r=[];return angular.forEach(e,function(e){(e.dt.getTime()>n.getTime()||e.dt.getTime()===n.getTime()&&e.hourNum>i)&&r.push(e)}),r}}).filter("firedSweeps",function(){return function(e){var t=new Date,n=new Date(0);n.setFullYear(t.getFullYear()),n.setMonth(t.getMonth(),t.getDate());var i=t.getHours(),r=[];return angular.forEach(e,function(e){(e.dt.getTime()<n.getTime()||e.dt.getTime()===n.getTime()&&e.hourNum<=i)&&r.push(e)}),r}});
!function(a){"use strict";var n=a.module("angular.snackbar",[]);n.factory("snackbar",["$rootScope",function(a){return{createWithTimeout:function(n,e){a.$broadcast("createSnackbarWithTimeout",{content:n,duration:e})},create:function(n,e){a.$broadcast("createSnackbar",{content:n,id:e})},remove:function(n){a.$broadcast("removeSnackbar",{id:n})}}}]),n.directive("snackbar",["$rootScope","$compile","$timeout",function(n,e,c){return function(t,r,o){var s=a.element(r),i=o.snackbarDuration||3e3,u=o.snackbarRemoveDelay||20;n.$on("createSnackbarWithTimeout",function(n,r){var o='<div class="snackbar snackbar-opened"><span class="snackbar-content">'+r.content+"</span></div>",b=a.element(e(o)(t));s.append(b),c(function(){b.removeClass("snackbar-opened"),c(function(){b.remove()},u,!1)},r.duration||i,!1)}),n.$on("createSnackbar",function(n,c){var r='<div class="snackbar snackbar-opened snackbar-id-'+c.id+'"><span class="snackbar-content">'+c.content+"</span></div>",o=a.element(e(r)(t));s.append(o)}),n.$on("removeSnackbar",function(n,e){var c=a.element(s[0].getElementsByClassName("snackbar-id-"+e.id));c.removeClass("snackbar-opened"),c.remove()})}}])}(angular);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UuanMiLCJhcHAuanMiLCJpbnZpdGVzX2NvbnRyb2xsZXJzLmpzIiwibWFuYWdlX2NvbnRyb2xsZXJzLmpzIiwibW9kYWxfY29udHJvbGxlcnMuanMiLCJvdmVydmlld19jb250cm9sbGVycy5qcyIsInRlYW1zX2NvbnRyb2xsZXJzLmpzIiwic2VydmljZXMuanMiLCJkaXJlY3RpdmVzLmpzIiwiYW5ndWxhci5zbmFja2Jhci5taW4uanMiXSwibmFtZXMiOlsiQ0xJRU5UX0lEIiwiU0NPUEVTIiwiUkVTUE9OU0VfVFlQRSIsImluaXQiLCJhcGlzVG9Mb2FkIiwiYXBpUm9vdCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaG9zdCIsImluZGV4T2YiLCJjYWxsYmFjayIsImFuZ3VsYXIiLCJib290c3RyYXAiLCJkb2N1bWVudCIsImdhcGkiLCJjbGllbnQiLCJsb2FkIiwibW9kdWxlIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicmVzb2x2ZSIsInRlYW1zIiwiYXBpIiwiZ2V0VGVhbXMiLCJ0ZWFtIiwiJHJvdXRlIiwiZ2V0UHJvZ3Jlc3MiLCJjdXJyZW50IiwicGFyYW1zIiwiaW52aXRlcyIsImdldEludml0ZXMiLCJnZXRMZWFkVGVhbXMiLCJ1c2VyIiwib0F1dGgiLCJnZXRVc2VySW5mbyIsImNvdXJzZXMiLCJnZXRDb3Vyc2VzIiwic3dlZXBzIiwiZ2V0U3dlZXBzIiwicHJvZ3Jlc3MiLCJvdGhlcndpc2UiLCJyZWRpcmVjdFRvIiwicnVuIiwiJHJvb3RTY29wZSIsIiRsb2NhdGlvbiIsInNpZGViYXIiLCJlbGVtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInJlbW92ZUNsYXNzIiwicXVlcnlTZWxlY3RvciIsImFkZENsYXNzIiwiY2hlY2siLCJ0aGVuIiwicGF0aCIsInNob3ciLCJzZXQiLCJzbmFja2JhciIsInRoaXMiLCJwZW5kaW5nIiwiYWNjZXB0ZWQiLCJhbGxJbnZpdGVzIiwidW5kZWZpbmVkIiwiaSIsImxlbmd0aCIsInJlc3BvbnNlIiwicHVzaCIsInNlbGYiLCJlZGl0SW52aXRlIiwiaW52aXRlIiwibmV3UmVzcG9uc2UiLCJyZWZyZXNoVGVhbXMiLCJ0ZWFtX2tleSIsInNwbGljZSIsImNyZWF0ZSIsInJlbW92ZSIsImNyZWF0ZVdpdGhUaW1lb3V0IiwicGVuZGluZ1Jlc3BvbnNlcyIsImFjY2VwdGVkUmVzcG9uc2VzIiwicmVzcG9uc2VPcHRpb25zIiwiTk9UX0NIT1NFTiIsIkFMTF9NRU1CRVJTIiwiVEVBTV9MRUFERVIiLCJSRUpFQ1RfSU5WSVRFIiwiJG1vZGFsIiwiaXRlbXMiLCJ0b2dnbGVDcmVhdGVUZWFtTW9kYWwiLCJtb2RhbEluc3RhbmNlIiwib3BlbiIsImNvbnRyb2xsZXJBcyIsInJlc3VsdCIsIm5ld1RlYW0iLCJpbnNlcnRUZWFtIiwiZXJyb3IiLCIkcm91dGVQYXJhbXMiLCIkc2NvcGUiLCJ0ZWFtTnVtYmVyIiwiZ29Ub1N3ZWVwIiwib2ZmZXJlZENvdXJzZXMiLCJjb25zb2xlIiwibG9nIiwiZ2V0Q291cnNlVGl0bGUiLCJwcmVmaXgiLCJpZHMiLCJ0aXRsZXMiLCJ0aW1lc0NoYW5nZWQiLCJkZXJlZ2lzdGVyIiwiJHdhdGNoIiwib25JbnB1dE1hZGVEaXJ0eSIsImRlbGV0ZU1lbWJlciIsIm1lbWJlciIsIm1lbWJlcnMiLCJlbWFpbCIsInNhdmVUZWFtIiwidG9nZ2xlRGVsZXRlVGVhbU1vZGFsIiwiZGVsZXRlVGVhbSIsInRvZ2dsZUNyZWF0ZU1lbWJlck1vZGFsIiwibmV3RW1haWwiLCJuZXdNZW1iZXIiLCJ2aXNpYmlsaXR5IiwibmV3TWVtYmVycyIsInZpc2liaWxpdHlPcHRpb25zIiwidG9kYXkiLCJEYXRlIiwidGltZXpvbmVzIiwiZG9uZSIsInN3ZWVwIiwiaG91ck51bSIsInBhcnNlSW50IiwiaG91ciIsImR0Iiwic2V0RnVsbFllYXIiLCJ5ZWFyIiwic2V0TW9udGgiLCJtb250aCIsImRheSIsInNhdmVTd2VlcCIsInRvU3RyaW5nIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJpbnNlcnRTd2VlcCIsIm5ld1N3ZWVwIiwiZGVsZXRlU3dlZXAiLCJzd2VlcF9rZXkiLCJzdG9wRXZlbnQiLCIkZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInRvZ2dsZUltcG9ydFN3ZWVwc0RpYWxvZyIsInRlYW1Ub0ltcG9ydEZyb20iLCJuYW1lIiwiaW1wb3J0ZWRTd2VlcHMiLCJpbnNlcnRlZCIsImdldFRpbWUiLCJ0b2dnbGVTd2VlcE9wdGlvbnNNb2RhbCIsIm9wdGlvblN0cmluZyIsIm9wdGlvbnMiLCJuZXdPcHRpb25zIiwidG9nZ2xlQ3JlYXRlU3dlZXBEaWFsb2ciLCJyZXBlYXRzIiwibmV3U3dlZXBzIiwibmV4dFdlZWsiLCJkYXRlIiwidGltZXMiLCJjb3B5IiwiaiIsInRvZ2dsZVNpZ25PdXRNb2RhbCIsInRvZ2dsZUVkaXRQcm9maWxlTW9kYWwiLCIkbW9kYWxJbnN0YW5jZSIsImNhbmNlbCIsImRpc21pc3MiLCIkY29udHJvbGxlciIsImV4dGVuZCIsImFkZE1lbWJlciIsInRyaW0iLCJjbG9zZSIsInNlbGVjdGVkVGVhbSIsIkNTViIsInRlYW1OYW1lIiwidGVhbU1lbWJlcnMiLCJpbmNsdWRlTGVhZGVyIiwiZmlsZSIsInVwbG9hZCIsInNob3dFcnJvciIsIm1zZyIsImFsZXJ0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImUiLCJ0ZXh0IiwiY3N2IiwidG9BcnJheSIsImVtYWlsQ29sIiwiZW1haWxzIiwicm93IiwidG9Mb3dlckNhc2UiLCIkYXBwbHkiLCJqb2luIiwicmVhZEFzVGV4dCIsImFkZCIsImxlYWRlciIsInNwbGl0IiwiZnVsbG5hbWUiLCJ1c2VybmFtZSIsImhhc1RpbWVzdGFtcCIsInBvaW50VmFsdWUiLCJwb2ludHNQZXJVbml0IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBvaW50c1BlclRhc2siLCJpbmNsdWRlQ291cnNlUHJvZ3Jlc3MiLCJpbmNsdWRlVHJhY2tQcm9ncmVzcyIsInRpbWV6b25lIiwiZ2VuZXJhdGUiLCJsYW5kaW5nUXMiLCJzZXRJdGVtIiwib25Qb3N0R2VuZXJhdGUiLCIkd2luZG93IiwicXMiLCJsYW5kaW5nVXJsIiwiZW5jb2RlVVJJIiwiZG9uZUJ1dHRvblRleHQiLCJwcHVEZWZhdWx0IiwidHoiLCJkb2VzUmVwZWF0IiwicmVwZWF0V2Vla3MiLCJhZGRTd2VlcCIsIm9wIiwidXNlckVtYWlsIiwic2lnbnVwIiwidXNlckluZm8iLCJyb3V0ZXMiLCJnZXQiLCJ2YWx1ZSIsImlzQWN0aXZlIiwicm91dGVVcmwiLCJzdWJzdHJpbmciLCJzdGFydHNXaXRoIiwidG9nZ2xlRXhwb3J0UHJvZ3Jlc3NNb2RhbCIsIm1lbWJlcnNfcHJvZ3Jlc3MiLCJjb3Vyc2VfcHJvZ3Jlc3MiLCJjb3Vyc2UiLCJjb3Vyc2VfbmFtZSIsInRyYWNrcyIsImNvdXJzZU51bSIsImNvdXJzZVRyYWNrcyIsInRyYWNrX3Byb2dyZXNzIiwiZ2V0UHJvZ3Jlc3NGb3JNZW1iZXJUcmFjayIsInRyYWNrTnVtIiwidHJhY2siLCJ0cmFja19uYW1lIiwidW5pdHMiLCJ0cmFja1VuaXRzIiwidW5pdF9wcm9ncmVzcyIsImsiLCJnZXRQcm9ncmVzc0Zvck1lbWJlclVuaXQiLCJ1bml0TnVtIiwiZmFjdG9yeSIsImlzU2hvd2luZyIsImhyZWYiLCJzaG93aW5nIiwiQ1NWVG9BcnJheSIsInN0ckRhdGEiLCJzdHJEZWxpbWl0ZXIiLCJvYmpQYXR0ZXJuIiwiUmVnRXhwIiwiYXJyRGF0YSIsImFyck1hdGNoZXMiLCJleGVjIiwic3RyTWF0Y2hlZERlbGltaXRlciIsInN0ck1hdGNoZWRWYWx1ZSIsInJlcGxhY2UiLCJzZXJ2aWNlIiwiJHEiLCJzaWduaW4iLCJpbW1lZGlhdGUiLCJwIiwiZGVmZXIiLCJhdXRoIiwiYXV0aG9yaXplIiwiY2xpZW50X2lkIiwic2NvcGUiLCJhdXRoUmVzdWx0IiwicmVqZWN0IiwicHJvbWlzZSIsImV4ZWN1dGUiLCJhcGlNZXRob2QiLCJyZXNwIiwiY29kZSIsIm9hdXRoMiIsInVzZXJpbmZvIiwiY2FjaGUiLCJkZWxldGVDYWNoZSIsImNhY2hlZEFwaUNhbGwiLCJjYWNoZUtleSIsImZvcmNlUmVmcmVzaCIsImNhY2hlZFRlYW1BcGlDYWxsIiwidHlwZSIsInVwZGF0ZUNhY2hlIiwiaW5zZXJ0IiwibGlzdCIsInJlc3BvbmQiLCJhbGwiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsImxpbmsiLCJlbGVtIiwiYXR0cnMiLCIkb24iLCJpc1JvdXRlTG9hZGluZyIsInJlcXVpcmUiLCJmaWxlQ2hhbmdlIiwiY3RybCIsIm9uQ2hhbmdlIiwibXVsdGlwbGUiLCIkc2V0Vmlld1ZhbHVlIiwiZmlsZXMiLCJvbiIsIm9mZiIsImZpbHRlciIsIiRmaWx0ZXIiLCJpbnB1dCIsImRlY2ltYWxzIiwibm93IiwiY29tcGFyZURhdGUiLCJnZXRIb3VycyIsImZpbHRlcmVkIiwiZm9yRWFjaCIsIml0ZW0iLCJhIiwibiIsIiRicm9hZGNhc3QiLCJjb250ZW50IiwiZHVyYXRpb24iLCJpZCIsImMiLCJ0IiwiciIsIm8iLCJzIiwic25hY2tiYXJEdXJhdGlvbiIsInUiLCJzbmFja2JhclJlbW92ZURlbGF5IiwiYiIsImFwcGVuZCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiXSwibWFwcGluZ3MiOiJBQXFCQUEsVUFBWSw4RUFNWkMsT0FBUyxpREFPVEMsY0FBZ0IsaUJBUWhCQyxLQUFPLFdBQ04sR0FBSUMsR0FDQUMsRUFBVSxLQUFPQyxPQUFPQyxTQUFTQyxLQUFPLFVBRU0sTUFBOUNGLE9BQU9DLFNBQVNDLEtBQUtDLFFBQVEsZUFDaENKLEVBQVUsNENBRVgsSUFBSUssR0FBVyxXQUNNLEtBQWROLEdBRUxPLFFBQVFDLFVBQVVDLFVBQVcsWUFHL0JULEdBQWEsRUFDYlUsS0FBS0MsT0FBT0MsS0FBSyxRQUFTLEtBQU1OLEVBQVVMLEdBQzFDUyxLQUFLQyxPQUFPQyxLQUFLLFNBQVUsS0FBTU47QUN6RGxDLFlBRUFDLFNBQVFNLE9BQU8sV0FBWSxrQkFB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QUVHLFNBQVNqSixLQUFLcEgsT0FBTyxTQUFTa1EsRUFBRTlJLEdBQUc2SSxFQUFFRSxXQUFXLGtCQUFrQkMsUUFBUUYsRUFBRUksR0FBR2xKLEtBQUtuSCxPQUFPLFNBQVNpUSxHQUFHRCxFQUFFRSxXQUFXLGtCQUFrQkcsR0FBR0osU0FBU0EsRUFBRTNCLFVBQVUsWUFBWSxhQUFhLFdBQVcsV0FBVyxTQUFTMkIsRUFBRTlJLEVBQUVtSixHQUFHLE1BQU8sVUFBU0MsRUFBRUMsRUFBRUMsR0FBRyxHQUFJQyxHQUFFVixFQUFFNVIsUUFBUW9TLEdBQUdwUixFQUFFcVIsRUFBRUUsa0JBQWtCLElBQUlDLEVBQUVILEVBQUVJLHFCQUFxQixFQUFHWixHQUFFdEIsSUFBSSw0QkFBNEIsU0FBU3NCLEVBQUVPLEdBQUcsR0FBSUMsR0FBRSx3RUFBd0VELEVBQUVMLFFBQVEsZ0JBQWdCVyxFQUFFZCxFQUFFNVIsUUFBUStJLEVBQUVzSixHQUFHRixHQUFJRyxHQUFFSyxPQUFPRCxHQUFHUixFQUFFLFdBQVdRLEVBQUV4UyxZQUFZLG1CQUFtQmdTLEVBQUUsV0FBV1EsRUFBRTlRLFVBQVU0USxHQUFFLElBQUtKLEVBQUVKLFVBQVVoUixHQUFFLEtBQU02USxFQUFFdEIsSUFBSSxpQkFBaUIsU0FBU3NCLEVBQUVLLEdBQUcsR0FBSUUsR0FBRSxvREFBb0RGLEVBQUVELEdBQUcsb0NBQW9DQyxFQUFFSCxRQUFRLGdCQUFnQk0sRUFBRVQsRUFBRTVSLFFBQVErSSxFQUFFcUosR0FBR0QsR0FBSUcsR0FBRUssT0FBT04sS0FBS1IsRUFBRXRCLElBQUksaUJBQWlCLFNBQVNzQixFQUFFOUksR0FBRyxHQUFJbUosR0FBRU4sRUFBRTVSLFFBQVFzUyxFQUFFLEdBQUdNLHVCQUF1QixlQUFlN0osRUFBRWtKLElBQUtDLEdBQUVoUyxZQUFZLG1CQUFtQmdTLEVBQUV0USxnQkFBZ0JsRSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IDIwMTMgU2ZlaXIgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIENsaWVudCBJRCBvZiB0aGUgYXBwbGljYXRpb24gKGZyb20gdGhlIEFQSXMgQ29uc29sZSkuXG4gKlxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuLy8gQmVsb3cgaXMgZm9yIHRoZSBkZXBsb3llZCBhbmQgbG9jYWxob3N0LlxuQ0xJRU5UX0lEID0gJzk2MzAwOTA2NTA4Ny0yYTVjY2w1cmhtNGdoZ204OGxpMjFma2pnc3U1ZXVhMEBkZXZlbG9wZXIuZ3NlcnZpY2VhY2NvdW50LmNvbSc7XG4vKipcbiAqIFNjb3BlcyB1c2VkIGJ5IHRoZSBhcHBsaWNhdGlvbi5cbiAqXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5TQ09QRVMgPSAnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC91c2VyaW5mby5lbWFpbCc7XG5cbi8qKlxuICogUmVzcG9uc2UgdHlwZSBvZiB0aGUgYXV0aCB0b2tlbi5cbiAqXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5SRVNQT05TRV9UWVBFID0gJ3Rva2VuIGlkX3Rva2VuJztcblxuLyoqXG4gKiBJbml0aWFsaXplcyB0aGUgYXBwbGljYXRpb24uIEl0IGxvYWRzIGFzeW5jaHJvbm91c2x5IGFsbCBuZWVkZWQgbGlicmFyaWVzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9XG4gKiAgICAgICAgICAgIGFwaVJvb3QgUm9vdCBvZiB0aGUgQVBJJ3MgcGF0aC5cbiAqL1xuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgYXBpc1RvTG9hZDtcblx0dmFyIGFwaVJvb3QgPSAnLy8nICsgd2luZG93LmxvY2F0aW9uLmhvc3QgKyAnL19haC9hcGknO1xuXHQvLyBDaGFuZ2UgdG8gaHR0cHMgYXBwc3BvdCBkb21haW4gZm9yIGRlcGxveW1lbnQuXG5cdGlmICh3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKFwibG9jYWxob3N0XCIpID09PSAtMSkge1xuXHRcdGFwaVJvb3QgPSBcImh0dHBzOi8vcm9zZWJvdGljc3dlYi5hcHBzcG90LmNvbS9fYWgvYXBpXCJcblx0fVxuXHR2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoLS1hcGlzVG9Mb2FkID09IDApIHtcblx0XHRcdC8vIGJvb3RzdHJhcCBtYW51YWxseSBhbmd1bGFyanMgYWZ0ZXIgb3VyIGFwaSBhcmUgbG9hZGVkXG5cdFx0XHRhbmd1bGFyLmJvb3RzdHJhcChkb2N1bWVudCwgW1wiVGVhbUFwcFwiXSk7XG5cdFx0fVxuXHR9XG5cdGFwaXNUb0xvYWQgPSAyOyAvLyBtdXN0IG1hdGNoIG51bWJlciBvZiBjYWxscyB0byBnYXBpLmNsaWVudC5sb2FkKClcblx0Z2FwaS5jbGllbnQubG9hZCgndGVhbXMnLCAndjEnLCBjYWxsYmFjaywgYXBpUm9vdCk7XG5cdGdhcGkuY2xpZW50LmxvYWQoJ29hdXRoMicsICd2MicsIGNhbGxiYWNrKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdUZWFtQXBwJywgWydUZWFtQ29udHJvbGxlcnMnLCAnTW9kYWxDb250cm9sbGVycycsICdPdmVydmlld0NvbnRyb2xsZXJzJywgJ01hbmFnZUNvbnRyb2xsZXJzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICdUZWFtU2VydmljZXMnLCAgJ0ludml0ZUNvbnRyb2xsZXJzJywgJ3VpLmJvb3RzdHJhcCcsICduZ1JvdXRlJywgJ1RlYW1EaXJlY3RpdmVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICdhbmd1bGFyLnNuYWNrYmFyJ10pXG4uY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLFxuICBmdW5jdGlvbigkcm91dGVQcm92aWRlcikge1xuICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgICAud2hlbignL292ZXJ2aWV3LycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL292ZXJ2aWV3Lmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnT3ZlcnZpZXdDdHJsIGFzIG92ZXJ2aWV3J1xuICAgICAgfSlcbiAgICAgIC53aGVuKCcvcHJldmlldy8nLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9wcmV2aWV3Lmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnUHJldmlld0N0cmwgYXMgcHJldmlldydcbiAgICAgIH0pXG4gICAgICAud2hlbignL3RlYW1zLycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL3RlYW1zLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnVGVhbXNDdHJsIGFzIHRlYW1zJyxcbiAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgIHRlYW1zOiBbJ2FwaScsIGZ1bmN0aW9uKGFwaSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRUZWFtcygpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAud2hlbignL3RlYW1zLzp0ZWFtX2tleS9jb3Vyc2VzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvdGVhbXNfY291cnNlLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnVGVhbXNDb3Vyc2VDdHJsIGFzIGNvdXJzZXMnLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgdGVhbTogW1wiYXBpXCIsIFwiJHJvdXRlXCIsIGZ1bmN0aW9uKGFwaSwgJHJvdXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBpLmdldFByb2dyZXNzKCRyb3V0ZS5jdXJyZW50LnBhcmFtcyk7XG4gICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC53aGVuKCcvdGVhbXMvOnRlYW1fa2V5L2NvdXJzZXMvOmNvdXJzZV9uYW1lL3RyYWNrcycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL3RlYW1zX3RyYWNrLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnVGVhbXNUcmFja0N0cmwgYXMgdHJhY2tzJyxcbiAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgIHRlYW06IFtcImFwaVwiLCBcIiRyb3V0ZVwiLCBmdW5jdGlvbihhcGksICRyb3V0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRQcm9ncmVzcygkcm91dGUuY3VycmVudC5wYXJhbXMpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAud2hlbignL3RlYW1zLzp0ZWFtX2tleS9jb3Vyc2VzLzpjb3Vyc2VfbmFtZS90cmFja3MvOnRyYWNrX25hbWUvdW5pdHMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy90ZWFtc191bml0Lmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnVGVhbXNVbml0Q3RybCBhcyB1bml0cycsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICB0ZWFtOiBbXCJhcGlcIiwgXCIkcm91dGVcIiwgZnVuY3Rpb24oYXBpLCAkcm91dGUpIHtcbiAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0UHJvZ3Jlc3MoJHJvdXRlLmN1cnJlbnQucGFyYW1zKTtcbiAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLndoZW4oJy9pbnZpdGVzLycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL2ludml0ZXMuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdJbnZpdGVzQ3RybCBhcyBpbnZpdGVzJyxcbiAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgIGludml0ZXM6IFtcImFwaVwiLCBmdW5jdGlvbihhcGkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0SW52aXRlcygpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAud2hlbignL21hbmFnZS8nLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tYW5hZ2UuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdNYW5hZ2VDdHJsIGFzIG1hbmFnZScsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICB0ZWFtczogW1wiYXBpXCIsIGZ1bmN0aW9uKGFwaSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRMZWFkVGVhbXMoKTtcbiAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLndoZW4oJy9tYW5hZ2UvOnRlYW1fa2V5Jywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvbWFuYWdlX3RlYW0uaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdNYW5hZ2VUZWFtQ3RybCBhcyBtYW5hZ2UnLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgdGVhbXM6IFtcImFwaVwiLCBmdW5jdGlvbihhcGkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0TGVhZFRlYW1zKCk7XG4gICAgICAgICAgfV0sXG4gICAgICAgICAgdXNlcjogW1wib0F1dGhcIiwgZnVuY3Rpb24ob0F1dGgpIHtcbiAgICAgICAgICAgIHJldHVybiBvQXV0aC5nZXRVc2VySW5mbygpO1xuICAgICAgICAgIH1dLFxuICAgICAgICAgIGNvdXJzZXM6IFtcImFwaVwiLCBmdW5jdGlvbiAoYXBpKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBpLmdldENvdXJzZXMoKTtcbiAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLndoZW4oJy9tYW5hZ2UvOnRlYW1fa2V5L3N3ZWVwcycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21hbmFnZV9zd2VlcHMuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdTd2VlcHNUZWFtQ3RybCBhcyBzd2VlcHMnLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgdGVhbXM6IFtcImFwaVwiLCBmdW5jdGlvbihhcGkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0TGVhZFRlYW1zKCk7XG4gICAgICAgICAgfV0sXG4gICAgICAgICAgc3dlZXBzOiBbXCJhcGlcIiwgXCIkcm91dGVcIiwgZnVuY3Rpb24oYXBpLCAkcm91dGUpIHtcbiAgICAgICAgXHQgIHJldHVybiBhcGkuZ2V0U3dlZXBzKCRyb3V0ZS5jdXJyZW50LnBhcmFtcyk7XG4gICAgICAgICAgfV0sXG4gICAgICAgICAgcHJvZ3Jlc3M6IFtcImFwaVwiLCBcIiRyb3V0ZVwiLCBmdW5jdGlvbihhcGksICRyb3V0ZSkge1xuICAgICAgICBcdCAgcmV0dXJuIGFwaS5nZXRQcm9ncmVzcygkcm91dGUuY3VycmVudC5wYXJhbXMpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAub3RoZXJ3aXNlKHtcbiAgICAgICAgcmVkaXJlY3RUbzogJy9vdmVydmlldy8nXG4gICAgICB9KTtcbiAgfV0pXG4gIC5ydW4oW1wiJHJvb3RTY29wZVwiLCBcIiRsb2NhdGlvblwiLCBcIm9BdXRoXCIsIFwic2lkZWJhclwiLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkbG9jYXRpb24sIG9BdXRoLCBzaWRlYmFyKSB7XG5cdCAgYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaGlkZGVuLmNvbnRhaW5lclwiKSkucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XG5cdCAgYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXYuc3Bpbm5lclwiKSkuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XG5cdCAgb0F1dGguY2hlY2soKS50aGVuKG51bGwsIGZ1bmN0aW9uKCkge1xuICBcdFx0JGxvY2F0aW9uLnBhdGgoJy9wcmV2aWV3Jyk7XG4gIFx0XHRzaWRlYmFyLnNob3cuc2V0KGZhbHNlKTtcblx0ICB9KTtcblx0fV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ0ludml0ZUNvbnRyb2xsZXJzJywgW10pXG4uY29udHJvbGxlcignSW52aXRlc0N0cmwnLCBbXCJpbnZpdGVzXCIsIFwiYXBpXCIsIFwic25hY2tiYXJcIiwgZnVuY3Rpb24oaW52aXRlcywgYXBpLCBzbmFja2Jhcikge1xuXHR0aGlzLnBlbmRpbmcgPSBbXTtcblx0dGhpcy5hY2NlcHRlZCA9IFtdO1xuXHR2YXIgYWxsSW52aXRlcyA9IGludml0ZXNbXCJpbnZpdGVzXCJdO1xuXHRpZiAoYWxsSW52aXRlcyA9PSB1bmRlZmluZWQpIHtcblx0XHRhbGxJbnZpdGVzID0gW107XG5cdH1cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhbGxJbnZpdGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYgKGFsbEludml0ZXNbaV0ucmVzcG9uc2UgPT09IFwiTk9UX0NIT1NFTlwiKSB7XG5cdFx0XHR0aGlzLnBlbmRpbmcucHVzaChhbGxJbnZpdGVzW2ldKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5hY2NlcHRlZC5wdXNoKGFsbEludml0ZXNbaV0pO1xuXHRcdH1cblx0fVxuXHR2YXIgc2VsZiA9IHRoaXM7XG5cdHRoaXMuZWRpdEludml0ZSA9IGZ1bmN0aW9uKGludml0ZSwgbmV3UmVzcG9uc2UpIHtcblx0XHR2YXIgcmVmcmVzaFRlYW1zID0gZmFsc2U7XG5cdFx0aWYoaW52aXRlLnJlc3BvbnNlID09PSBcIk5PVF9DSE9TRU5cIiAmJiBuZXdSZXNwb25zZSAhPT0gXCJOT1RfQ0hPU0VOXCIpIHtcblx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzZWxmLnBlbmRpbmcubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHNlbGYucGVuZGluZ1tpXS50ZWFtX2tleSA9PT0gaW52aXRlLnRlYW1fa2V5KSB7XG5cdFx0XHRcdFx0c2VsZi5wZW5kaW5nLnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0c2VsZi5hY2NlcHRlZC5wdXNoKGludml0ZSk7XG5cdFx0XHRyZWZyZXNoVGVhbXMgPSB0cnVlO1xuXHRcdH1cblx0XHRpZiAobmV3UmVzcG9uc2UgPT09IFwiUkVKRUNUX0lOVklURVwiKSB7XG5cdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2VsZi5hY2NlcHRlZC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAoc2VsZi5hY2NlcHRlZFtpXS50ZWFtX2tleSA9PT0gaW52aXRlLnRlYW1fa2V5KSB7XG5cdFx0XHRcdFx0c2VsZi5hY2NlcHRlZC5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJlZnJlc2hUZWFtcyA9IHRydWU7XG5cdFx0fVxuXHRcdGludml0ZS5yZXNwb25zZSA9IG5ld1Jlc3BvbnNlO1xuXHRcdHNuYWNrYmFyLmNyZWF0ZShcIlNlbmRpbmcgcmVzcG9uc2UuLi5cIiwgNCk7XG5cdFx0YXBpLmVkaXRJbnZpdGUoaW52aXRlKS50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdFx0c25hY2tiYXIucmVtb3ZlKDQpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5TdWNjZXNzITwvYj4gUmVzcG9uc2Ugc2F2ZWRcIik7XG5cdFx0XHRpZiAocmVmcmVzaFRlYW1zKSB7XG5cdFx0XHRcdGFwaS5nZXRUZWFtcyh0cnVlKTtcblx0XHRcdH1cblx0XHR9LCBmdW5jdGlvbigpIHtcblx0XHRcdHNuYWNrYmFyLnJlbW92ZSg0KTtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+RXJyb3IhPC9iPiBSZXNwb25zZSBub3Qgc2F2ZWRcIik7XG5cdFx0fSk7XG5cdH1cblx0dGhpcy5wZW5kaW5nUmVzcG9uc2VzID0gW1wiTk9UX0NIT1NFTlwiLCBcIkFMTF9NRU1CRVJTXCIsIFwiVEVBTV9MRUFERVJcIiwgXCJSRUpFQ1RfSU5WSVRFXCJdO1xuXHR0aGlzLmFjY2VwdGVkUmVzcG9uc2VzID0gW1wiQUxMX01FTUJFUlNcIiwgXCJURUFNX0xFQURFUlwiLCBcIlJFSkVDVF9JTlZJVEVcIl07XG4gXHR0aGlzLnJlc3BvbnNlT3B0aW9ucyA9IHtcIk5PVF9DSE9TRU5cIiA6IFwiTm8gcmVzcG9uc2VcIixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XCJBTExfTUVNQkVSU1wiIDogXCJBbGwgbWVtYmVycyBjYW4gc2VlIG15IHByb2dyZXNzXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFwiVEVBTV9MRUFERVJcIjogXCJPbmx5IHRoZSBsZWFkZXIgY2FuIHNlZSBteSBwcm9ncmVzc1wiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcIlJFSkVDVF9JTlZJVEVcIjogXCJSZWplY3QgaW52aXRlIGFuZCBubyBvbmUgY2FuIHNlZSBteSBwcm9ncmVzc1wifTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdNYW5hZ2VDb250cm9sbGVycycsIFtdKVxuLmNvbnRyb2xsZXIoJ01hbmFnZUN0cmwnLCBbXCIkbW9kYWxcIiwgXCJ0ZWFtc1wiLCBcImFwaVwiLCBcInNuYWNrYmFyXCIsIFwib0F1dGhcIiwgZnVuY3Rpb24oJG1vZGFsLCB0ZWFtcywgYXBpLCBzbmFja2Jhciwgb0F1dGgpIHtcblx0dGhpcy5pdGVtcyA9IHRlYW1zW1widGVhbXNcIl07XG5cdHZhciBzZWxmID0gdGhpcztcblx0dGhpcy50b2dnbGVDcmVhdGVUZWFtTW9kYWwgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHQgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tb2RhbHMvY3JlYXRlX3RlYW1fbW9kYWwuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnQ3JlYXRlVGVhbU1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJyxcblx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0dXNlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9BdXRoLmdldFVzZXJJbmZvKCk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGNvdXJzZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBhcGkuZ2V0Q291cnNlcygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbihuZXdUZWFtKSB7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGUoXCJDcmVhdGluZyB0ZWFtLi4uXCIsIDEpO1xuXHRcdFx0YXBpLmluc2VydFRlYW0obmV3VGVhbSkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcblx0XHRcdFx0c25hY2tiYXIucmVtb3ZlKDEpO1xuXHRcdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBUZWFtIGNyZWF0ZWRcIik7XG5cdFx0XHRcdGlmICh0ZWFtc1tcInRlYW1zXCJdID09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdHRlYW1zW1widGVhbXNcIl0gPSBbXTtcblx0XHRcdFx0XHRzZWxmLml0ZW1zID0gdGVhbXNbXCJ0ZWFtc1wiXTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0ZWFtc1tcInRlYW1zXCJdLnB1c2gocmVzdWx0KTtcblx0XHRcdH0sIGZ1bmN0aW9uKGVycm9yKSB7XG5cdFx0XHRcdHNuYWNrYmFyLnJlbW92ZSgxKTtcblx0XHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFRlYW0gbm90IGNyZWF0ZWRcIik7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fTtcbn1dKVxuLmNvbnRyb2xsZXIoJ01hbmFnZVRlYW1DdHJsJywgW1wiJHJvdXRlUGFyYW1zXCIsIFwiJG1vZGFsXCIsIFwidGVhbXNcIiwgXCIkc2NvcGVcIiwgXCJzbmFja2JhclwiLCBcImFwaVwiLCBcIiRsb2NhdGlvblwiLCBcInVzZXJcIiwgXCJjb3Vyc2VzXCIsIGZ1bmN0aW9uKCRyb3V0ZVBhcmFtcywgJG1vZGFsLCB0ZWFtcywgJHNjb3BlLCBzbmFja2JhciwgYXBpLCAkbG9jYXRpb24sIHVzZXIsIGNvdXJzZXMpIHtcblx0dmFyIGl0ZW1zID0gdGVhbXNbXCJ0ZWFtc1wiXTtcblx0dmFyIHRlYW1OdW1iZXIgPSAtMTtcblx0Zm9yKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYoaXRlbXNbaV0udGVhbV9rZXkgPT0gJHJvdXRlUGFyYW1zLnRlYW1fa2V5KSB7XG5cdFx0XHR0aGlzLnRlYW0gPSBpdGVtc1tpXTtcblx0XHRcdHRlYW1OdW1iZXIgPSBpO1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cdHRoaXMuZ29Ub1N3ZWVwID0gZnVuY3Rpb24oKSB7XG5cdFx0JGxvY2F0aW9uLnBhdGgoJGxvY2F0aW9uLnBhdGgoKSArIFwiL3N3ZWVwc1wiKTtcblx0fTtcblx0dGhpcy5vZmZlcmVkQ291cnNlcyA9IGNvdXJzZXM7XG5cdGNvbnNvbGUubG9nKGNvdXJzZXMpO1xuXHR0aGlzLmdldENvdXJzZVRpdGxlID0gZnVuY3Rpb24gKHByZWZpeCkge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY291cnNlcy5pZHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlmIChjb3Vyc2VzLmlkc1tpXSA9PT0gcHJlZml4KSB7XG5cdFx0XHRcdHJldHVybiBjb3Vyc2VzLnRpdGxlc1tpXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIFwiXCI7XG5cdH1cblx0dmFyIHRpbWVzQ2hhbmdlZCA9IDA7XG5cdHZhciBzZWxmID0gdGhpcztcblx0dmFyIGRlcmVnaXN0ZXIgPSAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uICgpIHtcbiAgXHRyZXR1cm4gc2VsZi50ZWFtO1xuXHR9LCBmdW5jdGlvbigpe1xuXHRcdHRpbWVzQ2hhbmdlZCsrO1xuXHRcdHNlbGYub25JbnB1dE1hZGVEaXJ0eSh0aW1lc0NoYW5nZWQpO1xuXHR9LCB0cnVlKTtcblx0dGhpcy5vbklucHV0TWFkZURpcnR5ID0gZnVuY3Rpb24odGltZXNDaGFuZ2VkKSAge1xuXHRcdGlmKHRpbWVzQ2hhbmdlZCA+IDEpIHtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+V2FybmluZyE8L2I+IFlvdSBtdXN0IHByZXNzIHN1Ym1pdCB0byBzYXZlIHlvdXIgY2hhbmdlc1wiKTtcblx0XHRcdGRlcmVnaXN0ZXIoKTtcblx0XHR9XG5cdH07XG5cdHRoaXMuZGVsZXRlTWVtYmVyID0gZnVuY3Rpb24obWVtYmVyKSB7XG5cdFx0dmFyIG1lbWJlcnMgPSBzZWxmLnRlYW0ubWVtYmVycztcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgbWVtYmVycy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYobWVtYmVyc1tpXS5lbWFpbCA9PSBtZW1iZXIuZW1haWwpIHtcblx0XHRcdFx0bWVtYmVycy5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0dGhpcy5zYXZlVGVhbSA9IGZ1bmN0aW9uKCkge1xuXHRcdHNuYWNrYmFyLmNyZWF0ZShcIlNhdmluZyB0ZWFtLi4uXCIsIDMpO1xuXHRcdGFwaS5pbnNlcnRUZWFtKHNlbGYudGVhbSkudGhlbihmdW5jdGlvbihuZXdUZWFtKSB7XG5cdFx0XHRzbmFja2Jhci5yZW1vdmUoMyk7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBUZWFtIHNhdmVkXCIpO1xuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0c25hY2tiYXIucmVtb3ZlKDMpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFRlYW0gbm90IHNhdmVkXCIpO1xuXHRcdH0pO1xuXHR9XG5cdHRoaXMudG9nZ2xlRGVsZXRlVGVhbU1vZGFsID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0ICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvbW9kYWxzL2RlbGV0ZV90ZWFtX21vZGFsLmh0bWwnLFxuXHRcdCAgY29udHJvbGxlcjogJ0RlbGV0ZVRlYW1Nb2RhbEluc3RhbmNlQ3RybCcsXG5cdFx0ICBjb250cm9sbGVyQXM6ICdtb2RhbCdcblx0XHR9KTtcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdFx0aXRlbXMuc3BsaWNlKGksIDEpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlKFwiRGVsZXRpbmcgdGVhbS4uLlwiLCAyKTtcblx0XHRcdGFwaS5kZWxldGVUZWFtKHNlbGYudGVhbSkudGhlbihmdW5jdGlvbigpIHtcblx0XHRcdFx0c25hY2tiYXIucmVtb3ZlKDIpO1xuXHRcdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBUZWFtIGRlbGV0ZWRcIik7XG5cdFx0XHR9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0c25hY2tiYXIucmVtb3ZlKDIpO1xuXHRcdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPkVycm9yITwvYj4gVGVhbSBub3QgZGVsZXRlZFwiKTtcblx0XHRcdH0pO1xuXHRcdFx0JGxvY2F0aW9uLnBhdGgoJy9tYW5hZ2UnKTtcblx0XHR9KTtcblx0fTtcblx0dGhpcy50b2dnbGVDcmVhdGVNZW1iZXJNb2RhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21vZGFscy9jcmVhdGVfbWVtYmVyX21vZGFsLmh0bWwnLFxuXHRcdCAgY29udHJvbGxlcjogJ05ld01lbWJlck1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJ1xuXHRcdH0pO1xuXHRcdG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24obmV3RW1haWwpIHtcblx0XHRcdHZhciBuZXdNZW1iZXIgPSB7ZW1haWw6IG5ld0VtYWlsLCB2aXNpYmlsaXR5OiBcIk5PVF9DSE9TRU5cIn07XG5cdFx0XHRpZiAoc2VsZi50ZWFtLm1lbWJlcnMgPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdHNlbGYudGVhbS5tZW1iZXJzID0gW107XG5cdFx0XHR9XG5cdFx0XHRpZiAobmV3RW1haWwgPT0gdXNlci5lbWFpbCkge1xuXHRcdFx0XHRuZXdNZW1iZXIudmlzaWJpbGl0eSA9IFwiQUxMX01FTUJFUlNcIjtcblx0XHRcdH1cblx0XHRcdHNlbGYudGVhbS5tZW1iZXJzLnB1c2gobmV3TWVtYmVyKTtcblx0XHRcdHNlbGYudGVhbS5uZXdNZW1iZXJzID0gdHJ1ZTtcblx0XHR9KTtcblx0fTtcblx0dGhpcy52aXNpYmlsaXR5T3B0aW9ucyA9IHtcIk5PVF9DSE9TRU5cIiA6IFwiTm8gUmVzcG9uc2VcIixcblx0XHRcdFx0XHRcdFx0ICBcIkFMTF9NRU1CRVJTXCIgOiBcIlByb2dyZXNzIHZpc2libGUgYnkgZXZlcnlvbmVcIixcblx0XHRcdFx0XHRcdFx0ICBcIlRFQU1fTEVBREVSXCI6IFwiUHJvZ3Jlc3MgdmlzaWJsZSBieSBsZWFkZXIgb25seVwifTtcbn1dKVxuLmNvbnRyb2xsZXIoJ1N3ZWVwc1RlYW1DdHJsJywgW1wiJHJvdXRlUGFyYW1zXCIsIFwiJG1vZGFsXCIsIFwidGVhbXNcIiwgXCJzd2VlcHNcIiwgXCIkbG9jYXRpb25cIiwgXCJwcm9ncmVzc1wiLCBcInNuYWNrYmFyXCIsIFwiYXBpXCIsIFwiJHNjb3BlXCIsIGZ1bmN0aW9uKCRyb3V0ZVBhcmFtcywgJG1vZGFsLCB0ZWFtcywgc3dlZXBzLCAkbG9jYXRpb24sIHByb2dyZXNzLCBzbmFja2JhciwgYXBpLCAkc2NvcGUpIHtcblx0dmFyIGl0ZW1zID0gdGVhbXNbXCJ0ZWFtc1wiXTtcblx0dGhpcy5zd2VlcHMgPSBzd2VlcHNbXCJzd2VlcHNcIl0gfHwgW107XG5cdHZhciB0ZWFtTnVtYmVyID0gLTE7XG5cdHRoaXMudG9kYXkgPSBuZXcgRGF0ZSgpO1xuICB0aGlzLnRpbWV6b25lcyA9IFsnVVRDJywgJ1BEVCcsICdNRFQnLCAnQ0RUJywgJ0VEVCcsICdQU1QnLCAnTVNUJywgJ0NTVCcsICdFU1QnXTtcblx0dGhpcy5kb25lID0gZnVuY3Rpb24oKSB7XG5cdFx0JGxvY2F0aW9uLnBhdGgoXCIvbWFuYWdlL1wiICsgJHJvdXRlUGFyYW1zLnRlYW1fa2V5KTtcblx0fTtcblx0Zm9yKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYoaXRlbXNbaV0udGVhbV9rZXkgPT0gJHJvdXRlUGFyYW1zLnRlYW1fa2V5KSB7XG5cdFx0XHR0aGlzLnRlYW0gPSBpdGVtc1tpXTtcblx0XHRcdHRlYW1OdW1iZXIgPSBpO1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cdHZhciBzZWxmID0gdGhpcztcblx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMuc3dlZXBzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIHN3ZWVwID0gdGhpcy5zd2VlcHNbaV07XG5cdFx0c3dlZXAuaG91ck51bSA9IHBhcnNlSW50KHN3ZWVwLmhvdXIpO1xuXHRcdHZhciBkdCA9IG5ldyBEYXRlKDApO1xuXHRcdGR0LnNldEZ1bGxZZWFyKHN3ZWVwLnllYXIpO1xuXHRcdGR0LnNldE1vbnRoKHBhcnNlSW50KHN3ZWVwLm1vbnRoKSAtIDEsIHBhcnNlSW50KHN3ZWVwLmRheSkpO1xuXHRcdHN3ZWVwLmR0ID0gZHQ7XG5cdH1cblx0dGhpcy5zYXZlU3dlZXAgPSBmdW5jdGlvbihzd2VlcCkge1xuXHRcdHNuYWNrYmFyLmNyZWF0ZShcIlNhdmluZyBTd2VlcC4uLlwiLCA2KTtcblx0XHRzd2VlcC5ob3VyID0gc3dlZXAuaG91ck51bS50b1N0cmluZygpO1xuXHRcdHN3ZWVwLnllYXIgPSBzd2VlcC5kdC5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCk7XG5cdFx0c3dlZXAubW9udGggPSAoc3dlZXAuZHQuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCk7XG5cdFx0c3dlZXAuZGF5ID0gc3dlZXAuZHQuZ2V0RGF0ZSgpLnRvU3RyaW5nKCk7XG5cdFx0YXBpLmluc2VydFN3ZWVwKHN3ZWVwKS50aGVuKGZ1bmN0aW9uKG5ld1N3ZWVwKSB7XG5cdFx0XHRzbmFja2Jhci5yZW1vdmUoNik7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBTd2VlcCBzYXZlZFwiKTtcblx0XHR9LCBmdW5jdGlvbigpIHtcblx0XHRcdHNuYWNrYmFyLnJlbW92ZSg2KTtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+RXJyb3IhPC9iPiBTd2VlcCBub3Qgc2F2ZWRcIik7XG5cdFx0fSk7XG5cdH07XG5cdHRoaXMuZGVsZXRlU3dlZXAgPSBmdW5jdGlvbihzd2VlcCkge1xuXHRcdHNuYWNrYmFyLmNyZWF0ZShcIlJlbW92aW5nIFN3ZWVwLi4uXCIsIDcpO1xuXHRcdGFwaS5kZWxldGVTd2VlcChzd2VlcCkudGhlbihmdW5jdGlvbigpIHtcblx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzZWxmLnN3ZWVwcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZihzd2VlcC5zd2VlcF9rZXkgPT09IHNlbGYuc3dlZXBzW2ldLnN3ZWVwX2tleSkge1xuXHRcdFx0XHRcdHNlbGYuc3dlZXBzLnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0c25hY2tiYXIucmVtb3ZlKDcpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5TdWNjZXNzITwvYj4gU3dlZXAgcmVtb3ZlZFwiKTtcblxuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0c25hY2tiYXIucmVtb3ZlKDcpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFN3ZWVwIG5vdCByZW1vdmVkXCIpO1xuXHRcdH0pO1xuXHR9O1xuXHR0aGlzLnN0b3BFdmVudCA9IGZ1bmN0aW9uKCRldmVudCkge1xuXHRcdCRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdCRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblx0dGhpcy50b2dnbGVJbXBvcnRTd2VlcHNEaWFsb2cgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHRcdCAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21vZGFscy9pbXBvcnRfc3dlZXBzX21vZGFsLmh0bWwnLFxuXHRcdFx0ICBjb250cm9sbGVyOiAnSW1wb3J0U3dlZXBzTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdFx0ICBjb250cm9sbGVyQXM6ICdtb2RhbCcsXG5cdFx0XHQgIHJlc29sdmU6IHtcblx0XHRcdFx0ICB0ZWFtczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ICByZXR1cm4gaXRlbXM7XG5cdFx0XHRcdCAgfVxuXHRcdFx0ICB9XG5cdFx0fSk7XG5cdFx0bW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbih0ZWFtVG9JbXBvcnRGcm9tKSB7XG5cdFx0XHRjb25zb2xlLmxvZyh0ZWFtVG9JbXBvcnRGcm9tKTtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZShcIkltcG9ydGluZyBmcm9tIFwiICsgdGVhbVRvSW1wb3J0RnJvbS5uYW1lICsgXCIuLi5cIiwgMTApO1xuXHRcdFx0YXBpLmdldFN3ZWVwcyh0ZWFtVG9JbXBvcnRGcm9tKS50aGVuKGZ1bmN0aW9uKGltcG9ydGVkU3dlZXBzKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKGltcG9ydGVkU3dlZXBzKTtcblx0XHRcdFx0aWYgKCFpbXBvcnRlZFN3ZWVwcy5zd2VlcHMgfHwgIWltcG9ydGVkU3dlZXBzLnN3ZWVwcy5sZW5ndGgpIHtcblx0XHRcdFx0XHRzbmFja2Jhci5yZW1vdmUoMTApO1xuXHRcdFx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+RXJyb3IhPC9iPiBUaGVyZSB3ZXJlIG5vIHN3ZWVwcyB0byBpbXBvcnRcIik7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBpbXBvcnRlZFN3ZWVwcy5zd2VlcHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHR2YXIgc3dlZXAgPSBpbXBvcnRlZFN3ZWVwcy5zd2VlcHNbaV07XG5cdFx0XHRcdFx0ZGVsZXRlIHN3ZWVwLnN3ZWVwX2tleTtcblx0XHRcdFx0XHRzd2VlcC50ZWFtX2tleSA9IHNlbGYudGVhbS50ZWFtX2tleTtcblx0XHRcdFx0XHRhcGkuaW5zZXJ0U3dlZXAoc3dlZXApLnRoZW4oZnVuY3Rpb24obmV3U3dlZXApIHtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKG5ld1N3ZWVwKTtcblx0XHRcdFx0XHRcdG5ld1N3ZWVwLmhvdXJOdW0gPSBwYXJzZUludChuZXdTd2VlcC5ob3VyKTtcblx0XHRcdFx0XHRcdHZhciBkdCA9IG5ldyBEYXRlKDApO1xuXHRcdFx0XHRcdFx0ZHQuc2V0RnVsbFllYXIobmV3U3dlZXAueWVhcik7XG5cdFx0XHRcdFx0XHRkdC5zZXRNb250aChwYXJzZUludChuZXdTd2VlcC5tb250aCkgLSAxLCBwYXJzZUludChuZXdTd2VlcC5kYXkpKTtcblx0XHRcdFx0XHRcdG5ld1N3ZWVwLmR0ID0gZHQ7XG5cdFx0XHRcdFx0XHRpZiAoc3dlZXBzW1wic3dlZXBzXCJdID09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdFx0XHRzd2VlcHNbXCJzd2VlcHNcIl0gPSBbXTtcblx0XHRcdFx0XHRcdFx0c2VsZi5zd2VlcHMgPSBzd2VlcHNbXCJzd2VlcHNcIl07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR2YXIgaW5zZXJ0ZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzZWxmLnN3ZWVwcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdFx0XHRpZihzZWxmLnN3ZWVwc1tpXS5kdC5nZXRUaW1lKCkgPCBuZXdTd2VlcC5kdC5nZXRUaW1lKCkgfHwgKHNlbGYuc3dlZXBzW2ldLmR0LmdldFRpbWUoKSA9PT0gbmV3U3dlZXAuZHQuZ2V0VGltZSgpICYmIHNlbGYuc3dlZXBzW2ldLmhvdXJOdW0gPCBuZXdTd2VlcC5ob3VyTnVtKSkge1xuXHRcdFx0XHRcdFx0XHRcdHNlbGYuc3dlZXBzLnNwbGljZShpLCAwLCBuZXdTd2VlcCk7XG5cdFx0XHRcdFx0XHRcdFx0aW5zZXJ0ZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZighaW5zZXJ0ZWQpIHtcblx0XHRcdFx0XHRcdFx0c2VsZi5zd2VlcHMucHVzaChuZXdTd2VlcCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0c25hY2tiYXIucmVtb3ZlKDEwKTtcblx0XHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5TdWNjZXNzITwvYj4gU3dlZXBzIEltcG9ydGVkXCIpO1xuXHRcdFx0fSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNuYWNrYmFyLnJlbW92ZSgxMCk7XG5cdFx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+RXJyb3IhPC9iPiBJbXBvcnQgZmFpbGVkXCIpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH1cblx0dGhpcy50b2dnbGVTd2VlcE9wdGlvbnNNb2RhbCA9IGZ1bmN0aW9uKHN3ZWVwKSB7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0XHQgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tb2RhbHMvZXhwb3J0X3Byb2dyZXNzX21vZGFsLmh0bWwnLFxuXHRcdFx0ICBjb250cm9sbGVyOiAnU3dlZXBPcHRpb25zTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdFx0ICBjb250cm9sbGVyQXM6ICdtb2RhbCcsXG5cdFx0XHQgIHJlc29sdmU6IHtcblx0XHRcdFx0ICB0ZWFtOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQgIHJldHVybiBwcm9ncmVzcztcblx0XHRcdFx0ICB9LFxuXHRcdFx0XHQgIG9wdGlvblN0cmluZzogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ICByZXR1cm4gc3dlZXAub3B0aW9ucztcblx0XHRcdFx0ICB9XG5cdFx0XHQgIH1cblx0XHR9KTtcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKG5ld09wdGlvbnMpIHtcblx0XHRcdHN3ZWVwLm9wdGlvbnMgPSBuZXdPcHRpb25zO1xuXHRcdH0pO1xuXHR9O1xuXHR0aGlzLnRvZ2dsZUNyZWF0ZVN3ZWVwRGlhbG9nID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0XHQgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tb2RhbHMvY3JlYXRlX3N3ZWVwX21vZGFsLmh0bWwnLFxuXHRcdFx0ICBjb250cm9sbGVyOiAnTmV3U3dlZXBNb2RhbEluc3RhbmNlQ3RybCcsXG5cdFx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJyxcblx0XHRcdCAgcmVzb2x2ZToge1xuXHRcdFx0XHQgIHRlYW1fa2V5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQgIHJldHVybiAkcm91dGVQYXJhbXMudGVhbV9rZXk7XG5cdFx0XHRcdCAgfSxcblx0XHRcdFx0ICBwcm9ncmVzczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ICByZXR1cm4gcHJvZ3Jlc3M7XG5cdFx0XHRcdCAgfVxuXHRcdFx0ICB9XG5cdFx0fSk7XG5cdFx0bW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbihzd2VlcCkge1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlKFwiQ3JlYXRpbmcgU3dlZXAuLi5cIiwgOCk7XG5cdFx0XHRzd2VlcC5ob3VyID0gc3dlZXAuaG91ck51bS50b1N0cmluZygpO1xuXHRcdFx0c3dlZXAueWVhciA9IHN3ZWVwLmR0LmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcblx0XHRcdHN3ZWVwLm1vbnRoID0gKHN3ZWVwLmR0LmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpO1xuXHRcdFx0c3dlZXAuZGF5ID0gc3dlZXAuZHQuZ2V0RGF0ZSgpLnRvU3RyaW5nKCk7XG4gICAgICB2YXIgcmVwZWF0cyA9IHN3ZWVwLnJlcGVhdHMgfHwgMDtcbiAgICAgIHZhciBuZXdTd2VlcHMgPSBbc3dlZXBdO1xuICAgICAgdmFyIG5leHRXZWVrID0gZnVuY3Rpb24gKGRhdGUsIHRpbWVzKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXREYXRlKCkrKDcqdGltZXMpKTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IHJlcGVhdHM7IGkrKykge1xuICAgICAgICB2YXIgbmV3U3dlZXAgPSBhbmd1bGFyLmNvcHkobmV3U3dlZXBzWzBdKTtcbiAgICAgICAgdmFyIGR0ID0gbmV4dFdlZWsobmV3U3dlZXAuZHQsIGkpOyBcbiAgICAgICAgbmV3U3dlZXAueWVhciA9IGR0LmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgbmV3U3dlZXAubW9udGggPSAoZHQuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCk7XG4gICAgICAgIG5ld1N3ZWVwLmRheSA9IGR0LmdldERhdGUoKS50b1N0cmluZygpO1xuICAgICAgICBuZXdTd2VlcHMucHVzaChuZXdTd2VlcCk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG5ld1N3ZWVwcy5sZW5ndGg7IGorKykge1xuICAgICAgICBzd2VlcCA9IG5ld1N3ZWVwc1tqXTtcbiAgICAgICAgYXBpLmluc2VydFN3ZWVwKHN3ZWVwKS50aGVuKGZ1bmN0aW9uKG5ld1N3ZWVwKSB7XG4gICAgICAgICAgbmV3U3dlZXAuaG91ck51bSA9IHBhcnNlSW50KG5ld1N3ZWVwLmhvdXIpO1xuICAgICAgICAgIHZhciBkdCA9IG5ldyBEYXRlKDApO1xuICAgICAgICAgIGR0LnNldEZ1bGxZZWFyKG5ld1N3ZWVwLnllYXIpO1xuICAgICAgICAgIGR0LnNldE1vbnRoKHBhcnNlSW50KG5ld1N3ZWVwLm1vbnRoKSAtIDEsIHBhcnNlSW50KG5ld1N3ZWVwLmRheSkpO1xuICAgICAgICAgIG5ld1N3ZWVwLmR0ID0gZHQ7XG4gICAgICAgICAgaWYgKHN3ZWVwc1tcInN3ZWVwc1wiXSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN3ZWVwc1tcInN3ZWVwc1wiXSA9IFtdO1xuICAgICAgICAgICAgc2VsZi5zd2VlcHMgPSBzd2VlcHNbXCJzd2VlcHNcIl07XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciBpbnNlcnRlZCA9IGZhbHNlO1xuICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWxmLnN3ZWVwcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYoc2VsZi5zd2VlcHNbaV0uZHQuZ2V0VGltZSgpIDwgbmV3U3dlZXAuZHQuZ2V0VGltZSgpIHx8IFxuICAgICAgICAgICAgICAgKHNlbGYuc3dlZXBzW2ldLmR0LmdldFRpbWUoKSA9PT0gbmV3U3dlZXAuZHQuZ2V0VGltZSgpICYmIHNlbGYuc3dlZXBzW2ldLmhvdXJOdW0gPCBuZXdTd2VlcC5ob3VyTnVtKSkge1xuICAgICAgICAgICAgICBzZWxmLnN3ZWVwcy5zcGxpY2UoaSwgMCwgbmV3U3dlZXApO1xuICAgICAgICAgICAgICBpbnNlcnRlZCA9IHRydWU7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZighaW5zZXJ0ZWQpIHtcbiAgICAgICAgICAgIHNlbGYuc3dlZXBzLnB1c2gobmV3U3dlZXApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzbmFja2Jhci5yZW1vdmUoOCk7XG4gICAgICAgICAgc25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5TdWNjZXNzITwvYj4gU3dlZXAgY3JlYXRlZFwiKTtcbiAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgc25hY2tiYXIucmVtb3ZlKDgpO1xuICAgICAgICAgIHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+RXJyb3IhPC9iPiBTd2VlcCBub3QgY3JlYXRlZFwiKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cdFx0fSk7XG5cdH07XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnTW9kYWxDb250cm9sbGVycycsIFtdKVxuLmNvbnRyb2xsZXIoJ01vZGFsVG9nZ2xlQ3RybCcsIFtcIiRtb2RhbFwiLCBmdW5jdGlvbigkbW9kYWwpIHtcblx0dGhpcy50b2dnbGVTaWduT3V0TW9kYWwgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHQgIHRlbXBsYXRlVXJsOiAnbG9nb3V0X21vZGFsLmh0bWwnLFxuXHRcdCAgY29udHJvbGxlcjogJ1NpbXBsZU1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJ1xuXHRcdH0pO1xuXHR9O1xuXHR0aGlzLnRvZ2dsZUVkaXRQcm9maWxlTW9kYWwgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHQgIHRlbXBsYXRlVXJsOiAnZWRpdF9wcm9maWxlX21vZGFsLmh0bWwnLFxuXHRcdCAgY29udHJvbGxlcjogJ1NpbXBsZU1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJ1xuXHRcdH0pO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLCBbXCIkbW9kYWxJbnN0YW5jZVwiLCBmdW5jdGlvbiAoJG1vZGFsSW5zdGFuY2UpIHtcbiAgdGhpcy5jYW5jZWwgPSBmdW5jdGlvbigpIHtcbiAgICAkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcbiAgfTtcbn1dKVxuLmNvbnRyb2xsZXIoJ05ld01lbWJlck1vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBmdW5jdGlvbiAoJG1vZGFsSW5zdGFuY2UsICRjb250cm9sbGVyKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdTaW1wbGVNb2RhbEluc3RhbmNlQ3RybCcsIHskbW9kYWxJbnN0YW5jZTogJG1vZGFsSW5zdGFuY2V9KSk7XG5cdHRoaXMuZW1haWwgPSBcIlwiO1xuXHR0aGlzLmFkZE1lbWJlciA9IGZ1bmN0aW9uKGVtYWlsKSB7XG5cdFx0ZW1haWwgPSBlbWFpbC50cmltKCk7XG5cdFx0aWYgKGVtYWlsLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGlmIChlbWFpbC5pbmRleE9mKCdAJykgPCAwKSB7XG5cdFx0XHRlbWFpbCArPSAnQGdtYWlsLmNvbSc7XG5cdFx0fVxuXHQgICRtb2RhbEluc3RhbmNlLmNsb3NlKGVtYWlsKTtcblx0fTtcbn1dKVxuLmNvbnRyb2xsZXIoJ0RlbGV0ZVRlYW1Nb2RhbEluc3RhbmNlQ3RybCcsIFtcIiRtb2RhbEluc3RhbmNlXCIsIFwiJGNvbnRyb2xsZXJcIiwgZnVuY3Rpb24gKCRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlcikge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLCB7JG1vZGFsSW5zdGFuY2U6ICRtb2RhbEluc3RhbmNlfSkpO1xuXHR0aGlzLnJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuXHQgICRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG5cdH07XG59XSlcbi5jb250cm9sbGVyKCdJbXBvcnRTd2VlcHNNb2RhbEluc3RhbmNlQ3RybCcsIFtcIiRtb2RhbEluc3RhbmNlXCIsIFwiJGNvbnRyb2xsZXJcIiwgXCJ0ZWFtc1wiLCBmdW5jdGlvbiAoJG1vZGFsSW5zdGFuY2UsICRjb250cm9sbGVyLCB0ZWFtcykge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLCB7JG1vZGFsSW5zdGFuY2U6ICRtb2RhbEluc3RhbmNlfSkpO1xuXHR0aGlzLnRlYW1zID0gdGVhbXM7XG5cdHRoaXMuc2VsZWN0ZWRUZWFtID0gdGVhbXNbMF07XG5cdHRoaXMuaW1wb3J0ID0gZnVuY3Rpb24oKSB7XG5cdCAgJG1vZGFsSW5zdGFuY2UuY2xvc2UodGhpcy5zZWxlY3RlZFRlYW0pO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignQ3JlYXRlVGVhbU1vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBcInVzZXJcIiwgXCJjb3Vyc2VzXCIsIFwiQ1NWXCIsIFwiJHNjb3BlXCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIsIHVzZXIsIGNvdXJzZXMsIENTViwgJHNjb3BlKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdTaW1wbGVNb2RhbEluc3RhbmNlQ3RybCcsIHskbW9kYWxJbnN0YW5jZTogJG1vZGFsSW5zdGFuY2V9KSk7XG5cdHRoaXMudGVhbU5hbWUgPSBcIlwiO1xuXHR0aGlzLnRlYW1NZW1iZXJzID0gXCJcIjtcblx0dGhpcy5pbmNsdWRlTGVhZGVyID0gZmFsc2U7XG4gIHRoaXMuZmlsZSA9IGZhbHNlO1xuXHR2YXIgc2VsZiA9IHRoaXM7XG5cdHRoaXMuY291cnNlcyA9IGFuZ3VsYXIuY29weShjb3Vyc2VzLmlkcyk7XG5cdHRoaXMub2ZmZXJlZENvdXJzZXMgPSBjb3Vyc2VzO1xuXHR0aGlzLmdldENvdXJzZVRpdGxlID0gZnVuY3Rpb24ocHJlZml4KSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb3Vyc2VzLmlkcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGNvdXJzZXMuaWRzW2ldID09PSBwcmVmaXgpIHtcblx0XHRcdFx0cmV0dXJuIGNvdXJzZXMudGl0bGVzW2ldO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gXCJcIjtcblx0fTtcbiAgdGhpcy51cGxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2hvd0Vycm9yID0gZnVuY3Rpb24obXNnKSB7XG4gICAgICBhbGVydChtc2cpO1xuICAgIH07XG4gICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciB0ZXh0ID0gcmVhZGVyLnJlc3VsdDtcbiAgICAgIHZhciBjc3YgPSBudWxsOyBcbiAgICAgIHRyeSB7XG4gICAgICAgIGNzdiA9IENTVi50b0FycmF5KHRleHQpO1xuICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgIHNob3dFcnJvcihcIkNhbm5vdCByZWFkIENTViFcIilcbiAgICAgIH1cbiAgICAgIHZhciBlbWFpbENvbCA9IGZhbHNlO1xuICAgICAgdmFyIGVtYWlscyA9IFtdO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjc3YubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHJvdyA9IGNzdltpXTtcbiAgICAgICAgaWYgKGVtYWlsQ29sID09PSBmYWxzZSkge1xuICAgICAgICAgIGZvcih2YXIgaiA9IDA7IGogPCByb3cubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChyb3dbal0gPT09IFwiRW1haWxcIikge1xuICAgICAgICAgICAgICBlbWFpbENvbCA9IGo7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChyb3cubGVuZ3RoID4gZW1haWxDb2wpIHtcbiAgICAgICAgICAgIGVtYWlscy5wdXNoKHJvd1tlbWFpbENvbF0udG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICBzZWxmLnRlYW1NZW1iZXJzICs9IGVtYWlscy5qb2luKCk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHJlYWRlci5yZWFkQXNUZXh0KHRoaXMuZmlsZSk7XG4gIH07XG5cdHRoaXMuYWRkID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld1RlYW0gPSB7bmFtZTogc2VsZi50ZWFtTmFtZSwgbGVhZGVyOiB1c2VyLmVtYWlsLCBtZW1iZXJzOltdLCBjb3Vyc2VzOnNlbGYuY291cnNlc307XG5cdFx0dmFyIG1lbWJlcnMgPSBzZWxmLnRlYW1NZW1iZXJzLnNwbGl0KCcsJyk7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtZW1iZXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZW1haWwgPSBtZW1iZXJzW2ldLnRyaW0oKTtcblx0XHRcdGlmIChlbWFpbC5sZW5ndGggPT09IDApIHtcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZW1haWwuaW5kZXhPZignQCcpIDwgMCkge1xuXHRcdFx0XHRlbWFpbCArPSAnQGdtYWlsLmNvbSc7XG5cdFx0XHR9XG5cdFx0XHRuZXdUZWFtLm1lbWJlcnMucHVzaCh7ZW1haWw6ZW1haWwsIHZpc2liaWxpdHk6XCJOT1RfQ0hPU0VOXCJ9KTtcblx0XHR9XG5cdFx0aWYgKHNlbGYuaW5jbHVkZUxlYWRlcikge1xuXHRcdFx0bmV3VGVhbS5tZW1iZXJzLnB1c2goe2VtYWlsOnVzZXIuZW1haWwsIHZpc2liaWxpdHk6XCJBTExfTUVNQkVSU1wifSk7XG5cdFx0fVxuXHQgICRtb2RhbEluc3RhbmNlLmNsb3NlKG5ld1RlYW0pO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignRXhwb3J0TW9kYWxQYXJlbnRDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBcInRlYW1cIiwgXCIkd2luZG93XCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIsIHRlYW0pIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ1NpbXBsZU1vZGFsSW5zdGFuY2VDdHJsJywgeyRtb2RhbEluc3RhbmNlOiAkbW9kYWxJbnN0YW5jZX0pKTtcblx0dGhpcy50ZWFtID0gdGVhbTtcblx0dGhpcy5mdWxsbmFtZSA9IHRydWU7XG5cdHRoaXMudXNlcm5hbWUgPSB0cnVlO1xuXHR0aGlzLmhhc1RpbWVzdGFtcCA9IHRydWU7XG5cdHRoaXMucG9pbnRWYWx1ZSA9IFwidGFza3NcIjtcblx0dGhpcy5wb2ludHNQZXJVbml0ID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcHVcIikpIHx8IDE7XG5cdHRoaXMucG9pbnRzUGVyVGFzayA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHB0XCIpKSB8fCAxO1xuXHR0aGlzLmluY2x1ZGVDb3Vyc2VQcm9ncmVzcyA9IGZhbHNlO1xuXHR0aGlzLmluY2x1ZGVUcmFja1Byb2dyZXNzID0gZmFsc2U7XG5cdHRoaXMudGltZXpvbmUgPSAnRVNUJztcbiAgdGhpcy50aW1lem9uZXMgPSBbJ1VUQycsICdQRFQnLCAnTURUJywgJ0NEVCcsICdFRFQnLCAnUFNUJywgJ01TVCcsICdDU1QnLCAnRVNUJ107XG5cdHZhciBzZWxmID0gdGhpcztcblx0dGhpcy5nZW5lcmF0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBsYW5kaW5nUXMgPSBcInRlYW1fdXJsc2FmZT1cIiArIHRlYW0udGVhbV9rZXk7XG5cdFx0aWYodGhpcy5mdWxsbmFtZSkge1xuXHRcdFx0bGFuZGluZ1FzICs9IFwiJnN0dWRlbnRfbmFtZT10cnVlXCI7XG5cdFx0fVxuXHRcdGlmKHRoaXMudXNlcm5hbWUpIHtcblx0XHRcdGxhbmRpbmdRcyArPSBcIiZyb3NlX3VzZXJuYW1lPXRydWVcIjtcblx0XHR9XG5cdFx0aWYodGhpcy5oYXNUaW1lc3RhbXApIHtcblx0XHRcdGxhbmRpbmdRcyArPSBcIiZ0aW1lem9uZT1cIiArIHRoaXMudGltZXpvbmU7XG5cdFx0fVxuXHRcdGlmKHRoaXMuaW5jbHVkZUNvdXJzZVByb2dyZXNzKSB7XG5cdFx0XHRsYW5kaW5nUXMgKz0gXCImY291cnNlX3Byb2dyZXNzPXRydWVcIjtcblx0XHR9XG5cdFx0aWYodGhpcy5pbmNsdWRlVHJhY2tQcm9ncmVzcykge1xuXHRcdFx0bGFuZGluZ1FzICs9IFwiJnRyYWNrX3Byb2dyZXNzPXRydWVcIjtcblx0XHR9XG5cdFx0aWYodGhpcy5wb2ludFZhbHVlID09PSBcInBvaW50c1wiKSB7XG5cdFx0XHRsYW5kaW5nUXMgKz0gXCImcHB1PVwiICsgdGhpcy5wb2ludHNQZXJVbml0O1xuXHRcdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcHVcIiwgdGhpcy5wb2ludHNQZXJVbml0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGFuZGluZ1FzICs9IFwiJnBwdD1cIiArIHRoaXMucG9pbnRzUGVyVGFzaztcblx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicHB0XCIsIHRoaXMucG9pbnRzUGVyVGFzayk7XG5cdFx0fVxuXHRcdHRoaXMub25Qb3N0R2VuZXJhdGUobGFuZGluZ1FzKTtcblx0fTtcbn1dKVxuLmNvbnRyb2xsZXIoJ0V4cG9ydE1vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBcInRlYW1cIiwgXCIkd2luZG93XCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIsIHRlYW0sICR3aW5kb3cpIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ0V4cG9ydE1vZGFsUGFyZW50Q3RybCcsIHskbW9kYWxJbnN0YW5jZTokbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXI6JGNvbnRyb2xsZXIsIHRlYW06dGVhbX0pKTtcblx0dGhpcy5vblBvc3RHZW5lcmF0ZSA9IGZ1bmN0aW9uKHFzKSB7XG5cdFx0dmFyIGxhbmRpbmdVcmwgPSBcImh0dHA6Ly9cIiArICR3aW5kb3cubG9jYXRpb24uaG9zdCArIFwiL3RlYW1zL2V4cG9ydC5jc3Y/XCI7XG5cdFx0JHdpbmRvdy5vcGVuKGxhbmRpbmdVcmwgKyBlbmNvZGVVUkkocXMpLCBcIl9ibGFua1wiKTtcblx0XHQkbW9kYWxJbnN0YW5jZS5jbG9zZSgpO1xuXHR9XG5cdHRoaXMuZG9uZUJ1dHRvblRleHQgPSAnR2VuZXJhdGUnO1xufV0pXG4uY29udHJvbGxlcignTmV3U3dlZXBNb2RhbEluc3RhbmNlQ3RybCcsIFtcIiRtb2RhbEluc3RhbmNlXCIsIFwiJGNvbnRyb2xsZXJcIiwgXCJ0ZWFtX2tleVwiLCBcIiRtb2RhbFwiLCBcInByb2dyZXNzXCIsICBmdW5jdGlvbiAoJG1vZGFsSW5zdGFuY2UsICRjb250cm9sbGVyLCB0ZWFtX2tleSwgJG1vZGFsLCBwcm9ncmVzcykge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLCB7JG1vZGFsSW5zdGFuY2U6ICRtb2RhbEluc3RhbmNlfSkpO1xuICB2YXIgcHB1RGVmYXVsdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHB1XCIpIHx8IFwiMVwiO1xuXHR0aGlzLnN3ZWVwID0ge2R0Om5ldyBEYXRlKCksIHRlYW1fa2V5OnRlYW1fa2V5LCBvcHRpb25zOlwic3R1ZGVudF9uYW1lPXRydWUmcm9zZV91c2VybmFtZT10cnVlJnRpbWV6b25lPUVTVCZwcHU9XCIgKyBwcHVEZWZhdWx0LCBob3VyTnVtOjEyLCB0ejpcIkVTVFwifTtcbiAgdGhpcy50aW1lem9uZXMgPSBbJ1VUQycsICdQRFQnLCAnTURUJywgJ0NEVCcsICdFRFQnLCAnUFNUJywgJ01TVCcsICdDU1QnLCAnRVNUJ107XG5cdHRoaXMudG9kYXkgPSBuZXcgRGF0ZSgpO1xuICB0aGlzLmRvZXNSZXBlYXQgPSBmYWxzZTtcbiAgdGhpcy5yZXBlYXRXZWVrcyA9IDA7XG5cdHRoaXMuc3RvcEV2ZW50ID0gZnVuY3Rpb24oJGV2ZW50KSB7XG5cdFx0JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9O1xuXHR0aGlzLmFkZFN3ZWVwID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuZG9lc1JlcGVhdCkge1xuICAgICAgdGhpcy5zd2VlcC5yZXBlYXRzID0gdGhpcy5yZXBlYXRXZWVrcztcbiAgICB9XG5cdCAgJG1vZGFsSW5zdGFuY2UuY2xvc2UodGhpcy5zd2VlcCk7XG5cdH07XG5cdHZhciBzZWxmID0gdGhpcztcblx0dGhpcy50b2dnbGVTd2VlcE9wdGlvbnNNb2RhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdFx0ICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvbW9kYWxzL2V4cG9ydF9wcm9ncmVzc19tb2RhbC5odG1sJyxcblx0XHRcdCAgY29udHJvbGxlcjogJ1N3ZWVwT3B0aW9uc01vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnLFxuXHRcdFx0ICByZXNvbHZlOiB7XG5cdFx0XHRcdCAgdGVhbTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ICByZXR1cm4gcHJvZ3Jlc3M7XG5cdFx0XHRcdCAgfSxcblx0XHRcdFx0ICBvcHRpb25TdHJpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdCAgcmV0dXJuIHNlbGYuc3dlZXAub3B0aW9ucztcblx0XHRcdFx0ICB9XG5cdFx0XHQgIH1cblx0XHR9KTtcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKG5ld09wdGlvbnMpIHtcblx0XHRcdHNlbGYuc3dlZXAub3B0aW9ucyA9IG5ld09wdGlvbnM7XG5cdFx0fSk7XG5cdH07XG59XSlcbi5jb250cm9sbGVyKCdTd2VlcE9wdGlvbnNNb2RhbEluc3RhbmNlQ3RybCcsIFtcIiRtb2RhbEluc3RhbmNlXCIsIFwiJGNvbnRyb2xsZXJcIiwgXCJ0ZWFtXCIsIFwib3B0aW9uU3RyaW5nXCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIsIHRlYW0sIG9wdGlvblN0cmluZykge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignRXhwb3J0TW9kYWxQYXJlbnRDdHJsJywgeyRtb2RhbEluc3RhbmNlOiRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlcjokY29udHJvbGxlciwgdGVhbTp0ZWFtfSkpO1xuXHR0aGlzLm9uUG9zdEdlbmVyYXRlID0gZnVuY3Rpb24ocXMpIHtcblx0XHQkbW9kYWxJbnN0YW5jZS5jbG9zZShxcyk7XG5cdH1cblx0dGhpcy5kb25lQnV0dG9uVGV4dCA9ICdEb25lJztcblx0aWYgKG9wdGlvblN0cmluZyAhPT0gXCJcIikge1xuXHRcdHZhciBvcHRpb25zID0ge307XG5cdFx0b3B0aW9uU3RyaW5nID0gb3B0aW9uU3RyaW5nLnNwbGl0KCcmJyk7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IG9wdGlvblN0cmluZy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIG9wID0gb3B0aW9uU3RyaW5nW2ldLnNwbGl0KCc9Jyk7XG5cdFx0XHRvcHRpb25zW29wWzBdXSA9IG9wWzFdO1xuXHRcdH1cblx0XHR0aGlzLmZ1bGxuYW1lID0gb3B0aW9uc1snc3R1ZGVudF9uYW1lJ10gPT09ICd0cnVlJztcblx0XHR0aGlzLnVzZXJuYW1lID0gb3B0aW9uc1sncm9zZV91c2VybmFtZSddID09PSAndHJ1ZSc7XG5cdFx0dGhpcy5oYXNUaW1lc3RhbXAgPSBvcHRpb25zWyd0aW1lem9uZSddICE9IHVuZGVmaW5lZDtcblx0XHR0aGlzLnBvaW50VmFsdWUgPSBvcHRpb25zWydwcHUnXSA/IFwicG9pbnRzXCIgOiBcInRhc2tzXCI7XG5cdFx0dGhpcy5wb2ludHNQZXJVbml0ID0gcGFyc2VJbnQob3B0aW9uc1sncHB1J10pIHx8IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHB1XCIpKSB8fCAxO1xuXHRcdHRoaXMucG9pbnRzUGVyVGFzayA9IHBhcnNlSW50KG9wdGlvbnNbJ3BwdCddKSB8fCBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInBwdFwiKSkgfHwgMTtcblx0XHR0aGlzLmluY2x1ZGVDb3Vyc2VQcm9ncmVzcyA9IG9wdGlvbnNbJ2NvdXJzZV9wcm9ncmVzcyddID09PSAndHJ1ZSc7XG5cdFx0dGhpcy5pbmNsdWRlVHJhY2tQcm9ncmVzcyA9IG9wdGlvbnNbJ3RyYWNrX3Byb2dyZXNzJ10gPT09ICd0cnVlJztcblx0XHR0aGlzLnRpbWV6b25lID0gb3B0aW9uc1sndGltZXpvbmUnXSB8fCAnRVNUJztcbiAgICB0aGlzLnRpbWV6b25lcyA9IFsnVVRDJywgJ1BEVCcsICdNRFQnLCAnQ0RUJywgJ0VEVCcsICdQU1QnLCAnTVNUJywgJ0NTVCcsICdFU1QnXTtcblx0fVxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ092ZXJ2aWV3Q29udHJvbGxlcnMnLCBbXSlcbi5jb250cm9sbGVyKCdPdmVydmlld0N0cmwnLCBmdW5jdGlvbigpIHtcbn0pXG4uY29udHJvbGxlcignUHJldmlld0N0cmwnLCBbXCJvQXV0aFwiLCBcIiRsb2NhdGlvblwiLCBcInNpZGViYXJcIiwgXCIkcm9vdFNjb3BlXCIsIFwic25hY2tiYXJcIiwgXCJ1c2VyRW1haWxcIiwgZnVuY3Rpb24ob0F1dGgsICRsb2NhdGlvbiwgc2lkZWJhciwgJHJvb3RTY29wZSwgc25hY2tiYXIsIHVzZXJFbWFpbCkge1xuXHRvQXV0aC5jaGVjaygpLnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0JGxvY2F0aW9uLnBhdGgoJy9vdmVydmlldycpO1xuXHRcdHNpZGViYXIuc2hvdy5zZXQodHJ1ZSk7XG5cdFx0JHJvb3RTY29wZS4kYXBwbHkoKTtcblx0fSk7XG5cdHRoaXMuc2lnbnVwID0gZnVuY3Rpb24oKSB7XG5cdFx0b0F1dGguc2lnbnVwKCkudGhlbihmdW5jdGlvbigpIHtcblx0XHRcdG9BdXRoLmdldFVzZXJJbmZvKCkudGhlbihmdW5jdGlvbih1c2VySW5mbykge1xuXHRcdFx0XHRpZih1c2VySW5mby5lbWFpbCAhPT0gdXNlckVtYWlsKSB7XG5cdFx0XHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5EYW5nZXIhPC9iPiBTaWduaW5nIHVwIGZvciB0ZWFtcyB3aXRoIGFub3RoZXIgYWNjb3VudCBtYXkgY2F1c2UgZXJyb3JzIVwiLCA2MDAwKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHQkbG9jYXRpb24ucGF0aCgnL292ZXJ2aWV3Jyk7XG5cdFx0XHRzaWRlYmFyLnNob3cuc2V0KHRydWUpO1xuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFNpZ24gdXAgZmFpbGVkXCIpO1xuXHRcdH0pO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignU2lkZWJhckN0cmwnLCBbXCJzaWRlYmFyXCIsIFwiJGxvY2F0aW9uXCIsIFwiJHNjb3BlXCIsIGZ1bmN0aW9uKHNpZGViYXIsICRsb2NhdGlvbiwgJHNjb3BlKSB7XG5cdHRoaXMucm91dGVzID0gc2lkZWJhci5yb3V0ZXM7XG5cdHRoaXMuc2hvdyA9IHNpZGViYXIuc2hvdy5nZXQoKTtcblx0dmFyIHNlbGYgPSB0aGlzO1xuXHQkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNpZGViYXIuc2hvdy5nZXQoKTsgfSxcblx0XHRcdGZ1bmN0aW9uICh2YWx1ZSkgeyBzZWxmLnNob3cgPSB2YWx1ZTsgfSk7XG5cblx0dGhpcy5pc0FjdGl2ZSA9IGZ1bmN0aW9uKHJvdXRlVXJsKSB7XG5cdFx0dmFyIHBhdGggPSAkbG9jYXRpb24ucGF0aCgpO1xuXHRcdHJvdXRlVXJsID0gcm91dGVVcmwuc3Vic3RyaW5nKDEpO1xuXHRcdHJldHVybiBwYXRoLnN0YXJ0c1dpdGgocm91dGVVcmwpO1xuXHR9XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnVGVhbUNvbnRyb2xsZXJzJywgW10pXG4uY29udHJvbGxlcignVGVhbXNDdHJsJywgW1wiJG1vZGFsXCIsIFwidGVhbXNcIiwgZnVuY3Rpb24oJG1vZGFsLCB0ZWFtcykge1xuXHR0aGlzLml0ZW1zID0gdGVhbXNbXCJ0ZWFtc1wiXTtcblx0dmFyIHNlbGYgPSB0aGlzO1xufV0pXG4uY29udHJvbGxlcignVGVhbXNQYXJlbnRDdHJsJywgWyckbW9kYWwnLCAndGVhbScsIGZ1bmN0aW9uKCRtb2RhbCwgdGVhbSkge1xuXHR0aGlzLnRvZ2dsZUV4cG9ydFByb2dyZXNzTW9kYWwgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHQgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tb2RhbHMvZXhwb3J0X3Byb2dyZXNzX21vZGFsLmh0bWwnLFxuXHRcdCAgY29udHJvbGxlcjogJ0V4cG9ydE1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJyxcblx0XHQgIHJlc29sdmU6IHtcblx0XHRcdCAgdGVhbTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdCAgcmV0dXJuIHRlYW07XG5cdFx0XHQgIH1cblx0XHQgIH1cblx0XHR9KTtcblx0fTtcbn1dKVxuLmNvbnRyb2xsZXIoJ1RlYW1zQ291cnNlQ3RybCcsIFtcIiRtb2RhbFwiLCBcInRlYW1cIiwgXCIkY29udHJvbGxlclwiLCBmdW5jdGlvbigkbW9kYWwsIHRlYW0sICRjb250cm9sbGVyKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdUZWFtc1BhcmVudEN0cmwnLCB7JG1vZGFsOiAkbW9kYWwsIHRlYW06IHRlYW19KSk7XG4gIHRoaXMudGVhbSA9IHRlYW07XG5cdGlmICh0ZWFtLm1lbWJlcnNfcHJvZ3Jlc3MgPT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhpcy50ZWFtLm1lbWJlcnNfcHJvZ3Jlc3MgPSBbXTtcblx0fVxuXHR0aGlzLmNvdXJzZXMgPSBbXTtcblx0aWYgKHRlYW0ubWVtYmVyc19wcm9ncmVzcy5sZW5ndGggPiAwKSB7XG5cdFx0Y291cnNlcyA9IHRlYW0ubWVtYmVyc19wcm9ncmVzc1swXS5jb3Vyc2VfcHJvZ3Jlc3M7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb3Vyc2VzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR0aGlzLmNvdXJzZXMucHVzaChjb3Vyc2VzW2ldLm5hbWUpO1xuXHRcdH1cblx0fVxufV0pXG4uY29udHJvbGxlcignVGVhbXNUcmFja0N0cmwnLCBbXCIkcm91dGVQYXJhbXNcIiwgXCJ0ZWFtXCIsIFwiJG1vZGFsXCIsIFwiJGNvbnRyb2xsZXJcIiwgZnVuY3Rpb24oJHJvdXRlUGFyYW1zLCB0ZWFtLCAkbW9kYWwsICRjb250cm9sbGVyKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdUZWFtc1BhcmVudEN0cmwnLCB7JG1vZGFsOiAkbW9kYWwsIHRlYW06IHRlYW19KSk7XG5cdHRoaXMudGVhbSA9IHRlYW07XG5cdGlmICh0ZWFtLm1lbWJlcnNfcHJvZ3Jlc3MgPT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhpcy50ZWFtLm1lbWJlcnNfcHJvZ3Jlc3MgPSBbXTtcblx0fVxuXHR0aGlzLmNvdXJzZSA9ICRyb3V0ZVBhcmFtcy5jb3Vyc2VfbmFtZTtcblx0dGhpcy50cmFja3MgPSBbXTtcblx0aWYgKHRlYW0ubWVtYmVyc19wcm9ncmVzcy5sZW5ndGggPiAwKSB7XG5cdFx0dmFyIGNvdXJzZXMgPSB0ZWFtLm1lbWJlcnNfcHJvZ3Jlc3NbMF0uY291cnNlX3Byb2dyZXNzO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY291cnNlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGNvdXJzZXNbaV0ubmFtZSA9PT0gdGhpcy5jb3Vyc2UpIHtcblx0XHRcdFx0dGhpcy5jb3Vyc2VOdW0gPSBpO1xuXHRcdFx0XHR2YXIgY291cnNlVHJhY2tzID0gY291cnNlc1tpXS50cmFja19wcm9ncmVzcztcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBjb3Vyc2VUcmFja3MubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHR0aGlzLnRyYWNrcy5wdXNoKGNvdXJzZVRyYWNrc1tqXS5uYW1lKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR0aGlzLmdldFByb2dyZXNzRm9yTWVtYmVyVHJhY2sgPSBmdW5jdGlvbihtZW1iZXIsIHRyYWNrTnVtKSB7XG5cdFx0cmV0dXJuIG1lbWJlci5jb3Vyc2VfcHJvZ3Jlc3Nbc2VsZi5jb3Vyc2VOdW1dLnRyYWNrX3Byb2dyZXNzW3RyYWNrTnVtXS5wcm9ncmVzcztcblx0fVxufV0pXG4uY29udHJvbGxlcignVGVhbXNVbml0Q3RybCcsIFtcIiRyb3V0ZVBhcmFtc1wiLCBcInRlYW1cIiwgXCIkbW9kYWxcIiwgXCIkY29udHJvbGxlclwiLCBmdW5jdGlvbigkcm91dGVQYXJhbXMsIHRlYW0sICRtb2RhbCwgJGNvbnRyb2xsZXIpIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ1RlYW1zUGFyZW50Q3RybCcsIHskbW9kYWw6ICRtb2RhbCwgdGVhbTogdGVhbX0pKTtcblx0dGhpcy50ZWFtID0gdGVhbTtcblx0aWYgKHRlYW0ubWVtYmVyc19wcm9ncmVzcyA9PSB1bmRlZmluZWQpIHtcblx0XHR0aGlzLnRlYW0ubWVtYmVyc19wcm9ncmVzcyA9IFtdO1xuXHR9XG5cdHRoaXMuY291cnNlID0gJHJvdXRlUGFyYW1zLmNvdXJzZV9uYW1lO1xuXHR0aGlzLnRyYWNrID0gJHJvdXRlUGFyYW1zLnRyYWNrX25hbWU7XG5cdHRoaXMudW5pdHMgPSBbXTtcblx0aWYgKHRlYW0ubWVtYmVyc19wcm9ncmVzcy5sZW5ndGggPiAwKSB7XG5cdFx0dmFyIGNvdXJzZXMgPSB0ZWFtLm1lbWJlcnNfcHJvZ3Jlc3NbMF0uY291cnNlX3Byb2dyZXNzO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY291cnNlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGNvdXJzZXNbaV0ubmFtZSA9PT0gdGhpcy5jb3Vyc2UpIHtcblx0XHRcdFx0dGhpcy5jb3Vyc2VOdW0gPSBpO1xuXHRcdFx0XHR2YXIgdHJhY2tzID0gY291cnNlc1tpXS50cmFja19wcm9ncmVzcztcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCB0cmFja3MubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRpZiAodHJhY2tzW2pdLm5hbWUgPT09IHRoaXMudHJhY2spIHtcblx0XHRcdFx0XHRcdHRoaXMudHJhY2tOdW0gPSBqO1xuXHRcdFx0XHRcdFx0dmFyIHRyYWNrVW5pdHMgPSB0cmFja3Nbal0udW5pdF9wcm9ncmVzcztcblx0XHRcdFx0XHRcdGZvciAodmFyIGsgPSAwOyBrIDwgdHJhY2tVbml0cy5sZW5ndGg7IGsrKykge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnVuaXRzLnB1c2godHJhY2tVbml0c1trXS5uYW1lKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR0aGlzLmdldFByb2dyZXNzRm9yTWVtYmVyVW5pdCA9IGZ1bmN0aW9uKG1lbWJlciwgdW5pdE51bSkge1xuXHRcdHJldHVybiBtZW1iZXIuY291cnNlX3Byb2dyZXNzW3NlbGYuY291cnNlTnVtXS50cmFja19wcm9ncmVzc1tzZWxmLnRyYWNrTnVtXS51bml0X3Byb2dyZXNzW3VuaXROdW1dLnByb2dyZXNzO1xuXHR9XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnVGVhbVNlcnZpY2VzJywgW10pXG4uZmFjdG9yeSgnc2lkZWJhcicsIGZ1bmN0aW9uKCkge1xuXHR2YXIgaXNTaG93aW5nID0gdHJ1ZTtcblx0cmV0dXJuIHsgcm91dGVzIDpcblx0XHRbe25hbWU6J092ZXJ2aWV3JywgaHJlZjonIy9vdmVydmlldy8nfSxcblx0XHR7bmFtZTonVGVhbXMnLCBocmVmOicjL3RlYW1zLyd9LFxuXHRcdHtuYW1lOidJbnZpdGVzJywgaHJlZjonIy9pbnZpdGVzLyd9LFxuXHRcdHtuYW1lOidNYW5hZ2UnLCBocmVmOicjL21hbmFnZS8nfV0sXG5cdFx0c2hvdzpcblx0XHR7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gaXNTaG93aW5nO1xuXHRcdFx0fSxcblx0XHRcdHNldDogZnVuY3Rpb24oc2hvd2luZykge1xuXHRcdFx0XHRpc1Nob3dpbmcgPSBzaG93aW5nO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn0pXG4uZmFjdG9yeSgndXNlckVtYWlsJywgW1wiJHJvb3RTY29wZVwiLCBmdW5jdGlvbigkcm9vdFNjb3BlKSB7XG5cdHJldHVybiAkcm9vdFNjb3BlLnVzZXJFbWFpbDtcbn1dKVxuLmZhY3RvcnkoJ0NTVicsIGZ1bmN0aW9uKCkge1xuICAgIC8vIEZST006IGh0dHA6Ly93d3cuYmVubmFkZWwuY29tL2Jsb2cvMTUwNC1hc2stYmVuLXBhcnNpbmctY3N2LXN0cmluZ3Mtd2l0aC1qYXZhc2NyaXB0LWV4ZWMtcmVndWxhci1leHByZXNzaW9uLWNvbW1hbmQuaHRtXG4gICAgLy8gVGhpcyB3aWxsIHBhcnNlIGEgZGVsaW1pdGVkIHN0cmluZyBpbnRvIGFuIGFycmF5IG9mXG4gICAgLy8gYXJyYXlzLiBUaGUgZGVmYXVsdCBkZWxpbWl0ZXIgaXMgdGhlIGNvbW1hLCBidXQgdGhpc1xuICAgIC8vIGNhbiBiZSBvdmVycmlkZW4gaW4gdGhlIHNlY29uZCBhcmd1bWVudC5cbiAgICB2YXIgQ1NWVG9BcnJheSA9IGZ1bmN0aW9uICggc3RyRGF0YSwgc3RyRGVsaW1pdGVyICkge1xuICAgICAgICAvLyBDaGVjayB0byBzZWUgaWYgdGhlIGRlbGltaXRlciBpcyBkZWZpbmVkLiBJZiBub3QsXG4gICAgICAgIC8vIHRoZW4gZGVmYXVsdCB0byBjb21tYS5cbiAgICAgICAgc3RyRGVsaW1pdGVyID0gKHN0ckRlbGltaXRlciB8fCBcIixcIik7XG4gICAgICAgIC8vIENyZWF0ZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiB0byBwYXJzZSB0aGUgQ1NWIHZhbHVlcy5cbiAgICAgICAgdmFyIG9ialBhdHRlcm4gPSBuZXcgUmVnRXhwKFxuICAgICAgICAgICAgKFxuICAgICAgICAgICAgICAgIC8vIERlbGltaXRlcnMuXG4gICAgICAgICAgICAgICAgXCIoXFxcXFwiICsgc3RyRGVsaW1pdGVyICsgXCJ8XFxcXHI/XFxcXG58XFxcXHJ8XilcIiArXG4gICAgICAgICAgICAgICAgLy8gUXVvdGVkIGZpZWxkcy5cbiAgICAgICAgICAgICAgICBcIig/OlxcXCIoW15cXFwiXSooPzpcXFwiXFxcIlteXFxcIl0qKSopXFxcInxcIiArXG4gICAgICAgICAgICAgICAgLy8gU3RhbmRhcmQgZmllbGRzLlxuICAgICAgICAgICAgICAgIFwiKFteXFxcIlxcXFxcIiArIHN0ckRlbGltaXRlciArIFwiXFxcXHJcXFxcbl0qKSlcIlxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIFwiZ2lcIlxuICAgICAgICAgICAgKTtcbiAgICAgICAgLy8gQ3JlYXRlIGFuIGFycmF5IHRvIGhvbGQgb3VyIGRhdGEuIEdpdmUgdGhlIGFycmF5XG4gICAgICAgIC8vIGEgZGVmYXVsdCBlbXB0eSBmaXJzdCByb3cuXG4gICAgICAgIHZhciBhcnJEYXRhID0gW1tdXTtcbiAgICAgICAgLy8gQ3JlYXRlIGFuIGFycmF5IHRvIGhvbGQgb3VyIGluZGl2aWR1YWwgcGF0dGVyblxuICAgICAgICAvLyBtYXRjaGluZyBncm91cHMuXG4gICAgICAgIHZhciBhcnJNYXRjaGVzID0gbnVsbDtcbiAgICAgICAgLy8gS2VlcCBsb29waW5nIG92ZXIgdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbiBtYXRjaGVzXG4gICAgICAgIC8vIHVudGlsIHdlIGNhbiBubyBsb25nZXIgZmluZCBhIG1hdGNoLlxuICAgICAgICB3aGlsZSAoYXJyTWF0Y2hlcyA9IG9ialBhdHRlcm4uZXhlYyggc3RyRGF0YSApKXtcbiAgICAgICAgICAgIC8vIEdldCB0aGUgZGVsaW1pdGVyIHRoYXQgd2FzIGZvdW5kLlxuICAgICAgICAgICAgdmFyIHN0ck1hdGNoZWREZWxpbWl0ZXIgPSBhcnJNYXRjaGVzWyAxIF07XG4gICAgICAgICAgICAvLyBDaGVjayB0byBzZWUgaWYgdGhlIGdpdmVuIGRlbGltaXRlciBoYXMgYSBsZW5ndGhcbiAgICAgICAgICAgIC8vIChpcyBub3QgdGhlIHN0YXJ0IG9mIHN0cmluZykgYW5kIGlmIGl0IG1hdGNoZXNcbiAgICAgICAgICAgIC8vIGZpZWxkIGRlbGltaXRlci4gSWYgaWQgZG9lcyBub3QsIHRoZW4gd2Uga25vd1xuICAgICAgICAgICAgLy8gdGhhdCB0aGlzIGRlbGltaXRlciBpcyBhIHJvdyBkZWxpbWl0ZXIuXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgc3RyTWF0Y2hlZERlbGltaXRlci5sZW5ndGggJiZcbiAgICAgICAgICAgICAgICAoc3RyTWF0Y2hlZERlbGltaXRlciAhPSBzdHJEZWxpbWl0ZXIpXG4gICAgICAgICAgICAgICAgKXtcbiAgICAgICAgICAgICAgICAvLyBTaW5jZSB3ZSBoYXZlIHJlYWNoZWQgYSBuZXcgcm93IG9mIGRhdGEsXG4gICAgICAgICAgICAgICAgLy8gYWRkIGFuIGVtcHR5IHJvdyB0byBvdXIgZGF0YSBhcnJheS5cbiAgICAgICAgICAgICAgICBhcnJEYXRhLnB1c2goIFtdICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBOb3cgdGhhdCB3ZSBoYXZlIG91ciBkZWxpbWl0ZXIgb3V0IG9mIHRoZSB3YXksXG4gICAgICAgICAgICAvLyBsZXQncyBjaGVjayB0byBzZWUgd2hpY2gga2luZCBvZiB2YWx1ZSB3ZVxuICAgICAgICAgICAgLy8gY2FwdHVyZWQgKHF1b3RlZCBvciB1bnF1b3RlZCkuXG4gICAgICAgICAgICBpZiAoYXJyTWF0Y2hlc1syXSkge1xuICAgICAgICAgICAgICAgIC8vIFdlIGZvdW5kIGEgcXVvdGVkIHZhbHVlLiBXaGVuIHdlIGNhcHR1cmVcbiAgICAgICAgICAgICAgICAvLyB0aGlzIHZhbHVlLCB1bmVzY2FwZSBhbnkgZG91YmxlIHF1b3Rlcy5cbiAgICAgICAgICAgICAgICB2YXIgc3RyTWF0Y2hlZFZhbHVlID0gYXJyTWF0Y2hlc1sgMiBdLnJlcGxhY2UoXG4gICAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoIFwiXFxcIlxcXCJcIiwgXCJnXCIgKSxcbiAgICAgICAgICAgICAgICAgICAgXCJcXFwiXCJcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgZm91bmQgYSBub24tcXVvdGVkIHZhbHVlLlxuICAgICAgICAgICAgICAgIHZhciBzdHJNYXRjaGVkVmFsdWUgPSBhcnJNYXRjaGVzWyAzIF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBOb3cgdGhhdCB3ZSBoYXZlIG91ciB2YWx1ZSBzdHJpbmcsIGxldCdzIGFkZFxuICAgICAgICAgICAgLy8gaXQgdG8gdGhlIGRhdGEgYXJyYXkuXG4gICAgICAgICAgICBhcnJEYXRhWyBhcnJEYXRhLmxlbmd0aCAtIDEgXS5wdXNoKCBzdHJNYXRjaGVkVmFsdWUgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZXR1cm4gdGhlIHBhcnNlZCBkYXRhLlxuICAgICAgICByZXR1cm4oIGFyckRhdGEgKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvQXJyYXk6IENTVlRvQXJyYXlcbiAgICB9O1xufSlcbi5zZXJ2aWNlKCdvQXV0aCcsIFtcIiRxXCIsIFwiJGxvY2F0aW9uXCIsIGZ1bmN0aW9uICgkcSwgJGxvY2F0aW9uKSB7XG5cdHZhciBzaWduaW4gPSBmdW5jdGlvbihpbW1lZGlhdGUpIHtcblx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcCA9ICRxLmRlZmVyKCk7XG5cdFx0XHRnYXBpLmF1dGguYXV0aG9yaXplKHtcblx0XHRcdFx0Y2xpZW50X2lkOiBDTElFTlRfSUQsXG5cdFx0XHRcdHNjb3BlOiBTQ09QRVMsXG5cdFx0XHRcdGltbWVkaWF0ZTogaW1tZWRpYXRlXG5cdFx0XHR9LCBmdW5jdGlvbihhdXRoUmVzdWx0KSB7XG5cdFx0XHRcdGlmIChhdXRoUmVzdWx0LmVycm9yKSB7XG5cdFx0XHRcdFx0cC5yZWplY3QoYXV0aFJlc3VsdCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cC5yZXNvbHZlKGF1dGhSZXN1bHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBwLnByb21pc2U7XG5cdFx0fVxuXHR9O1xuXHR0aGlzLnNpZ251cCA9IHNpZ25pbihmYWxzZSk7XG5cdHRoaXMuY2hlY2sgPSBzaWduaW4odHJ1ZSk7XG5cdHRoaXMuZXhlY3V0ZSA9IGZ1bmN0aW9uKGFwaU1ldGhvZCkge1xuXHRcdHZhciBwID0gJHEuZGVmZXIoKTtcblx0XHRnYXBpLmF1dGguYXV0aG9yaXplKHtcblx0XHRcdGNsaWVudF9pZCA6IENMSUVOVF9JRCxcblx0XHRcdHNjb3BlIDogU0NPUEVTLFxuXHRcdFx0aW1tZWRpYXRlIDogdHJ1ZVxuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0YXBpTWV0aG9kLmV4ZWN1dGUoZnVuY3Rpb24ocmVzcCkge1xuXHRcdFx0XHRpZiAoIXJlc3AuY29kZSkge1xuXHRcdFx0XHRcdHAucmVzb2x2ZShyZXNwLnJlc3VsdCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cC5yZWplY3QocmVzcCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXHRcdHJldHVybiBwLnByb21pc2U7XG5cdH07XG5cdHRoaXMuZ2V0VXNlckluZm8gPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5leGVjdXRlKGdhcGkuY2xpZW50Lm9hdXRoMi51c2VyaW5mby5nZXQoKSk7XG5cdH07XG59XSlcbi5zZXJ2aWNlKCdhcGknLCBbXCJvQXV0aFwiLCBcIiRxXCIsIGZ1bmN0aW9uIChvQXV0aCwgJHEpIHtcblx0dmFyIGNhY2hlID0ge307XG5cdHRoaXMuZGVsZXRlQ2FjaGUgPSBmdW5jdGlvbigpIHtcblx0XHRjYWNoZSA9IHt9O1xuXHR9XG5cdHZhciBjYWNoZWRBcGlDYWxsID0gZnVuY3Rpb24oY2FjaGVLZXksIGFwaU1ldGhvZCkge1xuXHRcdHJldHVybiBmdW5jdGlvbihmb3JjZVJlZnJlc2gpIHtcblx0XHRcdHZhciBwID0gJHEuZGVmZXIoKTtcblx0XHRcdGlmIChjYWNoZVtjYWNoZUtleV0gIT0gdW5kZWZpbmVkICYmIGZvcmNlUmVmcmVzaCA9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0cC5yZXNvbHZlKGNhY2hlW2NhY2hlS2V5XSk7XG5cdFx0XHRcdHJldHVybiBwLnByb21pc2U7XG5cdFx0XHR9XG5cdFx0XHRvQXV0aC5leGVjdXRlKGFwaU1ldGhvZClcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcblx0XHRcdFx0Y2FjaGVbY2FjaGVLZXldID0gcmVzcDtcblx0XHRcdFx0cC5yZXNvbHZlKHJlc3ApO1xuXHRcdFx0fSwgZnVuY3Rpb24oZXJyb3IpIHtcblx0XHRcdFx0cC5yZWplY3QoZXJyb3IpO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gcC5wcm9taXNlO1xuXHRcdH07XG5cdH07XG5cdHZhciBjYWNoZWRUZWFtQXBpQ2FsbCA9IGZ1bmN0aW9uKHR5cGUsIGFwaU1ldGhvZCkge1xuXHRcdHJldHVybiBmdW5jdGlvbihwYXJhbXMpIHtcblx0XHRcdHZhciBwID0gJHEuZGVmZXIoKTtcblx0XHRcdGlmKGNhY2hlW3R5cGUgKyBwYXJhbXMudGVhbV9rZXldICE9IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRwLnJlc29sdmUoY2FjaGVbdHlwZSArIHBhcmFtcy50ZWFtX2tleV0pO1xuXHRcdFx0XHRyZXR1cm4gcC5wcm9taXNlO1xuXHRcdFx0fVxuXHRcdFx0b0F1dGguZXhlY3V0ZShhcGlNZXRob2QocGFyYW1zKSlcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcblx0XHRcdFx0Y2FjaGVbdHlwZSArIHBhcmFtcy50ZWFtX2tleV0gPSByZXNwO1xuXHRcdFx0XHRwLnJlc29sdmUocmVzcCk7XG5cdFx0XHR9LCBmdW5jdGlvbihlcnJvcikge1xuXHRcdFx0XHRwLnJlamVjdChlcnJvcik7XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBwLnByb21pc2U7XG5cdFx0fTtcblx0fTtcblx0dGhpcy5kZWxldGVUZWFtID0gZnVuY3Rpb24odGVhbSkge1xuXHRcdGlmIChjYWNoZVtcImdldF90ZWFtc1wiXSAhPSB1bmRlZmluZWQpIHtcblx0XHRcdHZhciB0ZWFtcyA9IGNhY2hlW1wiZ2V0X3RlYW1zXCJdW1widGVhbXNcIl07XG5cdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGVhbXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYodGVhbS50ZWFtX2tleSA9PSB0ZWFtc1tpXS50ZWFtX2tleSkge1xuXHRcdFx0XHRcdHRlYW1zLnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gb0F1dGguZXhlY3V0ZShnYXBpLmNsaWVudC50ZWFtcy5kZWxldGUodGVhbSkpO1xuXHR9O1xuXHR0aGlzLmluc2VydFRlYW0gPSBmdW5jdGlvbih0ZWFtKSB7XG5cdFx0dmFyIHAgPSAkcS5kZWZlcigpO1xuXHRcdHZhciB1cGRhdGVDYWNoZSA9IGNhY2hlW1wiZ2V0X3RlYW1zXCJdICE9IHVuZGVmaW5lZDtcblx0XHR2YXIgdGVhbXMgPSB1bmRlZmluZWQ7XG5cdFx0dmFyIG5ld1RlYW0gPSB0ZWFtLnRlYW1fa2V5ID09IHVuZGVmaW5lZDtcblx0XHRpZiAodXBkYXRlQ2FjaGUpIHtcblx0XHRcdHRlYW1zID0gY2FjaGVbXCJnZXRfdGVhbXNcIl1bXCJ0ZWFtc1wiXTtcblx0XHRcdGlmKHRlYW1zID09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRjYWNoZVtcImdldF90ZWFtc1wiXVtcInRlYW1zXCJdID0gW107XG5cdFx0XHRcdHRlYW1zID0gY2FjaGVbXCJnZXRfdGVhbXNcIl1bXCJ0ZWFtc1wiXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0b0F1dGguZXhlY3V0ZShnYXBpLmNsaWVudC50ZWFtcy5pbnNlcnQodGVhbSkpXG5cdFx0LnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuXHRcdFx0aWYodXBkYXRlQ2FjaGUpIHtcblx0XHRcdFx0aWYobmV3VGVhbSkge1xuXHRcdFx0XHRcdHRlYW1zLnB1c2gocmVzcClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGVhbXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRcdGlmKHJlc3AudGVhbV9rZXkgPT09IHRlYW1zW2ldLnRlYW1fa2V5KSB7XG5cdFx0XHRcdFx0XHRcdHRlYW1zW2ldID0gcmVzcDtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRwLnJlc29sdmUocmVzcCk7XG5cdFx0fSwgZnVuY3Rpb24oZXJyb3IpIHtcblx0XHRcdHAucmVqZWN0KGVycm9yKTtcblx0XHR9KTtcblx0XHRyZXR1cm4gcC5wcm9taXNlO1xuXHR9O1xuXHR0aGlzLmdldEludml0ZXMgPSBjYWNoZWRBcGlDYWxsKFwiZ2V0X2ludml0ZXNcIiwgZ2FwaS5jbGllbnQudGVhbXMuaW52aXRlcy5saXN0KCkpO1xuXHR0aGlzLmVkaXRJbnZpdGUgPSBmdW5jdGlvbihpbnZpdGUpIHtcblx0XHRyZXR1cm4gb0F1dGguZXhlY3V0ZShnYXBpLmNsaWVudC50ZWFtcy5pbnZpdGVzLnJlc3BvbmQoaW52aXRlKSk7XG5cdH07XG5cdHRoaXMuZ2V0VGVhbXMgPSBjYWNoZWRBcGlDYWxsKFwiZ2V0X3RlYW1zXCIsIGdhcGkuY2xpZW50LnRlYW1zLmxpc3QuYWxsKCkpO1xuXHR0aGlzLmdldExlYWRUZWFtcyA9IGNhY2hlZEFwaUNhbGwoXCJnZXRfbGVhZF90ZWFtc1wiLCBnYXBpLmNsaWVudC50ZWFtcy5saXN0LmxlYWRlcigpKTtcblx0dGhpcy5nZXRQcm9ncmVzcyA9IGNhY2hlZFRlYW1BcGlDYWxsKFwicHJvZ3Jlc3NcIiwgZ2FwaS5jbGllbnQudGVhbXMucHJvZ3Jlc3MpO1xuXHR0aGlzLmdldFN3ZWVwcyA9IGNhY2hlZFRlYW1BcGlDYWxsKFwic3dlZXBcIiwgZ2FwaS5jbGllbnQudGVhbXMuc3dlZXBzLmdldCk7XG5cdHRoaXMuaW5zZXJ0U3dlZXAgPSBmdW5jdGlvbihzd2VlcCkge1xuXHRcdHJldHVybiBvQXV0aC5leGVjdXRlKGdhcGkuY2xpZW50LnRlYW1zLnN3ZWVwcy5pbnNlcnQoc3dlZXApKTtcblx0fVxuXHR0aGlzLmRlbGV0ZVN3ZWVwID0gZnVuY3Rpb24oc3dlZXApIHtcblx0XHRyZXR1cm4gb0F1dGguZXhlY3V0ZShnYXBpLmNsaWVudC50ZWFtcy5zd2VlcHMuZGVsZXRlKHN3ZWVwKSk7XG5cdH1cblx0dGhpcy5nZXRDb3Vyc2VzID0gY2FjaGVkQXBpQ2FsbChcImNvdXJzZXNcIiwgZ2FwaS5jbGllbnQudGVhbXMuY291cnNlcygpKTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdUZWFtRGlyZWN0aXZlcycsIFtdKVxuLmRpcmVjdGl2ZSgndGVhbVRpdGxlJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFJyxcbiAgICBzY29wZToge1xuICAgICAgdGVhbTogJz0nXG4gICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvY29tcG9uZW50cy90ZWFtX3RpdGxlLmh0bWwnXG4gIH07XG59KVxuLmRpcmVjdGl2ZSgncm91dGVMb2FkaW5nSW5kaWNhdG9yJywgWyckcm9vdFNjb3BlJywgZnVuY3Rpb24oJHJvb3RTY29wZSkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRScsXG4gICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL2NvbXBvbmVudHMvbG9hZGluZ19zcGlubmVyLmh0bWwnLFxuICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtLCBhdHRycykge1xuXG4gICAgICAkcm9vdFNjb3BlLiRvbignJHJvdXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbigpe1xuICAgICAgICAkcm9vdFNjb3BlLmlzUm91dGVMb2FkaW5nID0gdHJ1ZTtcbiAgICAgIH0pO1xuXG4gICAgICAkcm9vdFNjb3BlLiRvbignJHJvdXRlQ2hhbmdlU3VjY2VzcycsIGZ1bmN0aW9uKCl7XG4gICAgICAgICRyb290U2NvcGUuaXNSb3V0ZUxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1dKVxuLmRpcmVjdGl2ZSgnZmlsZUNoYW5nZScsIGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIHJlcXVpcmU6ICduZ01vZGVsJyxcbiAgICAgIHNjb3BlOiB7XG4gICAgICAgIGZpbGVDaGFuZ2U6ICcmJ1xuICAgICAgfSxcbiAgICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJsKSB7XG4gICAgICAgIGVsZW1lbnQub24oJ2NoYW5nZScsIG9uQ2hhbmdlKTtcblxuICAgICAgICBzY29wZS4kb24oJ2Rlc3Ryb3knLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBlbGVtZW50Lm9mZignY2hhbmdlJywgb25DaGFuZ2UpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiBvbkNoYW5nZSgpIHtcbiAgICAgICAgICBhdHRycy5tdWx0aXBsZSA/IGN0cmwuJHNldFZpZXdWYWx1ZShlbGVtZW50WzBdLmZpbGVzKSA6IGN0cmwuJHNldFZpZXdWYWx1ZShlbGVtZW50WzBdLmZpbGVzWzBdKTtcbiAgICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzY29wZS5maWxlQ2hhbmdlKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xufSlcbi5maWx0ZXIoJ3BlcmNlbnRhZ2UnLCBbJyRmaWx0ZXInLCBmdW5jdGlvbiAoJGZpbHRlcikge1xuICByZXR1cm4gZnVuY3Rpb24gKGlucHV0LCBkZWNpbWFscykge1xuICAgIHJldHVybiAkZmlsdGVyKCdudW1iZXInKShpbnB1dCAqIDEwMCwgZGVjaW1hbHMpICsgJyUnO1xuICB9O1xufV0pXG4uZmlsdGVyKCdwZW5kaW5nU3dlZXBzJywgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGl0ZW1zKSB7XG4gICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgIHZhciBjb21wYXJlRGF0ZSA9IG5ldyBEYXRlKDApO1xuICAgICAgY29tcGFyZURhdGUuc2V0RnVsbFllYXIobm93LmdldEZ1bGxZZWFyKCkpO1xuXHQgIGNvbXBhcmVEYXRlLnNldE1vbnRoKG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpKTtcbiAgICAgIHZhciBob3VyTnVtID0gbm93LmdldEhvdXJzKCk7XG4gICAgICB2YXIgZmlsdGVyZWQgPSBbXTtcbiAgICAgIGFuZ3VsYXIuZm9yRWFjaChpdGVtcywgZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICBpZihpdGVtLmR0LmdldFRpbWUoKSA+IGNvbXBhcmVEYXRlLmdldFRpbWUoKSB8fCAoaXRlbS5kdC5nZXRUaW1lKCkgPT09IGNvbXBhcmVEYXRlLmdldFRpbWUoKSAmJiBpdGVtLmhvdXJOdW0gPiBob3VyTnVtKSkge1xuICAgICAgICAgIGZpbHRlcmVkLnB1c2goaXRlbSk7IFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBmaWx0ZXJlZDtcbiAgICB9O1xufSlcbi5maWx0ZXIoJ2ZpcmVkU3dlZXBzJywgZnVuY3Rpb24oKSB7XG5cdHJldHVybiBmdW5jdGlvbihpdGVtcykge1xuXHQgIHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuXHQgIHZhciBjb21wYXJlRGF0ZSA9IG5ldyBEYXRlKDApO1xuXHQgIGNvbXBhcmVEYXRlLnNldEZ1bGxZZWFyKG5vdy5nZXRGdWxsWWVhcigpKTtcblx0ICBjb21wYXJlRGF0ZS5zZXRNb250aChub3cuZ2V0TW9udGgoKSwgbm93LmdldERhdGUoKSk7XG5cdCAgdmFyIGhvdXJOdW0gPSBub3cuZ2V0SG91cnMoKTtcblx0ICB2YXIgZmlsdGVyZWQgPSBbXTtcblx0ICBhbmd1bGFyLmZvckVhY2goaXRlbXMsIGZ1bmN0aW9uKGl0ZW0pIHtcblx0ICAgIGlmKGl0ZW0uZHQuZ2V0VGltZSgpIDwgY29tcGFyZURhdGUuZ2V0VGltZSgpIHx8IChpdGVtLmR0LmdldFRpbWUoKSA9PT0gY29tcGFyZURhdGUuZ2V0VGltZSgpICYmIGl0ZW0uaG91ck51bSA8PSBob3VyTnVtKSkge1xuXHQgICAgICBmaWx0ZXJlZC5wdXNoKGl0ZW0pO1xuXHQgICAgfVxuXHQgIH0pO1xuXHQgIHJldHVybiBmaWx0ZXJlZDtcblx0fTtcbn0pO1xuIiwiLypcblx0QGxpY2Vuc2UgQW5ndWxhciBTbmFja2JhciB2ZXJzaW9uIDEuMC4xXG5cdOKTkiAyMDE1IFR5bGVyIFJvY2t3b29kIGh0dHBzOi8vZ2l0aHViLmNvbS9yb2Nrd290ai9hbmd1bGFyLnNuYWNrYmFyXG5cdExpY2Vuc2U6IE1JVFxuKi9cblxuIWZ1bmN0aW9uKGEpe1widXNlIHN0cmljdFwiO3ZhciBuPWEubW9kdWxlKFwiYW5ndWxhci5zbmFja2JhclwiLFtdKTtuLmZhY3RvcnkoXCJzbmFja2JhclwiLFtcIiRyb290U2NvcGVcIixmdW5jdGlvbihhKXtyZXR1cm57Y3JlYXRlV2l0aFRpbWVvdXQ6ZnVuY3Rpb24obixlKXthLiRicm9hZGNhc3QoXCJjcmVhdGVTbmFja2JhcldpdGhUaW1lb3V0XCIse2NvbnRlbnQ6bixkdXJhdGlvbjplfSl9LGNyZWF0ZTpmdW5jdGlvbihuLGUpe2EuJGJyb2FkY2FzdChcImNyZWF0ZVNuYWNrYmFyXCIse2NvbnRlbnQ6bixpZDplfSl9LHJlbW92ZTpmdW5jdGlvbihuKXthLiRicm9hZGNhc3QoXCJyZW1vdmVTbmFja2JhclwiLHtpZDpufSl9fX1dKSxuLmRpcmVjdGl2ZShcInNuYWNrYmFyXCIsW1wiJHJvb3RTY29wZVwiLFwiJGNvbXBpbGVcIixcIiR0aW1lb3V0XCIsZnVuY3Rpb24obixlLGMpe3JldHVybiBmdW5jdGlvbih0LHIsbyl7dmFyIHM9YS5lbGVtZW50KHIpLGk9by5zbmFja2JhckR1cmF0aW9ufHwzZTMsdT1vLnNuYWNrYmFyUmVtb3ZlRGVsYXl8fDIwO24uJG9uKFwiY3JlYXRlU25hY2tiYXJXaXRoVGltZW91dFwiLGZ1bmN0aW9uKG4scil7dmFyIG89JzxkaXYgY2xhc3M9XCJzbmFja2JhciBzbmFja2Jhci1vcGVuZWRcIj48c3BhbiBjbGFzcz1cInNuYWNrYmFyLWNvbnRlbnRcIj4nK3IuY29udGVudCtcIjwvc3Bhbj48L2Rpdj5cIixiPWEuZWxlbWVudChlKG8pKHQpKTtzLmFwcGVuZChiKSxjKGZ1bmN0aW9uKCl7Yi5yZW1vdmVDbGFzcyhcInNuYWNrYmFyLW9wZW5lZFwiKSxjKGZ1bmN0aW9uKCl7Yi5yZW1vdmUoKX0sdSwhMSl9LHIuZHVyYXRpb258fGksITEpfSksbi4kb24oXCJjcmVhdGVTbmFja2JhclwiLGZ1bmN0aW9uKG4sYyl7dmFyIHI9JzxkaXYgY2xhc3M9XCJzbmFja2JhciBzbmFja2Jhci1vcGVuZWQgc25hY2tiYXItaWQtJytjLmlkKydcIj48c3BhbiBjbGFzcz1cInNuYWNrYmFyLWNvbnRlbnRcIj4nK2MuY29udGVudCtcIjwvc3Bhbj48L2Rpdj5cIixvPWEuZWxlbWVudChlKHIpKHQpKTtzLmFwcGVuZChvKX0pLG4uJG9uKFwicmVtb3ZlU25hY2tiYXJcIixmdW5jdGlvbihuLGUpe3ZhciBjPWEuZWxlbWVudChzWzBdLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzbmFja2Jhci1pZC1cIitlLmlkKSk7Yy5yZW1vdmVDbGFzcyhcInNuYWNrYmFyLW9wZW5lZFwiKSxjLnJlbW92ZSgpfSl9fV0pfShhbmd1bGFyKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
