CLIENT_ID="963009065087-2a5ccl5rhm4ghgm88li21fkjgsu5eua0@developer.gserviceaccount.com",SCOPES="https://www.googleapis.com/auth/userinfo.email",RESPONSE_TYPE="token id_token",init=function(){var o,a="//"+window.location.host+"/_ah/api";-1===window.location.host.indexOf("localhost")&&(a="https://roseboticsweb.appspot.com/_ah/api");var t=function(){0==--o&&angular.bootstrap(document,["TeamApp"])};o=2,gapi.client.load("teams","v1",t,a),gapi.client.load("oauth2","v2",t)};
"use strict";angular.module("TeamApp",["TeamControllers","ModalControllers","OverviewControllers","ManageControllers","TeamServices","InviteControllers","ui.bootstrap","ngRoute","TeamDirectives","angular.snackbar"]).config(["$routeProvider",function(e){e.when("/overview/",{templateUrl:"/static/teams/partials/overview.html",controller:"OverviewCtrl as overview"}).when("/preview/",{templateUrl:"/static/teams/partials/preview.html",controller:"PreviewCtrl as preview"}).when("/teams/",{templateUrl:"/static/teams/partials/teams.html",controller:"TeamsCtrl as teams",resolve:{teams:["api",function(e){return e.getTeams()}]}}).when("/teams/:team_key/courses",{templateUrl:"/static/teams/partials/teams_course.html",controller:"TeamsCourseCtrl as courses",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/teams/:team_key/courses/:course_name/tracks",{templateUrl:"/static/teams/partials/teams_track.html",controller:"TeamsTrackCtrl as tracks",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/teams/:team_key/courses/:course_name/tracks/:track_name/units",{templateUrl:"/static/teams/partials/teams_unit.html",controller:"TeamsUnitCtrl as units",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/invites/",{templateUrl:"/static/teams/partials/invites.html",controller:"InvitesCtrl as invites",resolve:{invites:["api",function(e){return e.getInvites()}]}}).when("/manage/",{templateUrl:"/static/teams/partials/manage.html",controller:"ManageCtrl as manage",resolve:{teams:["api",function(e){return e.getLeadTeams()}]}}).when("/manage/:team_key",{templateUrl:"/static/teams/partials/manage_team.html",controller:"ManageTeamCtrl as manage",resolve:{teams:["api",function(e){return e.getLeadTeams()}],user:["oAuth",function(e){return e.getUserInfo()}],courses:["api",function(e){return e.getCourses()}]}}).when("/manage/:team_key/sweeps",{templateUrl:"/static/teams/partials/manage_sweeps.html",controller:"SweepsTeamCtrl as sweeps",resolve:{teams:["api",function(e){return e.getLeadTeams()}],sweeps:["api","$route",function(e,t){return e.getSweeps(t.current.params)}],progress:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).otherwise({redirectTo:"/overview/"})}]).run(["$rootScope","$location","oAuth","sidebar",function(e,t,r,a){angular.element(document.querySelectorAll(".hidden.container")).removeClass("hidden"),angular.element(document.querySelector("div.spinner")).addClass("hidden"),r.check().then(null,function(){t.path("/preview"),a.show.set(!1)})}]);
angular.module("InviteControllers",[]).controller("InvitesCtrl",["invites","api","snackbar",function(e,s,n){this.pending=[],this.accepted=[];var t=e.invites;void 0==t&&(t=[]);for(var i=0;i<t.length;i++)"NOT_CHOSEN"===t[i].response?this.pending.push(t[i]):this.accepted.push(t[i]);var r=this;this.editInvite=function(e,t){var i=!1;if("NOT_CHOSEN"===e.response&&"NOT_CHOSEN"!==t){for(var o=0;o<r.pending.length;o++)if(r.pending[o].team_key===e.team_key){r.pending.splice(o,1);break}r.accepted.push(e),i=!0}if("REJECT_INVITE"===t){for(var o=0;o<r.accepted.length;o++)if(r.accepted[o].team_key===e.team_key){r.accepted.splice(o,1);break}i=!0}e.response=t,n.create("Sending response...",4),s.editInvite(e).then(function(){n.remove(4),n.createWithTimeout("<b>Success!</b> Response saved"),i&&s.getTeams(!0)},function(){n.remove(4),n.createWithTimeout("<b>Error!</b> Response not saved")})},this.pendingResponses=["NOT_CHOSEN","ALL_MEMBERS","TEAM_LEADER","REJECT_INVITE"],this.acceptedResponses=["ALL_MEMBERS","TEAM_LEADER","REJECT_INVITE"],this.responseOptions={NOT_CHOSEN:"No response",ALL_MEMBERS:"All members can see my progress",TEAM_LEADER:"Only the leader can see my progress",REJECT_INVITE:"Reject invite and no one can see my progress"}}]);
angular.module("ManageControllers",[]).controller("ManageCtrl",["$modal","teams","api","snackbar","oAuth",function(e,t,r,o,a){this.items=t.teams;var s=this;this.toggleCreateTeamModal=function(){var n=e.open({templateUrl:"/static/teams/partials/modals/create_team_modal.html",controller:"CreateTeamModalInstanceCtrl",controllerAs:"modal",resolve:{user:function(){return a.getUserInfo()},courses:function(){return r.getCourses()}}});n.result.then(function(e){o.create("Creating team...",1),r.insertTeam(e).then(function(e){o.remove(1),o.createWithTimeout("<b>Success!</b> Team created"),void 0==t.teams&&(t.teams=[],s.items=t.teams),t.teams.push(e)},function(e){o.remove(1),o.createWithTimeout("<b>Error!</b> Team not created")})})}}]).controller("ManageTeamCtrl",["$routeParams","$modal","teams","$scope","snackbar","api","$location","user","courses",function(e,t,r,o,a,s,n,i,m){for(var l=r.teams,u=-1,c=0;c<l.length;c++)if(l[c].team_key==e.team_key){this.team=l[c],u=c;break}this.goToSweep=function(){n.path(n.path()+"/sweeps")},this.offeredCourses=m,console.log(m),this.getCourseTitle=function(e){for(var t=0;t<m.ids.length;t++)if(m.ids[t]===e)return m.titles[t];return""};var p=0,h=this,d=o.$watch(function(){return h.team},function(){p++,h.onInputMadeDirty(p)},!0);this.onInputMadeDirty=function(e){e>1&&(a.createWithTimeout("<b>Warning!</b> You must press submit to save your changes"),d())},this.deleteMember=function(e){for(var t=h.team.members,r=0;r<t.length;r++)if(t[r].email==e.email){t.splice(r,1);break}},this.saveTeam=function(){a.create("Saving team...",3),s.insertTeam(h.team).then(function(e){a.remove(3),a.createWithTimeout("<b>Success!</b> Team saved")},function(){a.remove(3),a.createWithTimeout("<b>Error!</b> Team not saved")})},this.toggleDeleteTeamModal=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/delete_team_modal.html",controller:"DeleteTeamModalInstanceCtrl",controllerAs:"modal"});e.result.then(function(){l.splice(c,1),a.create("Deleting team...",2),s.deleteTeam(h.team).then(function(){a.remove(2),a.createWithTimeout("<b>Success!</b> Team deleted")},function(){a.remove(2),a.createWithTimeout("<b>Error!</b> Team not deleted")}),n.path("/manage")})},this.toggleCreateMemberModal=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/create_member_modal.html",controller:"NewMemberModalInstanceCtrl",controllerAs:"modal"});e.result.then(function(e){var t={email:e,visibility:"NOT_CHOSEN"};void 0==h.team.members&&(h.team.members=[]),e==i.email&&(t.visibility="ALL_MEMBERS"),h.team.members.push(t),h.team.newMembers=!0})},this.visibilityOptions={NOT_CHOSEN:"No Response",ALL_MEMBERS:"Progress visible by everyone",TEAM_LEADER:"Progress visible by leader only"}}]).controller("SweepsTeamCtrl",["$routeParams","$modal","teams","sweeps","$location","progress","snackbar","api","$scope",function(e,t,r,o,a,s,n,i,m){var l=r.teams;this.sweeps=o.sweeps||[];var u=-1;this.today=new Date,this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"],this.done=function(){a.path("/manage/"+e.team_key)};for(var c=0;c<l.length;c++)if(l[c].team_key==e.team_key){this.team=l[c],u=c;break}for(var p=this,c=0;c<this.sweeps.length;c++){var h=this.sweeps[c];h.hourNum=parseInt(h.hour);var d=new Date(0);d.setFullYear(h.year),d.setMonth(parseInt(h.month)-1,parseInt(h.day)),h.dt=d}this.saveSweep=function(e){n.create("Saving Sweep...",6),e.hour=e.hourNum.toString(),e.year=e.dt.getFullYear().toString(),e.month=(e.dt.getMonth()+1).toString(),e.day=e.dt.getDate().toString(),i.insertSweep(e).then(function(e){n.remove(6),n.createWithTimeout("<b>Success!</b> Sweep saved")},function(){n.remove(6),n.createWithTimeout("<b>Error!</b> Sweep not saved")})},this.deleteSweep=function(e){n.create("Removing Sweep...",7),i.deleteSweep(e).then(function(){for(var t=0;t<p.sweeps.length;t++)if(e.sweep_key===p.sweeps[t].sweep_key){p.sweeps.splice(t,1);break}n.remove(7),n.createWithTimeout("<b>Success!</b> Sweep removed")},function(){n.remove(7),n.createWithTimeout("<b>Error!</b> Sweep not removed")})},this.stopEvent=function(e){e.preventDefault(),e.stopPropagation()},this.toggleImportSweepsDialog=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/import_sweeps_modal.html",controller:"ImportSweepsModalInstanceCtrl",controllerAs:"modal",resolve:{teams:function(){return l}}});e.result.then(function(e){console.log(e),n.create("Importing from "+e.name+"...",10),i.getSweeps(e).then(function(e){if(console.log(e),!e.sweeps||!e.sweeps.length)return n.remove(10),void n.createWithTimeout("<b>Error!</b> There were no sweeps to import");for(var t=0;t<e.sweeps.length;t++){var r=e.sweeps[t];delete r.sweep_key,r.team_key=p.team.team_key,i.insertSweep(r).then(function(e){console.log(e),e.hourNum=parseInt(e.hour);var t=new Date(0);t.setFullYear(e.year),t.setMonth(parseInt(e.month)-1,parseInt(e.day)),e.dt=t,void 0==o.sweeps&&(o.sweeps=[],p.sweeps=o.sweeps);for(var r=!1,a=0;a<p.sweeps.length;a++)if(p.sweeps[a].dt.getTime()<e.dt.getTime()||p.sweeps[a].dt.getTime()===e.dt.getTime()&&p.sweeps[a].hourNum<e.hourNum){p.sweeps.splice(a,0,e),r=!0;break}r||p.sweeps.push(e)})}n.remove(10),n.createWithTimeout("<b>Success!</b> Sweeps Imported")},function(){n.remove(10),n.createWithTimeout("<b>Error!</b> Import failed")})})},this.toggleSweepOptionsModal=function(e){var r=t.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"SweepOptionsModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return s},optionString:function(){return e.options}}});r.result.then(function(t){e.options=t})},this.toggleCreateSweepDialog=function(){var r=t.open({templateUrl:"/static/teams/partials/modals/create_sweep_modal.html",controller:"NewSweepModalInstanceCtrl",controllerAs:"modal",resolve:{team_key:function(){return e.team_key},progress:function(){return s}}});r.result.then(function(e){n.create("Creating Sweep...",8),e.hour=e.hourNum.toString(),e.year=e.dt.getFullYear().toString(),e.month=(e.dt.getMonth()+1).toString(),e.day=e.dt.getDate().toString();for(var t=e.repeats||0,r=[e],a=function(e,t){return new Date(e.getFullYear(),e.getMonth(),e.getDate()+7*t)},s=1;t>=s;s++){var m=angular.copy(r[0]),l=a(m.dt,s);m.year=l.getFullYear().toString(),m.month=(l.getMonth()+1).toString(),m.day=l.getDate().toString(),r.push(m)}for(var u=0;u<r.length;u++)e=r[u],i.insertSweep(e).then(function(e){e.hourNum=parseInt(e.hour);var t=new Date(0);t.setFullYear(e.year),t.setMonth(parseInt(e.month)-1,parseInt(e.day)),e.dt=t,void 0==o.sweeps&&(o.sweeps=[],p.sweeps=o.sweeps);for(var r=!1,a=0;a<p.sweeps.length;a++)if(p.sweeps[a].dt.getTime()<e.dt.getTime()||p.sweeps[a].dt.getTime()===e.dt.getTime()&&p.sweeps[a].hourNum<e.hourNum){p.sweeps.splice(a,0,e),r=!0;break}r||p.sweeps.push(e),n.remove(8),n.createWithTimeout("<b>Success!</b> Sweep created")},function(){n.remove(8),n.createWithTimeout("<b>Error!</b> Sweep not created")})})}}]);
angular.module("ModalControllers",[]).controller("ModalToggleCtrl",["$modal",function(e){this.toggleSignOutModal=function(){e.open({templateUrl:"logout_modal.html",controller:"SimpleModalInstanceCtrl",controllerAs:"modal"})},this.toggleEditProfileModal=function(){e.open({templateUrl:"edit_profile_modal.html",controller:"SimpleModalInstanceCtrl",controllerAs:"modal"})}}]).controller("SimpleModalInstanceCtrl",["$modalInstance",function(e){this.cancel=function(){e.dismiss("cancel")}}]).controller("NewMemberModalInstanceCtrl",["$modalInstance","$controller",function(e,t){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.email="",this.addMember=function(t){return t=t.trim(),0===t.length?void e.dismiss("cancel"):(t.indexOf("@")<0&&(t+="@gmail.com"),void e.close(t))}}]).controller("DeleteTeamModalInstanceCtrl",["$modalInstance","$controller",function(e,t){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.remove=function(){e.close()}}]).controller("ImportSweepsModalInstanceCtrl",["$modalInstance","$controller","teams",function(e,t,n){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.teams=n,this.selectedTeam=n[0],this["import"]=function(){e.close(this.selectedTeam)}}]).controller("CreateTeamModalInstanceCtrl",["$modalInstance","$controller","user","courses","CSV","$scope",function(e,t,n,o,s,a){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.teamName="",this.teamMembers="",this.includeLeader=!1,this.file=!1;var r=this;this.courses=angular.copy(o.ids),this.offeredCourses=o,this.getCourseTitle=function(e){for(var t=0;t<o.ids.length;t++)if(o.ids[t]===e)return o.titles[t];return""},this.upload=function(){var e=function(e){alert(e)},t=new FileReader;t.onload=function(n){var o=t.result,l=null;try{l=s.toArray(o)}catch(n){e("Cannot read CSV!")}console.log(l);for(var i=!1,c=[],m=0;m<l.length;m++){var p=l[m];if(i===!1)for(var u=0;u<p.length;u++)"Email"===p[u]&&(i=u);else p.length>i&&c.push(p[i].toLowerCase())}a.$apply(function(){r.teamMembers+=c.join()})},t.readAsText(this.file)},this.add=function(){for(var t={name:r.teamName,leader:n.email,members:[],courses:r.courses},o=r.teamMembers.split(","),s=0;s<o.length;s++){var a=o[s].trim();0!==a.length&&(a.indexOf("@")<0&&(a+="@gmail.com"),t.members.push({email:a,visibility:"NOT_CHOSEN"}))}r.includeLeader&&t.members.push({email:n.email,visibility:"ALL_MEMBERS"}),e.close(t)}}]).controller("ExportModalParentCtrl",["$modalInstance","$controller","team","$window",function(e,t,n){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e})),this.team=n,this.fullname=!0,this.username=!0,this.hasTimestamp=!0,this.pointValue="tasks",this.pointsPerUnit=parseInt(localStorage.getItem("ppu"))||1,this.pointsPerTask=parseInt(localStorage.getItem("ppt"))||1,this.includeCourseProgress=!1,this.includeTrackProgress=!1,this.timezone="EST",this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"];this.generate=function(){var e="team_urlsafe="+n.team_key;this.fullname&&(e+="&student_name=true"),this.username&&(e+="&rose_username=true"),this.hasTimestamp&&(e+="&timezone="+this.timezone),this.includeCourseProgress&&(e+="&course_progress=true"),this.includeTrackProgress&&(e+="&track_progress=true"),"points"===this.pointValue?(e+="&ppu="+this.pointsPerUnit,localStorage.setItem("ppu",this.pointsPerUnit)):(e+="&ppt="+this.pointsPerTask,localStorage.setItem("ppt",this.pointsPerTask)),this.onPostGenerate(e)}}]).controller("ExportModalInstanceCtrl",["$modalInstance","$controller","team","$window",function(e,t,n,o){angular.extend(this,t("ExportModalParentCtrl",{$modalInstance:e,$controller:t,team:n})),this.onPostGenerate=function(t){var n="http://"+o.location.host+"/teams/export.csv?";o.open(n+encodeURI(t),"_blank"),e.close()},this.doneButtonText="Generate"}]).controller("NewSweepModalInstanceCtrl",["$modalInstance","$controller","team_key","$modal","progress",function(e,t,n,o,s){angular.extend(this,t("SimpleModalInstanceCtrl",{$modalInstance:e}));var a=localStorage.getItem("ppu")||"1";this.sweep={dt:new Date,team_key:n,options:"student_name=true&rose_username=true&timezone=EST&ppu="+a,hourNum:12,tz:"EST"},this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"],this.today=new Date,this.doesRepeat=!1,this.repeatWeeks=0,this.stopEvent=function(e){e.preventDefault(),e.stopPropagation()},this.addSweep=function(){this.doesRepeat&&(this.sweep.repeats=this.repeatWeeks),e.close(this.sweep)};var r=this;this.toggleSweepOptionsModal=function(){var e=o.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"SweepOptionsModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return s},optionString:function(){return r.sweep.options}}});e.result.then(function(e){r.sweep.options=e})}}]).controller("SweepOptionsModalInstanceCtrl",["$modalInstance","$controller","team","optionString",function(e,t,n,o){if(angular.extend(this,t("ExportModalParentCtrl",{$modalInstance:e,$controller:t,team:n})),this.onPostGenerate=function(t){e.close(t)},this.doneButtonText="Done",""!==o){var s={};o=o.split("&");for(var a=0;a<o.length;a++){var r=o[a].split("=");s[r[0]]=r[1]}this.fullname="true"===s.student_name,this.username="true"===s.rose_username,this.hasTimestamp=void 0!=s.timezone,this.pointValue=s.ppu?"points":"tasks",this.pointsPerUnit=parseInt(s.ppu)||parseInt(localStorage.getItem("ppu"))||1,this.pointsPerTask=parseInt(s.ppt)||parseInt(localStorage.getItem("ppt"))||1,this.includeCourseProgress="true"===s.course_progress,this.includeTrackProgress="true"===s.track_progress,this.timezone=s.timezone||"EST",this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"]}}]);
angular.module("OverviewControllers",[]).controller("OverviewCtrl",function(){}).controller("PreviewCtrl",["oAuth","$location","sidebar","$rootScope","snackbar","userEmail",function(t,e,o,n,r,i){t.check().then(function(){e.path("/overview"),o.show.set(!0),n.$apply()}),this.signup=function(){t.signup().then(function(){t.getUserInfo().then(function(t){t.email!==i&&r.createWithTimeout("<b>Danger!</b> Signing up for teams with another account may cause errors!",6e3)}),e.path("/overview"),o.show.set(!0)},function(){r.createWithTimeout("<b>Error!</b> Sign up failed")})}}]).controller("SidebarCtrl",["sidebar","$location","$scope",function(t,e,o){this.routes=t.routes,this.show=t.show.get();var n=this;o.$watch(function(){return t.show.get()},function(t){n.show=t}),this.isActive=function(t){var o=e.path();return t=t.substring(1),o.startsWith(t)}}]);
angular.module("TeamControllers",[]).controller("TeamsCtrl",["$modal","teams",function(r,e){this.items=e.teams}]).controller("TeamsParentCtrl",["$modal","team",function(r,e){this.toggleExportProgressModal=function(){r.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"ExportModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return e}}})}}]).controller("TeamsCourseCtrl",["$modal","team","$controller",function(r,e,s){if(angular.extend(this,s("TeamsParentCtrl",{$modal:r,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.courses=[],e.members_progress.length>0){courses=e.members_progress[0].course_progress;for(var t=0;t<courses.length;t++)this.courses.push(courses[t].name)}}]).controller("TeamsTrackCtrl",["$routeParams","team","$modal","$controller",function(r,e,s,t){if(angular.extend(this,t("TeamsParentCtrl",{$modal:s,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.course=r.course_name,this.tracks=[],e.members_progress.length>0)for(var o=e.members_progress[0].course_progress,a=0;a<o.length;a++)if(o[a].name===this.course){this.courseNum=a;for(var m=o[a].track_progress,n=0;n<m.length;n++)this.tracks.push(m[n].name);break}var l=this;this.getProgressForMemberTrack=function(r,e){return r.course_progress[l.courseNum].track_progress[e].progress}}]).controller("TeamsUnitCtrl",["$routeParams","team","$modal","$controller",function(r,e,s,t){if(angular.extend(this,t("TeamsParentCtrl",{$modal:s,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.course=r.course_name,this.track=r.track_name,this.units=[],e.members_progress.length>0)for(var o=e.members_progress[0].course_progress,a=0;a<o.length;a++)if(o[a].name===this.course){this.courseNum=a;for(var m=o[a].track_progress,n=0;n<m.length;n++)if(m[n].name===this.track){this.trackNum=n;for(var l=m[n].unit_progress,i=0;i<l.length;i++)this.units.push(l[i].name);break}break}var c=this;this.getProgressForMemberUnit=function(r,e){return r.course_progress[c.courseNum].track_progress[c.trackNum].unit_progress[e].progress}}]);
angular.module("TeamServices",[]).factory("sidebar",function(){var e=!0;return{routes:[{name:"Overview",href:"#/overview/"},{name:"Teams",href:"#/teams/"},{name:"Invites",href:"#/invites/"},{name:"Manage",href:"#/manage/"}],show:{get:function(){return e},set:function(t){e=t}}}}).factory("userEmail",["$rootScope",function(e){return e.userEmail}]).factory("CSV",function(){var e=function(e,t){t=t||",";for(var i=new RegExp("(\\"+t+'|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\'+t+"\\r\\n]*))","gi"),n=[[]],r=null;r=i.exec(e);){var s=r[1];if(s.length&&s!=t&&n.push([]),r[2])var a=r[2].replace(new RegExp('""',"g"),'"');else var a=r[3];n[n.length-1].push(a)}return n};return{toArray:e}}).service("oAuth",["$q","$location",function(e,t){var i=function(t){return function(){var i=e.defer();return gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:t},function(e){e.error?i.reject(e):i.resolve(e)}),i.promise}};this.signup=i(!1),this.check=i(!0),this.execute=function(t){var i=e.defer();return gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:!0},function(){t.execute(function(e){e.code?i.reject(e):i.resolve(e.result)})}),i.promise},this.getUserInfo=function(){return this.execute(gapi.client.oauth2.userinfo.get())}}]).service("api",["oAuth","$q",function(e,t){var i={};this.deleteCache=function(){i={}};var n=function(n,r){return function(s){var a=t.defer();return void 0!=i[n]&&void 0==s?(a.resolve(i[n]),a.promise):(e.execute(r).then(function(e){i[n]=e,a.resolve(e)},function(e){a.reject(e)}),a.promise)}},r=function(n,r){return function(s){var a=t.defer();return void 0!=i[n+s.team_key]?(a.resolve(i[n+s.team_key]),a.promise):(e.execute(r(s)).then(function(e){i[n+s.team_key]=e,a.resolve(e)},function(e){a.reject(e)}),a.promise)}};this.deleteTeam=function(t){if(void 0!=i.get_teams)for(var n=i.get_teams.teams,r=0;r<n.length;r++)if(t.team_key==n[r].team_key){n.splice(r,1);break}return e.execute(gapi.client.teams["delete"](t))},this.insertTeam=function(n){var r=t.defer(),s=void 0!=i.get_teams,a=void 0,o=void 0==n.team_key;return s&&(a=i.get_teams.teams,void 0==a&&(i.get_teams.teams=[],a=i.get_teams.teams)),e.execute(gapi.client.teams.insert(n)).then(function(e){if(s)if(o)a.push(e);else for(var t=0;t<a.length;t++)if(e.team_key===a[t].team_key){a[t]=e;break}r.resolve(e)},function(e){r.reject(e)}),r.promise},this.getInvites=n("get_invites",gapi.client.teams.invites.list()),this.editInvite=function(t){return e.execute(gapi.client.teams.invites.respond(t))},this.getTeams=n("get_teams",gapi.client.teams.list.all()),this.getLeadTeams=n("get_lead_teams",gapi.client.teams.list.leader()),this.getProgress=r("progress",gapi.client.teams.progress),this.getSweeps=r("sweep",gapi.client.teams.sweeps.get),this.insertSweep=function(t){return e.execute(gapi.client.teams.sweeps.insert(t))},this.deleteSweep=function(t){return e.execute(gapi.client.teams.sweeps["delete"](t))},this.getCourses=n("courses",gapi.client.teams.courses())}]);
angular.module("TeamDirectives",[]).directive("teamTitle",function(){return{restrict:"E",scope:{team:"="},templateUrl:"/static/teams/partials/components/team_title.html"}}).directive("routeLoadingIndicator",["$rootScope",function(e){return{restrict:"E",templateUrl:"/static/teams/partials/components/loading_spinner.html",link:function(t,n,i){e.$on("$routeChangeStart",function(){e.isRouteLoading=!0}),e.$on("$routeChangeSuccess",function(){e.isRouteLoading=!1})}}}]).directive("fileChange",function(){return{restrict:"A",require:"ngModel",scope:{fileChange:"&"},link:function(e,t,n,i){function r(){n.multiple?i.$setViewValue(t[0].files):i.$setViewValue(t[0].files[0]),e.$apply(function(){e.fileChange()})}t.on("change",r),e.$on("destroy",function(){t.off("change",r)})}}}).filter("percentage",["$filter",function(e){return function(t,n){return e("number")(100*t,n)+"%"}}]).filter("pendingSweeps",function(){return function(e){var t=new Date,n=new Date(0);n.setFullYear(t.getFullYear()),n.setMonth(t.getMonth(),t.getDate());var i=t.getHours(),r=[];return angular.forEach(e,function(e){(e.dt.getTime()>n.getTime()||e.dt.getTime()===n.getTime()&&e.hourNum>i)&&r.push(e)}),r}}).filter("firedSweeps",function(){return function(e){var t=new Date,n=new Date(0);n.setFullYear(t.getFullYear()),n.setMonth(t.getMonth(),t.getDate());var i=t.getHours(),r=[];return angular.forEach(e,function(e){(e.dt.getTime()<n.getTime()||e.dt.getTime()===n.getTime()&&e.hourNum<=i)&&r.push(e)}),r}});
!function(a){"use strict";var n=a.module("angular.snackbar",[]);n.factory("snackbar",["$rootScope",function(a){return{createWithTimeout:function(n,e){a.$broadcast("createSnackbarWithTimeout",{content:n,duration:e})},create:function(n,e){a.$broadcast("createSnackbar",{content:n,id:e})},remove:function(n){a.$broadcast("removeSnackbar",{id:n})}}}]),n.directive("snackbar",["$rootScope","$compile","$timeout",function(n,e,c){return function(t,r,o){var s=a.element(r),i=o.snackbarDuration||3e3,u=o.snackbarRemoveDelay||20;n.$on("createSnackbarWithTimeout",function(n,r){var o='<div class="snackbar snackbar-opened"><span class="snackbar-content">'+r.content+"</span></div>",b=a.element(e(o)(t));s.append(b),c(function(){b.removeClass("snackbar-opened"),c(function(){b.remove()},u,!1)},r.duration||i,!1)}),n.$on("createSnackbar",function(n,c){var r='<div class="snackbar snackbar-opened snackbar-id-'+c.id+'"><span class="snackbar-content">'+c.content+"</span></div>",o=a.element(e(r)(t));s.append(o)}),n.$on("removeSnackbar",function(n,e){var c=a.element(s[0].getElementsByClassName("snackbar-id-"+e.id));c.removeClass("snackbar-opened"),c.remove()})}}])}(angular);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UuanMiLCJhcHAuanMiLCJpbnZpdGVzX2NvbnRyb2xsZXJzLmpzIiwibWFuYWdlX2NvbnRyb2xsZXJzLmpzIiwibW9kYWxfY29udHJvbGxlcnMuanMiLCJvdmVydmlld19jb250cm9sbGVycy5qcyIsInRlYW1zX2NvbnRyb2xsZXJzLmpzIiwic2VydmljZXMuanMiLCJkaXJlY3RpdmVzLmpzIiwiYW5ndWxhci5zbmFja2Jhci5taW4uanMiXSwibmFtZXMiOlsiQ0xJRU5UX0lEIiwiU0NPUEVTIiwiUkVTUE9OU0VfVFlQRSIsImluaXQiLCJhcGlzVG9Mb2FkIiwiYXBpUm9vdCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaG9zdCIsImluZGV4T2YiLCJjYWxsYmFjayIsImFuZ3VsYXIiLCJib290c3RyYXAiLCJkb2N1bWVudCIsImdhcGkiLCJjbGllbnQiLCJsb2FkIiwibW9kdWxlIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicmVzb2x2ZSIsInRlYW1zIiwiYXBpIiwiZ2V0VGVhbXMiLCJ0ZWFtIiwiJHJvdXRlIiwiZ2V0UHJvZ3Jlc3MiLCJjdXJyZW50IiwicGFyYW1zIiwiaW52aXRlcyIsImdldEludml0ZXMiLCJnZXRMZWFkVGVhbXMiLCJ1c2VyIiwib0F1dGgiLCJnZXRVc2VySW5mbyIsImNvdXJzZXMiLCJnZXRDb3Vyc2VzIiwic3dlZXBzIiwiZ2V0U3dlZXBzIiwicHJvZ3Jlc3MiLCJvdGhlcndpc2UiLCJyZWRpcmVjdFRvIiwicnVuIiwiJHJvb3RTY29wZSIsIiRsb2NhdGlvbiIsInNpZGViYXIiLCJlbGVtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInJlbW92ZUNsYXNzIiwicXVlcnlTZWxlY3RvciIsImFkZENsYXNzIiwiY2hlY2siLCJ0aGVuIiwicGF0aCIsInNob3ciLCJzZXQiLCJzbmFja2JhciIsInRoaXMiLCJwZW5kaW5nIiwiYWNjZXB0ZWQiLCJhbGxJbnZpdGVzIiwidW5kZWZpbmVkIiwiaSIsImxlbmd0aCIsInJlc3BvbnNlIiwicHVzaCIsInNlbGYiLCJlZGl0SW52aXRlIiwiaW52aXRlIiwibmV3UmVzcG9uc2UiLCJyZWZyZXNoVGVhbXMiLCJ0ZWFtX2tleSIsInNwbGljZSIsImNyZWF0ZSIsInJlbW92ZSIsImNyZWF0ZVdpdGhUaW1lb3V0IiwicGVuZGluZ1Jlc3BvbnNlcyIsImFjY2VwdGVkUmVzcG9uc2VzIiwicmVzcG9uc2VPcHRpb25zIiwiTk9UX0NIT1NFTiIsIkFMTF9NRU1CRVJTIiwiVEVBTV9MRUFERVIiLCJSRUpFQ1RfSU5WSVRFIiwiJG1vZGFsIiwiaXRlbXMiLCJ0b2dnbGVDcmVhdGVUZWFtTW9kYWwiLCJtb2RhbEluc3RhbmNlIiwib3BlbiIsImNvbnRyb2xsZXJBcyIsInJlc3VsdCIsIm5ld1RlYW0iLCJpbnNlcnRUZWFtIiwiZXJyb3IiLCIkcm91dGVQYXJhbXMiLCIkc2NvcGUiLCJ0ZWFtTnVtYmVyIiwiZ29Ub1N3ZWVwIiwib2ZmZXJlZENvdXJzZXMiLCJjb25zb2xlIiwibG9nIiwiZ2V0Q291cnNlVGl0bGUiLCJwcmVmaXgiLCJpZHMiLCJ0aXRsZXMiLCJ0aW1lc0NoYW5nZWQiLCJkZXJlZ2lzdGVyIiwiJHdhdGNoIiwib25JbnB1dE1hZGVEaXJ0eSIsImRlbGV0ZU1lbWJlciIsIm1lbWJlciIsIm1lbWJlcnMiLCJlbWFpbCIsInNhdmVUZWFtIiwidG9nZ2xlRGVsZXRlVGVhbU1vZGFsIiwiZGVsZXRlVGVhbSIsInRvZ2dsZUNyZWF0ZU1lbWJlck1vZGFsIiwibmV3RW1haWwiLCJuZXdNZW1iZXIiLCJ2aXNpYmlsaXR5IiwibmV3TWVtYmVycyIsInZpc2liaWxpdHlPcHRpb25zIiwidG9kYXkiLCJEYXRlIiwidGltZXpvbmVzIiwiZG9uZSIsInN3ZWVwIiwiaG91ck51bSIsInBhcnNlSW50IiwiaG91ciIsImR0Iiwic2V0RnVsbFllYXIiLCJ5ZWFyIiwic2V0TW9udGgiLCJtb250aCIsImRheSIsInNhdmVTd2VlcCIsInRvU3RyaW5nIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJpbnNlcnRTd2VlcCIsIm5ld1N3ZWVwIiwiZGVsZXRlU3dlZXAiLCJzd2VlcF9rZXkiLCJzdG9wRXZlbnQiLCIkZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInRvZ2dsZUltcG9ydFN3ZWVwc0RpYWxvZyIsInRlYW1Ub0ltcG9ydEZyb20iLCJuYW1lIiwiaW1wb3J0ZWRTd2VlcHMiLCJpbnNlcnRlZCIsImdldFRpbWUiLCJ0b2dnbGVTd2VlcE9wdGlvbnNNb2RhbCIsIm9wdGlvblN0cmluZyIsIm9wdGlvbnMiLCJuZXdPcHRpb25zIiwidG9nZ2xlQ3JlYXRlU3dlZXBEaWFsb2ciLCJyZXBlYXRzIiwibmV3U3dlZXBzIiwibmV4dFdlZWsiLCJkYXRlIiwidGltZXMiLCJjb3B5IiwiaiIsInRvZ2dsZVNpZ25PdXRNb2RhbCIsInRvZ2dsZUVkaXRQcm9maWxlTW9kYWwiLCIkbW9kYWxJbnN0YW5jZSIsImNhbmNlbCIsImRpc21pc3MiLCIkY29udHJvbGxlciIsImV4dGVuZCIsImFkZE1lbWJlciIsInRyaW0iLCJjbG9zZSIsInNlbGVjdGVkVGVhbSIsIkNTViIsInRlYW1OYW1lIiwidGVhbU1lbWJlcnMiLCJpbmNsdWRlTGVhZGVyIiwiZmlsZSIsInVwbG9hZCIsInNob3dFcnJvciIsIm1zZyIsImFsZXJ0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImUiLCJ0ZXh0IiwiY3N2IiwidG9BcnJheSIsImVtYWlsQ29sIiwiZW1haWxzIiwicm93IiwidG9Mb3dlckNhc2UiLCIkYXBwbHkiLCJqb2luIiwicmVhZEFzVGV4dCIsImFkZCIsImxlYWRlciIsInNwbGl0IiwiZnVsbG5hbWUiLCJ1c2VybmFtZSIsImhhc1RpbWVzdGFtcCIsInBvaW50VmFsdWUiLCJwb2ludHNQZXJVbml0IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBvaW50c1BlclRhc2siLCJpbmNsdWRlQ291cnNlUHJvZ3Jlc3MiLCJpbmNsdWRlVHJhY2tQcm9ncmVzcyIsInRpbWV6b25lIiwiZ2VuZXJhdGUiLCJsYW5kaW5nUXMiLCJzZXRJdGVtIiwib25Qb3N0R2VuZXJhdGUiLCIkd2luZG93IiwicXMiLCJsYW5kaW5nVXJsIiwiZW5jb2RlVVJJIiwiZG9uZUJ1dHRvblRleHQiLCJwcHVEZWZhdWx0IiwidHoiLCJkb2VzUmVwZWF0IiwicmVwZWF0V2Vla3MiLCJhZGRTd2VlcCIsIm9wIiwidXNlckVtYWlsIiwic2lnbnVwIiwidXNlckluZm8iLCJyb3V0ZXMiLCJnZXQiLCJ2YWx1ZSIsImlzQWN0aXZlIiwicm91dGVVcmwiLCJzdWJzdHJpbmciLCJzdGFydHNXaXRoIiwidG9nZ2xlRXhwb3J0UHJvZ3Jlc3NNb2RhbCIsIm1lbWJlcnNfcHJvZ3Jlc3MiLCJjb3Vyc2VfcHJvZ3Jlc3MiLCJjb3Vyc2UiLCJjb3Vyc2VfbmFtZSIsInRyYWNrcyIsImNvdXJzZU51bSIsImNvdXJzZVRyYWNrcyIsInRyYWNrX3Byb2dyZXNzIiwiZ2V0UHJvZ3Jlc3NGb3JNZW1iZXJUcmFjayIsInRyYWNrTnVtIiwidHJhY2siLCJ0cmFja19uYW1lIiwidW5pdHMiLCJ0cmFja1VuaXRzIiwidW5pdF9wcm9ncmVzcyIsImsiLCJnZXRQcm9ncmVzc0Zvck1lbWJlclVuaXQiLCJ1bml0TnVtIiwiZmFjdG9yeSIsImlzU2hvd2luZyIsImhyZWYiLCJzaG93aW5nIiwiQ1NWVG9BcnJheSIsInN0ckRhdGEiLCJzdHJEZWxpbWl0ZXIiLCJvYmpQYXR0ZXJuIiwiUmVnRXhwIiwiYXJyRGF0YSIsImFyck1hdGNoZXMiLCJleGVjIiwic3RyTWF0Y2hlZERlbGltaXRlciIsInN0ck1hdGNoZWRWYWx1ZSIsInJlcGxhY2UiLCJzZXJ2aWNlIiwiJHEiLCJzaWduaW4iLCJpbW1lZGlhdGUiLCJwIiwiZGVmZXIiLCJhdXRoIiwiYXV0aG9yaXplIiwiY2xpZW50X2lkIiwic2NvcGUiLCJhdXRoUmVzdWx0IiwicmVqZWN0IiwicHJvbWlzZSIsImV4ZWN1dGUiLCJhcGlNZXRob2QiLCJyZXNwIiwiY29kZSIsIm9hdXRoMiIsInVzZXJpbmZvIiwiY2FjaGUiLCJkZWxldGVDYWNoZSIsImNhY2hlZEFwaUNhbGwiLCJjYWNoZUtleSIsImZvcmNlUmVmcmVzaCIsImNhY2hlZFRlYW1BcGlDYWxsIiwidHlwZSIsInVwZGF0ZUNhY2hlIiwiaW5zZXJ0IiwibGlzdCIsInJlc3BvbmQiLCJhbGwiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsImxpbmsiLCJlbGVtIiwiYXR0cnMiLCIkb24iLCJpc1JvdXRlTG9hZGluZyIsInJlcXVpcmUiLCJmaWxlQ2hhbmdlIiwiY3RybCIsIm9uQ2hhbmdlIiwibXVsdGlwbGUiLCIkc2V0Vmlld1ZhbHVlIiwiZmlsZXMiLCJvbiIsIm9mZiIsImZpbHRlciIsIiRmaWx0ZXIiLCJpbnB1dCIsImRlY2ltYWxzIiwibm93IiwiY29tcGFyZURhdGUiLCJnZXRIb3VycyIsImZpbHRlcmVkIiwiZm9yRWFjaCIsIml0ZW0iLCJhIiwibiIsIiRicm9hZGNhc3QiLCJjb250ZW50IiwiZHVyYXRpb24iLCJpZCIsImMiLCJ0IiwiciIsIm8iLCJzIiwic25hY2tiYXJEdXJhdGlvbiIsInUiLCJzbmFja2JhclJlbW92ZURlbGF5IiwiYiIsImFwcGVuZCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiXSwibWFwcGluZ3MiOiJBQXFCQUEsVUFBWSw4RUFNWkMsT0FBUyxpREFPVEMsY0FBZ0IsaUJBUWhCQyxLQUFPLFdBQ04sR0FBSUMsR0FDQUMsRUFBVSxLQUFPQyxPQUFPQyxTQUFTQyxLQUFPLFVBRU0sTUFBOUNGLE9BQU9DLFNBQVNDLEtBQUtDLFFBQVEsZUFDaENKLEVBQVUsNENBRVgsSUFBSUssR0FBVyxXQUNNLEtBQWROLEdBRUxPLFFBQVFDLFVBQVVDLFVBQVcsWUFHL0JULEdBQWEsRUFDYlUsS0FBS0MsT0FBT0MsS0FBSyxRQUFTLEtBQU1OLEVBQVVMLEdBQzFDUyxLQUFLQyxPQUFPQyxLQUFLLFNBQVUsS0FBTU47QUN6RGxDLFlBRUFDLFNBQVFNLE9BQU8sV0FBWSxrQkFB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MyBTZmVpciBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKlxuICogQ2xpZW50IElEIG9mIHRoZSBhcHBsaWNhdGlvbiAoZnJvbSB0aGUgQVBJcyBDb25zb2xlKS5cbiAqXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG4vLyBCZWxvdyBpcyBmb3IgdGhlIGRlcGxveWVkIGFuZCBsb2NhbGhvc3QuXG5DTElFTlRfSUQgPSAnOTYzMDA5MDY1MDg3LTJhNWNjbDVyaG00Z2hnbTg4bGkyMWZramdzdTVldWEwQGRldmVsb3Blci5nc2VydmljZWFjY291bnQuY29tJztcbi8qKlxuICogU2NvcGVzIHVzZWQgYnkgdGhlIGFwcGxpY2F0aW9uLlxuICpcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cblNDT1BFUyA9ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL3VzZXJpbmZvLmVtYWlsJztcblxuLyoqXG4gKiBSZXNwb25zZSB0eXBlIG9mIHRoZSBhdXRoIHRva2VuLlxuICpcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cblJFU1BPTlNFX1RZUEUgPSAndG9rZW4gaWRfdG9rZW4nO1xuXG4vKipcbiAqIEluaXRpYWxpemVzIHRoZSBhcHBsaWNhdGlvbi4gSXQgbG9hZHMgYXN5bmNocm9ub3VzbHkgYWxsIG5lZWRlZCBsaWJyYXJpZXNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ31cbiAqICAgICAgICAgICAgYXBpUm9vdCBSb290IG9mIHRoZSBBUEkncyBwYXRoLlxuICovXG5pbml0ID0gZnVuY3Rpb24oKSB7XG5cdHZhciBhcGlzVG9Mb2FkO1xuXHR2YXIgYXBpUm9vdCA9ICcvLycgKyB3aW5kb3cubG9jYXRpb24uaG9zdCArICcvX2FoL2FwaSc7XG5cdC8vIENoYW5nZSB0byBodHRwcyBhcHBzcG90IGRvbWFpbiBmb3IgZGVwbG95bWVudC5cblx0aWYgKHdpbmRvdy5sb2NhdGlvbi5ob3N0LmluZGV4T2YoXCJsb2NhbGhvc3RcIikgPT09IC0xKSB7XG5cdFx0YXBpUm9vdCA9IFwiaHR0cHM6Ly9yb3NlYm90aWNzd2ViLmFwcHNwb3QuY29tL19haC9hcGlcIlxuXHR9XG5cdHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICgtLWFwaXNUb0xvYWQgPT0gMCkge1xuXHRcdFx0Ly8gYm9vdHN0cmFwIG1hbnVhbGx5IGFuZ3VsYXJqcyBhZnRlciBvdXIgYXBpIGFyZSBsb2FkZWRcblx0XHRcdGFuZ3VsYXIuYm9vdHN0cmFwKGRvY3VtZW50LCBbXCJUZWFtQXBwXCJdKTtcblx0XHR9XG5cdH1cblx0YXBpc1RvTG9hZCA9IDI7IC8vIG11c3QgbWF0Y2ggbnVtYmVyIG9mIGNhbGxzIHRvIGdhcGkuY2xpZW50LmxvYWQoKVxuXHRnYXBpLmNsaWVudC5sb2FkKCd0ZWFtcycsICd2MScsIGNhbGxiYWNrLCBhcGlSb290KTtcblx0Z2FwaS5jbGllbnQubG9hZCgnb2F1dGgyJywgJ3YyJywgY2FsbGJhY2spO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ1RlYW1BcHAnLCBbJ1RlYW1Db250cm9sbGVycycsICdNb2RhbENvbnRyb2xsZXJzJywgJ092ZXJ2aWV3Q29udHJvbGxlcnMnLCAnTWFuYWdlQ29udHJvbGxlcnMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1RlYW1TZXJ2aWNlcycsICAnSW52aXRlQ29udHJvbGxlcnMnLCAndWkuYm9vdHN0cmFwJywgJ25nUm91dGUnLCAnVGVhbURpcmVjdGl2ZXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FuZ3VsYXIuc25hY2tiYXInXSlcbi5jb25maWcoWyckcm91dGVQcm92aWRlcicsXG4gIGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgJHJvdXRlUHJvdmlkZXJcbiAgICAgIC53aGVuKCcvb3ZlcnZpZXcvJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvb3ZlcnZpZXcuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdPdmVydmlld0N0cmwgYXMgb3ZlcnZpZXcnXG4gICAgICB9KVxuICAgICAgLndoZW4oJy9wcmV2aWV3LycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL3ByZXZpZXcuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQcmV2aWV3Q3RybCBhcyBwcmV2aWV3J1xuICAgICAgfSlcbiAgICAgIC53aGVuKCcvdGVhbXMvJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvdGVhbXMuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdUZWFtc0N0cmwgYXMgdGVhbXMnLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgdGVhbXM6IFsnYXBpJywgZnVuY3Rpb24oYXBpKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBpLmdldFRlYW1zKCk7XG4gICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC53aGVuKCcvdGVhbXMvOnRlYW1fa2V5L2NvdXJzZXMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy90ZWFtc19jb3Vyc2UuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdUZWFtc0NvdXJzZUN0cmwgYXMgY291cnNlcycsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICB0ZWFtOiBbXCJhcGlcIiwgXCIkcm91dGVcIiwgZnVuY3Rpb24oYXBpLCAkcm91dGUpIHtcbiAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0UHJvZ3Jlc3MoJHJvdXRlLmN1cnJlbnQucGFyYW1zKTtcbiAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLndoZW4oJy90ZWFtcy86dGVhbV9rZXkvY291cnNlcy86Y291cnNlX25hbWUvdHJhY2tzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvdGVhbXNfdHJhY2suaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdUZWFtc1RyYWNrQ3RybCBhcyB0cmFja3MnLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgdGVhbTogW1wiYXBpXCIsIFwiJHJvdXRlXCIsIGZ1bmN0aW9uKGFwaSwgJHJvdXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBpLmdldFByb2dyZXNzKCRyb3V0ZS5jdXJyZW50LnBhcmFtcyk7XG4gICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC53aGVuKCcvdGVhbXMvOnRlYW1fa2V5L2NvdXJzZXMvOmNvdXJzZV9uYW1lL3RyYWNrcy86dHJhY2tfbmFtZS91bml0cycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL3RlYW1zX3VuaXQuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdUZWFtc1VuaXRDdHJsIGFzIHVuaXRzJyxcbiAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgIHRlYW06IFtcImFwaVwiLCBcIiRyb3V0ZVwiLCBmdW5jdGlvbihhcGksICRyb3V0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRQcm9ncmVzcygkcm91dGUuY3VycmVudC5wYXJhbXMpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAud2hlbignL2ludml0ZXMvJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvaW52aXRlcy5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ0ludml0ZXNDdHJsIGFzIGludml0ZXMnLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgaW52aXRlczogW1wiYXBpXCIsIGZ1bmN0aW9uKGFwaSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRJbnZpdGVzKCk7XG4gICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC53aGVuKCcvbWFuYWdlLycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21hbmFnZS5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ01hbmFnZUN0cmwgYXMgbWFuYWdlJyxcbiAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgIHRlYW1zOiBbXCJhcGlcIiwgZnVuY3Rpb24oYXBpKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBpLmdldExlYWRUZWFtcygpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAud2hlbignL21hbmFnZS86dGVhbV9rZXknLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tYW5hZ2VfdGVhbS5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ01hbmFnZVRlYW1DdHJsIGFzIG1hbmFnZScsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICB0ZWFtczogW1wiYXBpXCIsIGZ1bmN0aW9uKGFwaSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRMZWFkVGVhbXMoKTtcbiAgICAgICAgICB9XSxcbiAgICAgICAgICB1c2VyOiBbXCJvQXV0aFwiLCBmdW5jdGlvbihvQXV0aCkge1xuICAgICAgICAgICAgcmV0dXJuIG9BdXRoLmdldFVzZXJJbmZvKCk7XG4gICAgICAgICAgfV0sXG4gICAgICAgICAgY291cnNlczogW1wiYXBpXCIsIGZ1bmN0aW9uIChhcGkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0Q291cnNlcygpO1xuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAud2hlbignL21hbmFnZS86dGVhbV9rZXkvc3dlZXBzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvbWFuYWdlX3N3ZWVwcy5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ1N3ZWVwc1RlYW1DdHJsIGFzIHN3ZWVwcycsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICB0ZWFtczogW1wiYXBpXCIsIGZ1bmN0aW9uKGFwaSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRMZWFkVGVhbXMoKTtcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBzd2VlcHM6IFtcImFwaVwiLCBcIiRyb3V0ZVwiLCBmdW5jdGlvbihhcGksICRyb3V0ZSkge1xuICAgICAgICBcdCAgcmV0dXJuIGFwaS5nZXRTd2VlcHMoJHJvdXRlLmN1cnJlbnQucGFyYW1zKTtcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBwcm9ncmVzczogW1wiYXBpXCIsIFwiJHJvdXRlXCIsIGZ1bmN0aW9uKGFwaSwgJHJvdXRlKSB7XG4gICAgICAgIFx0ICByZXR1cm4gYXBpLmdldFByb2dyZXNzKCRyb3V0ZS5jdXJyZW50LnBhcmFtcyk7XG4gICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5vdGhlcndpc2Uoe1xuICAgICAgICByZWRpcmVjdFRvOiAnL292ZXJ2aWV3LydcbiAgICAgIH0pO1xuICB9XSlcbiAgLnJ1bihbXCIkcm9vdFNjb3BlXCIsIFwiJGxvY2F0aW9uXCIsIFwib0F1dGhcIiwgXCJzaWRlYmFyXCIsIGZ1bmN0aW9uKCRyb290U2NvcGUsICRsb2NhdGlvbiwgb0F1dGgsIHNpZGViYXIpIHtcblx0ICBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5oaWRkZW4uY29udGFpbmVyXCIpKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcblx0ICBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImRpdi5zcGlubmVyXCIpKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcblx0ICBvQXV0aC5jaGVjaygpLnRoZW4obnVsbCwgZnVuY3Rpb24oKSB7XG4gIFx0XHQkbG9jYXRpb24ucGF0aCgnL3ByZXZpZXcnKTtcbiAgXHRcdHNpZGViYXIuc2hvdy5zZXQoZmFsc2UpO1xuXHQgIH0pO1xuXHR9XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnSW52aXRlQ29udHJvbGxlcnMnLCBbXSlcbi5jb250cm9sbGVyKCdJbnZpdGVzQ3RybCcsIFtcImludml0ZXNcIiwgXCJhcGlcIiwgXCJzbmFja2JhclwiLCBmdW5jdGlvbihpbnZpdGVzLCBhcGksIHNuYWNrYmFyKSB7XG5cdHRoaXMucGVuZGluZyA9IFtdO1xuXHR0aGlzLmFjY2VwdGVkID0gW107XG5cdHZhciBhbGxJbnZpdGVzID0gaW52aXRlc1tcImludml0ZXNcIl07XG5cdGlmIChhbGxJbnZpdGVzID09IHVuZGVmaW5lZCkge1xuXHRcdGFsbEludml0ZXMgPSBbXTtcblx0fVxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGFsbEludml0ZXMubGVuZ3RoOyBpKyspIHtcblx0XHRpZiAoYWxsSW52aXRlc1tpXS5yZXNwb25zZSA9PT0gXCJOT1RfQ0hPU0VOXCIpIHtcblx0XHRcdHRoaXMucGVuZGluZy5wdXNoKGFsbEludml0ZXNbaV0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmFjY2VwdGVkLnB1c2goYWxsSW52aXRlc1tpXSk7XG5cdFx0fVxuXHR9XG5cdHZhciBzZWxmID0gdGhpcztcblx0dGhpcy5lZGl0SW52aXRlID0gZnVuY3Rpb24oaW52aXRlLCBuZXdSZXNwb25zZSkge1xuXHRcdHZhciByZWZyZXNoVGVhbXMgPSBmYWxzZTtcblx0XHRpZihpbnZpdGUucmVzcG9uc2UgPT09IFwiTk9UX0NIT1NFTlwiICYmIG5ld1Jlc3BvbnNlICE9PSBcIk5PVF9DSE9TRU5cIikge1xuXHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNlbGYucGVuZGluZy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAoc2VsZi5wZW5kaW5nW2ldLnRlYW1fa2V5ID09PSBpbnZpdGUudGVhbV9rZXkpIHtcblx0XHRcdFx0XHRzZWxmLnBlbmRpbmcuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRzZWxmLmFjY2VwdGVkLnB1c2goaW52aXRlKTtcblx0XHRcdHJlZnJlc2hUZWFtcyA9IHRydWU7XG5cdFx0fVxuXHRcdGlmIChuZXdSZXNwb25zZSA9PT0gXCJSRUpFQ1RfSU5WSVRFXCIpIHtcblx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzZWxmLmFjY2VwdGVkLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChzZWxmLmFjY2VwdGVkW2ldLnRlYW1fa2V5ID09PSBpbnZpdGUudGVhbV9rZXkpIHtcblx0XHRcdFx0XHRzZWxmLmFjY2VwdGVkLnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmVmcmVzaFRlYW1zID0gdHJ1ZTtcblx0XHR9XG5cdFx0aW52aXRlLnJlc3BvbnNlID0gbmV3UmVzcG9uc2U7XG5cdFx0c25hY2tiYXIuY3JlYXRlKFwiU2VuZGluZyByZXNwb25zZS4uLlwiLCA0KTtcblx0XHRhcGkuZWRpdEludml0ZShpbnZpdGUpLnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0XHRzbmFja2Jhci5yZW1vdmUoNCk7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBSZXNwb25zZSBzYXZlZFwiKTtcblx0XHRcdGlmIChyZWZyZXNoVGVhbXMpIHtcblx0XHRcdFx0YXBpLmdldFRlYW1zKHRydWUpO1xuXHRcdFx0fVxuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0c25hY2tiYXIucmVtb3ZlKDQpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFJlc3BvbnNlIG5vdCBzYXZlZFwiKTtcblx0XHR9KTtcblx0fVxuXHR0aGlzLnBlbmRpbmdSZXNwb25zZXMgPSBbXCJOT1RfQ0hPU0VOXCIsIFwiQUxMX01FTUJFUlNcIiwgXCJURUFNX0xFQURFUlwiLCBcIlJFSkVDVF9JTlZJVEVcIl07XG5cdHRoaXMuYWNjZXB0ZWRSZXNwb25zZXMgPSBbXCJBTExfTUVNQkVSU1wiLCBcIlRFQU1fTEVBREVSXCIsIFwiUkVKRUNUX0lOVklURVwiXTtcbiBcdHRoaXMucmVzcG9uc2VPcHRpb25zID0ge1wiTk9UX0NIT1NFTlwiIDogXCJObyByZXNwb25zZVwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcIkFMTF9NRU1CRVJTXCIgOiBcIkFsbCBtZW1iZXJzIGNhbiBzZWUgbXkgcHJvZ3Jlc3NcIixcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XCJURUFNX0xFQURFUlwiOiBcIk9ubHkgdGhlIGxlYWRlciBjYW4gc2VlIG15IHByb2dyZXNzXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFwiUkVKRUNUX0lOVklURVwiOiBcIlJlamVjdCBpbnZpdGUgYW5kIG5vIG9uZSBjYW4gc2VlIG15IHByb2dyZXNzXCJ9O1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ01hbmFnZUNvbnRyb2xsZXJzJywgW10pXG4uY29udHJvbGxlcignTWFuYWdlQ3RybCcsIFtcIiRtb2RhbFwiLCBcInRlYW1zXCIsIFwiYXBpXCIsIFwic25hY2tiYXJcIiwgXCJvQXV0aFwiLCBmdW5jdGlvbigkbW9kYWwsIHRlYW1zLCBhcGksIHNuYWNrYmFyLCBvQXV0aCkge1xuXHR0aGlzLml0ZW1zID0gdGVhbXNbXCJ0ZWFtc1wiXTtcblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR0aGlzLnRvZ2dsZUNyZWF0ZVRlYW1Nb2RhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21vZGFscy9jcmVhdGVfdGVhbV9tb2RhbC5odG1sJyxcblx0XHQgIGNvbnRyb2xsZXI6ICdDcmVhdGVUZWFtTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnLFxuXHRcdFx0cmVzb2x2ZToge1xuXHRcdFx0XHR1c2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gb0F1dGguZ2V0VXNlckluZm8oKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0Y291cnNlczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGFwaS5nZXRDb3Vyc2VzKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKG5ld1RlYW0pIHtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZShcIkNyZWF0aW5nIHRlYW0uLi5cIiwgMSk7XG5cdFx0XHRhcGkuaW5zZXJ0VGVhbShuZXdUZWFtKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuXHRcdFx0XHRzbmFja2Jhci5yZW1vdmUoMSk7XG5cdFx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+U3VjY2VzcyE8L2I+IFRlYW0gY3JlYXRlZFwiKTtcblx0XHRcdFx0aWYgKHRlYW1zW1widGVhbXNcIl0gPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0dGVhbXNbXCJ0ZWFtc1wiXSA9IFtdO1xuXHRcdFx0XHRcdHNlbGYuaXRlbXMgPSB0ZWFtc1tcInRlYW1zXCJdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRlYW1zW1widGVhbXNcIl0ucHVzaChyZXN1bHQpO1xuXHRcdFx0fSwgZnVuY3Rpb24oZXJyb3IpIHtcblx0XHRcdFx0c25hY2tiYXIucmVtb3ZlKDEpO1xuXHRcdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPkVycm9yITwvYj4gVGVhbSBub3QgY3JlYXRlZFwiKTtcblx0XHRcdH0pO1xuXHRcdH0pO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignTWFuYWdlVGVhbUN0cmwnLCBbXCIkcm91dGVQYXJhbXNcIiwgXCIkbW9kYWxcIiwgXCJ0ZWFtc1wiLCBcIiRzY29wZVwiLCBcInNuYWNrYmFyXCIsIFwiYXBpXCIsIFwiJGxvY2F0aW9uXCIsIFwidXNlclwiLCBcImNvdXJzZXNcIiwgZnVuY3Rpb24oJHJvdXRlUGFyYW1zLCAkbW9kYWwsIHRlYW1zLCAkc2NvcGUsIHNuYWNrYmFyLCBhcGksICRsb2NhdGlvbiwgdXNlciwgY291cnNlcykge1xuXHR2YXIgaXRlbXMgPSB0ZWFtc1tcInRlYW1zXCJdO1xuXHR2YXIgdGVhbU51bWJlciA9IC0xO1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcblx0XHRpZihpdGVtc1tpXS50ZWFtX2tleSA9PSAkcm91dGVQYXJhbXMudGVhbV9rZXkpIHtcblx0XHRcdHRoaXMudGVhbSA9IGl0ZW1zW2ldO1xuXHRcdFx0dGVhbU51bWJlciA9IGk7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblx0dGhpcy5nb1RvU3dlZXAgPSBmdW5jdGlvbigpIHtcblx0XHQkbG9jYXRpb24ucGF0aCgkbG9jYXRpb24ucGF0aCgpICsgXCIvc3dlZXBzXCIpO1xuXHR9O1xuXHR0aGlzLm9mZmVyZWRDb3Vyc2VzID0gY291cnNlcztcblx0Y29uc29sZS5sb2coY291cnNlcyk7XG5cdHRoaXMuZ2V0Q291cnNlVGl0bGUgPSBmdW5jdGlvbiAocHJlZml4KSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb3Vyc2VzLmlkcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGNvdXJzZXMuaWRzW2ldID09PSBwcmVmaXgpIHtcblx0XHRcdFx0cmV0dXJuIGNvdXJzZXMudGl0bGVzW2ldO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gXCJcIjtcblx0fVxuXHR2YXIgdGltZXNDaGFuZ2VkID0gMDtcblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR2YXIgZGVyZWdpc3RlciA9ICRzY29wZS4kd2F0Y2goZnVuY3Rpb24gKCkge1xuICBcdHJldHVybiBzZWxmLnRlYW07XG5cdH0sIGZ1bmN0aW9uKCl7XG5cdFx0dGltZXNDaGFuZ2VkKys7XG5cdFx0c2VsZi5vbklucHV0TWFkZURpcnR5KHRpbWVzQ2hhbmdlZCk7XG5cdH0sIHRydWUpO1xuXHR0aGlzLm9uSW5wdXRNYWRlRGlydHkgPSBmdW5jdGlvbih0aW1lc0NoYW5nZWQpICB7XG5cdFx0aWYodGltZXNDaGFuZ2VkID4gMSkge1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5XYXJuaW5nITwvYj4gWW91IG11c3QgcHJlc3Mgc3VibWl0IHRvIHNhdmUgeW91ciBjaGFuZ2VzXCIpO1xuXHRcdFx0ZGVyZWdpc3RlcigpO1xuXHRcdH1cblx0fTtcblx0dGhpcy5kZWxldGVNZW1iZXIgPSBmdW5jdGlvbihtZW1iZXIpIHtcblx0XHR2YXIgbWVtYmVycyA9IHNlbGYudGVhbS5tZW1iZXJzO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBtZW1iZXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZihtZW1iZXJzW2ldLmVtYWlsID09IG1lbWJlci5lbWFpbCkge1xuXHRcdFx0XHRtZW1iZXJzLnNwbGljZShpLCAxKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHR0aGlzLnNhdmVUZWFtID0gZnVuY3Rpb24oKSB7XG5cdFx0c25hY2tiYXIuY3JlYXRlKFwiU2F2aW5nIHRlYW0uLi5cIiwgMyk7XG5cdFx0YXBpLmluc2VydFRlYW0oc2VsZi50ZWFtKS50aGVuKGZ1bmN0aW9uKG5ld1RlYW0pIHtcblx0XHRcdHNuYWNrYmFyLnJlbW92ZSgzKTtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+U3VjY2VzcyE8L2I+IFRlYW0gc2F2ZWRcIik7XG5cdFx0fSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRzbmFja2Jhci5yZW1vdmUoMyk7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPkVycm9yITwvYj4gVGVhbSBub3Qgc2F2ZWRcIik7XG5cdFx0fSk7XG5cdH1cblx0dGhpcy50b2dnbGVEZWxldGVUZWFtTW9kYWwgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHQgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tb2RhbHMvZGVsZXRlX3RlYW1fbW9kYWwuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnRGVsZXRlVGVhbU1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJ1xuXHRcdH0pO1xuXHRcdG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0XHRpdGVtcy5zcGxpY2UoaSwgMSk7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGUoXCJEZWxldGluZyB0ZWFtLi4uXCIsIDIpO1xuXHRcdFx0YXBpLmRlbGV0ZVRlYW0oc2VsZi50ZWFtKS50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzbmFja2Jhci5yZW1vdmUoMik7XG5cdFx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+U3VjY2VzcyE8L2I+IFRlYW0gZGVsZXRlZFwiKTtcblx0XHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzbmFja2Jhci5yZW1vdmUoMik7XG5cdFx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+RXJyb3IhPC9iPiBUZWFtIG5vdCBkZWxldGVkXCIpO1xuXHRcdFx0fSk7XG5cdFx0XHQkbG9jYXRpb24ucGF0aCgnL21hbmFnZScpO1xuXHRcdH0pO1xuXHR9O1xuXHR0aGlzLnRvZ2dsZUNyZWF0ZU1lbWJlck1vZGFsID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0ICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvbW9kYWxzL2NyZWF0ZV9tZW1iZXJfbW9kYWwuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnTmV3TWVtYmVyTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnXG5cdFx0fSk7XG5cdFx0bW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbihuZXdFbWFpbCkge1xuXHRcdFx0dmFyIG5ld01lbWJlciA9IHtlbWFpbDogbmV3RW1haWwsIHZpc2liaWxpdHk6IFwiTk9UX0NIT1NFTlwifTtcblx0XHRcdGlmIChzZWxmLnRlYW0ubWVtYmVycyA9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0c2VsZi50ZWFtLm1lbWJlcnMgPSBbXTtcblx0XHRcdH1cblx0XHRcdGlmIChuZXdFbWFpbCA9PSB1c2VyLmVtYWlsKSB7XG5cdFx0XHRcdG5ld01lbWJlci52aXNpYmlsaXR5ID0gXCJBTExfTUVNQkVSU1wiO1xuXHRcdFx0fVxuXHRcdFx0c2VsZi50ZWFtLm1lbWJlcnMucHVzaChuZXdNZW1iZXIpO1xuXHRcdFx0c2VsZi50ZWFtLm5ld01lbWJlcnMgPSB0cnVlO1xuXHRcdH0pO1xuXHR9O1xuXHR0aGlzLnZpc2liaWxpdHlPcHRpb25zID0ge1wiTk9UX0NIT1NFTlwiIDogXCJObyBSZXNwb25zZVwiLFxuXHRcdFx0XHRcdFx0XHQgIFwiQUxMX01FTUJFUlNcIiA6IFwiUHJvZ3Jlc3MgdmlzaWJsZSBieSBldmVyeW9uZVwiLFxuXHRcdFx0XHRcdFx0XHQgIFwiVEVBTV9MRUFERVJcIjogXCJQcm9ncmVzcyB2aXNpYmxlIGJ5IGxlYWRlciBvbmx5XCJ9O1xufV0pXG4uY29udHJvbGxlcignU3dlZXBzVGVhbUN0cmwnLCBbXCIkcm91dGVQYXJhbXNcIiwgXCIkbW9kYWxcIiwgXCJ0ZWFtc1wiLCBcInN3ZWVwc1wiLCBcIiRsb2NhdGlvblwiLCBcInByb2dyZXNzXCIsIFwic25hY2tiYXJcIiwgXCJhcGlcIiwgXCIkc2NvcGVcIiwgZnVuY3Rpb24oJHJvdXRlUGFyYW1zLCAkbW9kYWwsIHRlYW1zLCBzd2VlcHMsICRsb2NhdGlvbiwgcHJvZ3Jlc3MsIHNuYWNrYmFyLCBhcGksICRzY29wZSkge1xuXHR2YXIgaXRlbXMgPSB0ZWFtc1tcInRlYW1zXCJdO1xuXHR0aGlzLnN3ZWVwcyA9IHN3ZWVwc1tcInN3ZWVwc1wiXSB8fCBbXTtcblx0dmFyIHRlYW1OdW1iZXIgPSAtMTtcblx0dGhpcy50b2RheSA9IG5ldyBEYXRlKCk7XG4gIHRoaXMudGltZXpvbmVzID0gWydVVEMnLCAnUERUJywgJ01EVCcsICdDRFQnLCAnRURUJywgJ1BTVCcsICdNU1QnLCAnQ1NUJywgJ0VTVCddO1xuXHR0aGlzLmRvbmUgPSBmdW5jdGlvbigpIHtcblx0XHQkbG9jYXRpb24ucGF0aChcIi9tYW5hZ2UvXCIgKyAkcm91dGVQYXJhbXMudGVhbV9rZXkpO1xuXHR9O1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcblx0XHRpZihpdGVtc1tpXS50ZWFtX2tleSA9PSAkcm91dGVQYXJhbXMudGVhbV9rZXkpIHtcblx0XHRcdHRoaXMudGVhbSA9IGl0ZW1zW2ldO1xuXHRcdFx0dGVhbU51bWJlciA9IGk7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblx0dmFyIHNlbGYgPSB0aGlzO1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5zd2VlcHMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgc3dlZXAgPSB0aGlzLnN3ZWVwc1tpXTtcblx0XHRzd2VlcC5ob3VyTnVtID0gcGFyc2VJbnQoc3dlZXAuaG91cik7XG5cdFx0dmFyIGR0ID0gbmV3IERhdGUoMCk7XG5cdFx0ZHQuc2V0RnVsbFllYXIoc3dlZXAueWVhcik7XG5cdFx0ZHQuc2V0TW9udGgocGFyc2VJbnQoc3dlZXAubW9udGgpIC0gMSwgcGFyc2VJbnQoc3dlZXAuZGF5KSk7XG5cdFx0c3dlZXAuZHQgPSBkdDtcblx0fVxuXHR0aGlzLnNhdmVTd2VlcCA9IGZ1bmN0aW9uKHN3ZWVwKSB7XG5cdFx0c25hY2tiYXIuY3JlYXRlKFwiU2F2aW5nIFN3ZWVwLi4uXCIsIDYpO1xuXHRcdHN3ZWVwLmhvdXIgPSBzd2VlcC5ob3VyTnVtLnRvU3RyaW5nKCk7XG5cdFx0c3dlZXAueWVhciA9IHN3ZWVwLmR0LmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcblx0XHRzd2VlcC5tb250aCA9IChzd2VlcC5kdC5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKTtcblx0XHRzd2VlcC5kYXkgPSBzd2VlcC5kdC5nZXREYXRlKCkudG9TdHJpbmcoKTtcblx0XHRhcGkuaW5zZXJ0U3dlZXAoc3dlZXApLnRoZW4oZnVuY3Rpb24obmV3U3dlZXApIHtcblx0XHRcdHNuYWNrYmFyLnJlbW92ZSg2KTtcblx0XHRcdHNuYWNrYmFyLmNyZWF0ZVdpdGhUaW1lb3V0KFwiPGI+U3VjY2VzcyE8L2I+IFN3ZWVwIHNhdmVkXCIpO1xuXHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0c25hY2tiYXIucmVtb3ZlKDYpO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFN3ZWVwIG5vdCBzYXZlZFwiKTtcblx0XHR9KTtcblx0fTtcblx0dGhpcy5kZWxldGVTd2VlcCA9IGZ1bmN0aW9uKHN3ZWVwKSB7XG5cdFx0c25hY2tiYXIuY3JlYXRlKFwiUmVtb3ZpbmcgU3dlZXAuLi5cIiwgNyk7XG5cdFx0YXBpLmRlbGV0ZVN3ZWVwKHN3ZWVwKS50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNlbGYuc3dlZXBzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmKHN3ZWVwLnN3ZWVwX2tleSA9PT0gc2VsZi5zd2VlcHNbaV0uc3dlZXBfa2V5KSB7XG5cdFx0XHRcdFx0c2VsZi5zd2VlcHMuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRzbmFja2Jhci5yZW1vdmUoNyk7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBTd2VlcCByZW1vdmVkXCIpO1xuXG5cdFx0fSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRzbmFja2Jhci5yZW1vdmUoNyk7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPkVycm9yITwvYj4gU3dlZXAgbm90IHJlbW92ZWRcIik7XG5cdFx0fSk7XG5cdH07XG5cdHRoaXMuc3RvcEV2ZW50ID0gZnVuY3Rpb24oJGV2ZW50KSB7XG5cdFx0JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9O1xuXHR0aGlzLnRvZ2dsZUltcG9ydFN3ZWVwc0RpYWxvZyA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdFx0ICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvbW9kYWxzL2ltcG9ydF9zd2VlcHNfbW9kYWwuaHRtbCcsXG5cdFx0XHQgIGNvbnRyb2xsZXI6ICdJbXBvcnRTd2VlcHNNb2RhbEluc3RhbmNlQ3RybCcsXG5cdFx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJyxcblx0XHRcdCAgcmVzb2x2ZToge1xuXHRcdFx0XHQgIHRlYW1zOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQgIHJldHVybiBpdGVtcztcblx0XHRcdFx0ICB9XG5cdFx0XHQgIH1cblx0XHR9KTtcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKHRlYW1Ub0ltcG9ydEZyb20pIHtcblx0XHRcdGNvbnNvbGUubG9nKHRlYW1Ub0ltcG9ydEZyb20pO1xuXHRcdFx0c25hY2tiYXIuY3JlYXRlKFwiSW1wb3J0aW5nIGZyb20gXCIgKyB0ZWFtVG9JbXBvcnRGcm9tLm5hbWUgKyBcIi4uLlwiLCAxMCk7XG5cdFx0XHRhcGkuZ2V0U3dlZXBzKHRlYW1Ub0ltcG9ydEZyb20pLnRoZW4oZnVuY3Rpb24oaW1wb3J0ZWRTd2VlcHMpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coaW1wb3J0ZWRTd2VlcHMpO1xuXHRcdFx0XHRpZiAoIWltcG9ydGVkU3dlZXBzLnN3ZWVwcyB8fCAhaW1wb3J0ZWRTd2VlcHMuc3dlZXBzLmxlbmd0aCkge1xuXHRcdFx0XHRcdHNuYWNrYmFyLnJlbW92ZSgxMCk7XG5cdFx0XHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFRoZXJlIHdlcmUgbm8gc3dlZXBzIHRvIGltcG9ydFwiKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IGltcG9ydGVkU3dlZXBzLnN3ZWVwcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdHZhciBzd2VlcCA9IGltcG9ydGVkU3dlZXBzLnN3ZWVwc1tpXTtcblx0XHRcdFx0XHRkZWxldGUgc3dlZXAuc3dlZXBfa2V5O1xuXHRcdFx0XHRcdHN3ZWVwLnRlYW1fa2V5ID0gc2VsZi50ZWFtLnRlYW1fa2V5O1xuXHRcdFx0XHRcdGFwaS5pbnNlcnRTd2VlcChzd2VlcCkudGhlbihmdW5jdGlvbihuZXdTd2VlcCkge1xuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2cobmV3U3dlZXApO1xuXHRcdFx0XHRcdFx0bmV3U3dlZXAuaG91ck51bSA9IHBhcnNlSW50KG5ld1N3ZWVwLmhvdXIpO1xuXHRcdFx0XHRcdFx0dmFyIGR0ID0gbmV3IERhdGUoMCk7XG5cdFx0XHRcdFx0XHRkdC5zZXRGdWxsWWVhcihuZXdTd2VlcC55ZWFyKTtcblx0XHRcdFx0XHRcdGR0LnNldE1vbnRoKHBhcnNlSW50KG5ld1N3ZWVwLm1vbnRoKSAtIDEsIHBhcnNlSW50KG5ld1N3ZWVwLmRheSkpO1xuXHRcdFx0XHRcdFx0bmV3U3dlZXAuZHQgPSBkdDtcblx0XHRcdFx0XHRcdGlmIChzd2VlcHNbXCJzd2VlcHNcIl0gPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdHN3ZWVwc1tcInN3ZWVwc1wiXSA9IFtdO1xuXHRcdFx0XHRcdFx0XHRzZWxmLnN3ZWVwcyA9IHN3ZWVwc1tcInN3ZWVwc1wiXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHZhciBpbnNlcnRlZCA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNlbGYuc3dlZXBzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0XHRcdGlmKHNlbGYuc3dlZXBzW2ldLmR0LmdldFRpbWUoKSA8IG5ld1N3ZWVwLmR0LmdldFRpbWUoKSB8fCAoc2VsZi5zd2VlcHNbaV0uZHQuZ2V0VGltZSgpID09PSBuZXdTd2VlcC5kdC5nZXRUaW1lKCkgJiYgc2VsZi5zd2VlcHNbaV0uaG91ck51bSA8IG5ld1N3ZWVwLmhvdXJOdW0pKSB7XG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5zd2VlcHMuc3BsaWNlKGksIDAsIG5ld1N3ZWVwKTtcblx0XHRcdFx0XHRcdFx0XHRpbnNlcnRlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmKCFpbnNlcnRlZCkge1xuXHRcdFx0XHRcdFx0XHRzZWxmLnN3ZWVwcy5wdXNoKG5ld1N3ZWVwKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRzbmFja2Jhci5yZW1vdmUoMTApO1xuXHRcdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBTd2VlcHMgSW1wb3J0ZWRcIik7XG5cdFx0XHR9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0c25hY2tiYXIucmVtb3ZlKDEwKTtcblx0XHRcdFx0c25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IEltcG9ydCBmYWlsZWRcIik7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXHR0aGlzLnRvZ2dsZVN3ZWVwT3B0aW9uc01vZGFsID0gZnVuY3Rpb24oc3dlZXApIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHRcdCAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21vZGFscy9leHBvcnRfcHJvZ3Jlc3NfbW9kYWwuaHRtbCcsXG5cdFx0XHQgIGNvbnRyb2xsZXI6ICdTd2VlcE9wdGlvbnNNb2RhbEluc3RhbmNlQ3RybCcsXG5cdFx0XHQgIGNvbnRyb2xsZXJBczogJ21vZGFsJyxcblx0XHRcdCAgcmVzb2x2ZToge1xuXHRcdFx0XHQgIHRlYW06IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdCAgcmV0dXJuIHByb2dyZXNzO1xuXHRcdFx0XHQgIH0sXG5cdFx0XHRcdCAgb3B0aW9uU3RyaW5nOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQgIHJldHVybiBzd2VlcC5vcHRpb25zO1xuXHRcdFx0XHQgIH1cblx0XHRcdCAgfVxuXHRcdH0pO1xuXHRcdG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24obmV3T3B0aW9ucykge1xuXHRcdFx0c3dlZXAub3B0aW9ucyA9IG5ld09wdGlvbnM7XG5cdFx0fSk7XG5cdH07XG5cdHRoaXMudG9nZ2xlQ3JlYXRlU3dlZXBEaWFsb2cgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHRcdCAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21vZGFscy9jcmVhdGVfc3dlZXBfbW9kYWwuaHRtbCcsXG5cdFx0XHQgIGNvbnRyb2xsZXI6ICdOZXdTd2VlcE1vZGFsSW5zdGFuY2VDdHJsJyxcblx0XHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnLFxuXHRcdFx0ICByZXNvbHZlOiB7XG5cdFx0XHRcdCAgdGVhbV9rZXk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdCAgcmV0dXJuICRyb3V0ZVBhcmFtcy50ZWFtX2tleTtcblx0XHRcdFx0ICB9LFxuXHRcdFx0XHQgIHByb2dyZXNzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQgIHJldHVybiBwcm9ncmVzcztcblx0XHRcdFx0ICB9XG5cdFx0XHQgIH1cblx0XHR9KTtcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKHN3ZWVwKSB7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGUoXCJDcmVhdGluZyBTd2VlcC4uLlwiLCA4KTtcblx0XHRcdHN3ZWVwLmhvdXIgPSBzd2VlcC5ob3VyTnVtLnRvU3RyaW5nKCk7XG5cdFx0XHRzd2VlcC55ZWFyID0gc3dlZXAuZHQuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpO1xuXHRcdFx0c3dlZXAubW9udGggPSAoc3dlZXAuZHQuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCk7XG5cdFx0XHRzd2VlcC5kYXkgPSBzd2VlcC5kdC5nZXREYXRlKCkudG9TdHJpbmcoKTtcbiAgICAgIHZhciByZXBlYXRzID0gc3dlZXAucmVwZWF0cyB8fCAwO1xuICAgICAgdmFyIG5ld1N3ZWVwcyA9IFtzd2VlcF07XG4gICAgICB2YXIgbmV4dFdlZWsgPSBmdW5jdGlvbiAoZGF0ZSwgdGltZXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSsoNyp0aW1lcykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gcmVwZWF0czsgaSsrKSB7XG4gICAgICAgIHZhciBuZXdTd2VlcCA9IGFuZ3VsYXIuY29weShuZXdTd2VlcHNbMF0pO1xuICAgICAgICB2YXIgZHQgPSBuZXh0V2VlayhuZXdTd2VlcC5kdCwgaSk7IFxuICAgICAgICBuZXdTd2VlcC55ZWFyID0gZHQuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpO1xuICAgICAgICBuZXdTd2VlcC5tb250aCA9IChkdC5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKTtcbiAgICAgICAgbmV3U3dlZXAuZGF5ID0gZHQuZ2V0RGF0ZSgpLnRvU3RyaW5nKCk7XG4gICAgICAgIG5ld1N3ZWVwcy5wdXNoKG5ld1N3ZWVwKTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbmV3U3dlZXBzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIHN3ZWVwID0gbmV3U3dlZXBzW2pdO1xuICAgICAgICBhcGkuaW5zZXJ0U3dlZXAoc3dlZXApLnRoZW4oZnVuY3Rpb24obmV3U3dlZXApIHtcbiAgICAgICAgICBuZXdTd2VlcC5ob3VyTnVtID0gcGFyc2VJbnQobmV3U3dlZXAuaG91cik7XG4gICAgICAgICAgdmFyIGR0ID0gbmV3IERhdGUoMCk7XG4gICAgICAgICAgZHQuc2V0RnVsbFllYXIobmV3U3dlZXAueWVhcik7XG4gICAgICAgICAgZHQuc2V0TW9udGgocGFyc2VJbnQobmV3U3dlZXAubW9udGgpIC0gMSwgcGFyc2VJbnQobmV3U3dlZXAuZGF5KSk7XG4gICAgICAgICAgbmV3U3dlZXAuZHQgPSBkdDtcbiAgICAgICAgICBpZiAoc3dlZXBzW1wic3dlZXBzXCJdID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3dlZXBzW1wic3dlZXBzXCJdID0gW107XG4gICAgICAgICAgICBzZWxmLnN3ZWVwcyA9IHN3ZWVwc1tcInN3ZWVwc1wiXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGluc2VydGVkID0gZmFsc2U7XG4gICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbGYuc3dlZXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZihzZWxmLnN3ZWVwc1tpXS5kdC5nZXRUaW1lKCkgPCBuZXdTd2VlcC5kdC5nZXRUaW1lKCkgfHwgXG4gICAgICAgICAgICAgICAoc2VsZi5zd2VlcHNbaV0uZHQuZ2V0VGltZSgpID09PSBuZXdTd2VlcC5kdC5nZXRUaW1lKCkgJiYgc2VsZi5zd2VlcHNbaV0uaG91ck51bSA8IG5ld1N3ZWVwLmhvdXJOdW0pKSB7XG4gICAgICAgICAgICAgIHNlbGYuc3dlZXBzLnNwbGljZShpLCAwLCBuZXdTd2VlcCk7XG4gICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKCFpbnNlcnRlZCkge1xuICAgICAgICAgICAgc2VsZi5zd2VlcHMucHVzaChuZXdTd2VlcCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHNuYWNrYmFyLnJlbW92ZSg4KTtcbiAgICAgICAgICBzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPlN1Y2Nlc3MhPC9iPiBTd2VlcCBjcmVhdGVkXCIpO1xuICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBzbmFja2Jhci5yZW1vdmUoOCk7XG4gICAgICAgICAgc25hY2tiYXIuY3JlYXRlV2l0aFRpbWVvdXQoXCI8Yj5FcnJvciE8L2I+IFN3ZWVwIG5vdCBjcmVhdGVkXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblx0XHR9KTtcblx0fTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdNb2RhbENvbnRyb2xsZXJzJywgW10pXG4uY29udHJvbGxlcignTW9kYWxUb2dnbGVDdHJsJywgW1wiJG1vZGFsXCIsIGZ1bmN0aW9uKCRtb2RhbCkge1xuXHR0aGlzLnRvZ2dsZVNpZ25PdXRNb2RhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgdGVtcGxhdGVVcmw6ICdsb2dvdXRfbW9kYWwuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnXG5cdFx0fSk7XG5cdH07XG5cdHRoaXMudG9nZ2xlRWRpdFByb2ZpbGVNb2RhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgdGVtcGxhdGVVcmw6ICdlZGl0X3Byb2ZpbGVfbW9kYWwuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnXG5cdFx0fSk7XG5cdH07XG59XSlcbi5jb250cm9sbGVyKCdTaW1wbGVNb2RhbEluc3RhbmNlQ3RybCcsIFtcIiRtb2RhbEluc3RhbmNlXCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSkge1xuICB0aGlzLmNhbmNlbCA9IGZ1bmN0aW9uKCkge1xuICAgICRtb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuICB9O1xufV0pXG4uY29udHJvbGxlcignTmV3TWVtYmVyTW9kYWxJbnN0YW5jZUN0cmwnLCBbXCIkbW9kYWxJbnN0YW5jZVwiLCBcIiRjb250cm9sbGVyXCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIpIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ1NpbXBsZU1vZGFsSW5zdGFuY2VDdHJsJywgeyRtb2RhbEluc3RhbmNlOiAkbW9kYWxJbnN0YW5jZX0pKTtcblx0dGhpcy5lbWFpbCA9IFwiXCI7XG5cdHRoaXMuYWRkTWVtYmVyID0gZnVuY3Rpb24oZW1haWwpIHtcblx0XHRlbWFpbCA9IGVtYWlsLnRyaW0oKTtcblx0XHRpZiAoZW1haWwubGVuZ3RoID09PSAwKSB7XG5cdFx0XHQkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0aWYgKGVtYWlsLmluZGV4T2YoJ0AnKSA8IDApIHtcblx0XHRcdGVtYWlsICs9ICdAZ21haWwuY29tJztcblx0XHR9XG5cdCAgJG1vZGFsSW5zdGFuY2UuY2xvc2UoZW1haWwpO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignRGVsZXRlVGVhbU1vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBmdW5jdGlvbiAoJG1vZGFsSW5zdGFuY2UsICRjb250cm9sbGVyKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdTaW1wbGVNb2RhbEluc3RhbmNlQ3RybCcsIHskbW9kYWxJbnN0YW5jZTogJG1vZGFsSW5zdGFuY2V9KSk7XG5cdHRoaXMucmVtb3ZlID0gZnVuY3Rpb24oKSB7XG5cdCAgJG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblx0fTtcbn1dKVxuLmNvbnRyb2xsZXIoJ0ltcG9ydFN3ZWVwc01vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBcInRlYW1zXCIsIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIsIHRlYW1zKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdTaW1wbGVNb2RhbEluc3RhbmNlQ3RybCcsIHskbW9kYWxJbnN0YW5jZTogJG1vZGFsSW5zdGFuY2V9KSk7XG5cdHRoaXMudGVhbXMgPSB0ZWFtcztcblx0dGhpcy5zZWxlY3RlZFRlYW0gPSB0ZWFtc1swXTtcblx0dGhpcy5pbXBvcnQgPSBmdW5jdGlvbigpIHtcblx0ICAkbW9kYWxJbnN0YW5jZS5jbG9zZSh0aGlzLnNlbGVjdGVkVGVhbSk7XG5cdH07XG59XSlcbi5jb250cm9sbGVyKCdDcmVhdGVUZWFtTW9kYWxJbnN0YW5jZUN0cmwnLCBbXCIkbW9kYWxJbnN0YW5jZVwiLCBcIiRjb250cm9sbGVyXCIsIFwidXNlclwiLCBcImNvdXJzZXNcIiwgXCJDU1ZcIiwgXCIkc2NvcGVcIiwgZnVuY3Rpb24gKCRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlciwgdXNlciwgY291cnNlcywgQ1NWLCAkc2NvcGUpIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ1NpbXBsZU1vZGFsSW5zdGFuY2VDdHJsJywgeyRtb2RhbEluc3RhbmNlOiAkbW9kYWxJbnN0YW5jZX0pKTtcblx0dGhpcy50ZWFtTmFtZSA9IFwiXCI7XG5cdHRoaXMudGVhbU1lbWJlcnMgPSBcIlwiO1xuXHR0aGlzLmluY2x1ZGVMZWFkZXIgPSBmYWxzZTtcbiAgdGhpcy5maWxlID0gZmFsc2U7XG5cdHZhciBzZWxmID0gdGhpcztcblx0dGhpcy5jb3Vyc2VzID0gYW5ndWxhci5jb3B5KGNvdXJzZXMuaWRzKTtcblx0dGhpcy5vZmZlcmVkQ291cnNlcyA9IGNvdXJzZXM7XG5cdHRoaXMuZ2V0Q291cnNlVGl0bGUgPSBmdW5jdGlvbihwcmVmaXgpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGNvdXJzZXMuaWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAoY291cnNlcy5pZHNbaV0gPT09IHByZWZpeCkge1xuXHRcdFx0XHRyZXR1cm4gY291cnNlcy50aXRsZXNbaV07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBcIlwiO1xuXHR9O1xuICB0aGlzLnVwbG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzaG93RXJyb3IgPSBmdW5jdGlvbihtc2cpIHtcbiAgICAgIGFsZXJ0KG1zZyk7XG4gICAgfTtcbiAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIHRleHQgPSByZWFkZXIucmVzdWx0O1xuICAgICAgXG4gICAgICB2YXIgY3N2ID0gbnVsbDsgXG4gICAgICB0cnkge1xuICAgICAgICBjc3YgPSBDU1YudG9BcnJheSh0ZXh0KTtcbiAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICBzaG93RXJyb3IoXCJDYW5ub3QgcmVhZCBDU1YhXCIpXG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhjc3YpO1xuICAgICAgdmFyIGVtYWlsQ29sID0gZmFsc2U7XG4gICAgICB2YXIgZW1haWxzID0gW107XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNzdi5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcm93ID0gY3N2W2ldO1xuICAgICAgICBpZiAoZW1haWxDb2wgPT09IGZhbHNlKSB7XG4gICAgICAgICAgZm9yKHZhciBqID0gMDsgaiA8IHJvdy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgaWYgKHJvd1tqXSA9PT0gXCJFbWFpbFwiKSB7XG4gICAgICAgICAgICAgIGVtYWlsQ29sID0gajtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHJvdy5sZW5ndGggPiBlbWFpbENvbCkge1xuICAgICAgICAgICAgZW1haWxzLnB1c2gocm93W2VtYWlsQ29sXS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHNlbGYudGVhbU1lbWJlcnMgKz0gZW1haWxzLmpvaW4oKTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgcmVhZGVyLnJlYWRBc1RleHQodGhpcy5maWxlKTtcbiAgfTtcblx0dGhpcy5hZGQgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3VGVhbSA9IHtuYW1lOiBzZWxmLnRlYW1OYW1lLCBsZWFkZXI6IHVzZXIuZW1haWwsIG1lbWJlcnM6W10sIGNvdXJzZXM6c2VsZi5jb3Vyc2VzfTtcblx0XHR2YXIgbWVtYmVycyA9IHNlbGYudGVhbU1lbWJlcnMuc3BsaXQoJywnKTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1lbWJlcnMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBlbWFpbCA9IG1lbWJlcnNbaV0udHJpbSgpO1xuXHRcdFx0aWYgKGVtYWlsLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblx0XHRcdGlmIChlbWFpbC5pbmRleE9mKCdAJykgPCAwKSB7XG5cdFx0XHRcdGVtYWlsICs9ICdAZ21haWwuY29tJztcblx0XHRcdH1cblx0XHRcdG5ld1RlYW0ubWVtYmVycy5wdXNoKHtlbWFpbDplbWFpbCwgdmlzaWJpbGl0eTpcIk5PVF9DSE9TRU5cIn0pO1xuXHRcdH1cblx0XHRpZiAoc2VsZi5pbmNsdWRlTGVhZGVyKSB7XG5cdFx0XHRuZXdUZWFtLm1lbWJlcnMucHVzaCh7ZW1haWw6dXNlci5lbWFpbCwgdmlzaWJpbGl0eTpcIkFMTF9NRU1CRVJTXCJ9KTtcblx0XHR9XG5cdCAgJG1vZGFsSW5zdGFuY2UuY2xvc2UobmV3VGVhbSk7XG5cdH07XG59XSlcbi5jb250cm9sbGVyKCdFeHBvcnRNb2RhbFBhcmVudEN0cmwnLCBbXCIkbW9kYWxJbnN0YW5jZVwiLCBcIiRjb250cm9sbGVyXCIsIFwidGVhbVwiLCBcIiR3aW5kb3dcIiwgZnVuY3Rpb24gKCRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlciwgdGVhbSkge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignU2ltcGxlTW9kYWxJbnN0YW5jZUN0cmwnLCB7JG1vZGFsSW5zdGFuY2U6ICRtb2RhbEluc3RhbmNlfSkpO1xuXHR0aGlzLnRlYW0gPSB0ZWFtO1xuXHR0aGlzLmZ1bGxuYW1lID0gdHJ1ZTtcblx0dGhpcy51c2VybmFtZSA9IHRydWU7XG5cdHRoaXMuaGFzVGltZXN0YW1wID0gdHJ1ZTtcblx0dGhpcy5wb2ludFZhbHVlID0gXCJ0YXNrc1wiO1xuXHR0aGlzLnBvaW50c1BlclVuaXQgPSBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInBwdVwiKSkgfHwgMTtcblx0dGhpcy5wb2ludHNQZXJUYXNrID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcHRcIikpIHx8IDE7XG5cdHRoaXMuaW5jbHVkZUNvdXJzZVByb2dyZXNzID0gZmFsc2U7XG5cdHRoaXMuaW5jbHVkZVRyYWNrUHJvZ3Jlc3MgPSBmYWxzZTtcblx0dGhpcy50aW1lem9uZSA9ICdFU1QnO1xuICB0aGlzLnRpbWV6b25lcyA9IFsnVVRDJywgJ1BEVCcsICdNRFQnLCAnQ0RUJywgJ0VEVCcsICdQU1QnLCAnTVNUJywgJ0NTVCcsICdFU1QnXTtcblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR0aGlzLmdlbmVyYXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGxhbmRpbmdRcyA9IFwidGVhbV91cmxzYWZlPVwiICsgdGVhbS50ZWFtX2tleTtcblx0XHRpZih0aGlzLmZ1bGxuYW1lKSB7XG5cdFx0XHRsYW5kaW5nUXMgKz0gXCImc3R1ZGVudF9uYW1lPXRydWVcIjtcblx0XHR9XG5cdFx0aWYodGhpcy51c2VybmFtZSkge1xuXHRcdFx0bGFuZGluZ1FzICs9IFwiJnJvc2VfdXNlcm5hbWU9dHJ1ZVwiO1xuXHRcdH1cblx0XHRpZih0aGlzLmhhc1RpbWVzdGFtcCkge1xuXHRcdFx0bGFuZGluZ1FzICs9IFwiJnRpbWV6b25lPVwiICsgdGhpcy50aW1lem9uZTtcblx0XHR9XG5cdFx0aWYodGhpcy5pbmNsdWRlQ291cnNlUHJvZ3Jlc3MpIHtcblx0XHRcdGxhbmRpbmdRcyArPSBcIiZjb3Vyc2VfcHJvZ3Jlc3M9dHJ1ZVwiO1xuXHRcdH1cblx0XHRpZih0aGlzLmluY2x1ZGVUcmFja1Byb2dyZXNzKSB7XG5cdFx0XHRsYW5kaW5nUXMgKz0gXCImdHJhY2tfcHJvZ3Jlc3M9dHJ1ZVwiO1xuXHRcdH1cblx0XHRpZih0aGlzLnBvaW50VmFsdWUgPT09IFwicG9pbnRzXCIpIHtcblx0XHRcdGxhbmRpbmdRcyArPSBcIiZwcHU9XCIgKyB0aGlzLnBvaW50c1BlclVuaXQ7XG5cdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInBwdVwiLCB0aGlzLnBvaW50c1BlclVuaXQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRsYW5kaW5nUXMgKz0gXCImcHB0PVwiICsgdGhpcy5wb2ludHNQZXJUYXNrO1xuXHRcdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcHRcIiwgdGhpcy5wb2ludHNQZXJUYXNrKTtcblx0XHR9XG5cdFx0dGhpcy5vblBvc3RHZW5lcmF0ZShsYW5kaW5nUXMpO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignRXhwb3J0TW9kYWxJbnN0YW5jZUN0cmwnLCBbXCIkbW9kYWxJbnN0YW5jZVwiLCBcIiRjb250cm9sbGVyXCIsIFwidGVhbVwiLCBcIiR3aW5kb3dcIiwgZnVuY3Rpb24gKCRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlciwgdGVhbSwgJHdpbmRvdykge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignRXhwb3J0TW9kYWxQYXJlbnRDdHJsJywgeyRtb2RhbEluc3RhbmNlOiRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlcjokY29udHJvbGxlciwgdGVhbTp0ZWFtfSkpO1xuXHR0aGlzLm9uUG9zdEdlbmVyYXRlID0gZnVuY3Rpb24ocXMpIHtcblx0XHR2YXIgbGFuZGluZ1VybCA9IFwiaHR0cDovL1wiICsgJHdpbmRvdy5sb2NhdGlvbi5ob3N0ICsgXCIvdGVhbXMvZXhwb3J0LmNzdj9cIjtcblx0XHQkd2luZG93Lm9wZW4obGFuZGluZ1VybCArIGVuY29kZVVSSShxcyksIFwiX2JsYW5rXCIpO1xuXHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG5cdH1cblx0dGhpcy5kb25lQnV0dG9uVGV4dCA9ICdHZW5lcmF0ZSc7XG59XSlcbi5jb250cm9sbGVyKCdOZXdTd2VlcE1vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBcInRlYW1fa2V5XCIsIFwiJG1vZGFsXCIsIFwicHJvZ3Jlc3NcIiwgIGZ1bmN0aW9uICgkbW9kYWxJbnN0YW5jZSwgJGNvbnRyb2xsZXIsIHRlYW1fa2V5LCAkbW9kYWwsIHByb2dyZXNzKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdTaW1wbGVNb2RhbEluc3RhbmNlQ3RybCcsIHskbW9kYWxJbnN0YW5jZTogJG1vZGFsSW5zdGFuY2V9KSk7XG4gIHZhciBwcHVEZWZhdWx0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcHVcIikgfHwgXCIxXCI7XG5cdHRoaXMuc3dlZXAgPSB7ZHQ6bmV3IERhdGUoKSwgdGVhbV9rZXk6dGVhbV9rZXksIG9wdGlvbnM6XCJzdHVkZW50X25hbWU9dHJ1ZSZyb3NlX3VzZXJuYW1lPXRydWUmdGltZXpvbmU9RVNUJnBwdT1cIiArIHBwdURlZmF1bHQsIGhvdXJOdW06MTIsIHR6OlwiRVNUXCJ9O1xuICB0aGlzLnRpbWV6b25lcyA9IFsnVVRDJywgJ1BEVCcsICdNRFQnLCAnQ0RUJywgJ0VEVCcsICdQU1QnLCAnTVNUJywgJ0NTVCcsICdFU1QnXTtcblx0dGhpcy50b2RheSA9IG5ldyBEYXRlKCk7XG4gIHRoaXMuZG9lc1JlcGVhdCA9IGZhbHNlO1xuICB0aGlzLnJlcGVhdFdlZWtzID0gMDtcblx0dGhpcy5zdG9wRXZlbnQgPSBmdW5jdGlvbigkZXZlbnQpIHtcblx0XHQkZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHQkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH07XG5cdHRoaXMuYWRkU3dlZXAgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5kb2VzUmVwZWF0KSB7XG4gICAgICB0aGlzLnN3ZWVwLnJlcGVhdHMgPSB0aGlzLnJlcGVhdFdlZWtzO1xuICAgIH1cblx0ICAkbW9kYWxJbnN0YW5jZS5jbG9zZSh0aGlzLnN3ZWVwKTtcblx0fTtcblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR0aGlzLnRvZ2dsZVN3ZWVwT3B0aW9uc01vZGFsID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0XHQgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9tb2RhbHMvZXhwb3J0X3Byb2dyZXNzX21vZGFsLmh0bWwnLFxuXHRcdFx0ICBjb250cm9sbGVyOiAnU3dlZXBPcHRpb25zTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdFx0ICBjb250cm9sbGVyQXM6ICdtb2RhbCcsXG5cdFx0XHQgIHJlc29sdmU6IHtcblx0XHRcdFx0ICB0ZWFtOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQgIHJldHVybiBwcm9ncmVzcztcblx0XHRcdFx0ICB9LFxuXHRcdFx0XHQgIG9wdGlvblN0cmluZzogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ICByZXR1cm4gc2VsZi5zd2VlcC5vcHRpb25zO1xuXHRcdFx0XHQgIH1cblx0XHRcdCAgfVxuXHRcdH0pO1xuXHRcdG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24obmV3T3B0aW9ucykge1xuXHRcdFx0c2VsZi5zd2VlcC5vcHRpb25zID0gbmV3T3B0aW9ucztcblx0XHR9KTtcblx0fTtcbn1dKVxuLmNvbnRyb2xsZXIoJ1N3ZWVwT3B0aW9uc01vZGFsSW5zdGFuY2VDdHJsJywgW1wiJG1vZGFsSW5zdGFuY2VcIiwgXCIkY29udHJvbGxlclwiLCBcInRlYW1cIiwgXCJvcHRpb25TdHJpbmdcIiwgZnVuY3Rpb24gKCRtb2RhbEluc3RhbmNlLCAkY29udHJvbGxlciwgdGVhbSwgb3B0aW9uU3RyaW5nKSB7XG5cdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsICRjb250cm9sbGVyKCdFeHBvcnRNb2RhbFBhcmVudEN0cmwnLCB7JG1vZGFsSW5zdGFuY2U6JG1vZGFsSW5zdGFuY2UsICRjb250cm9sbGVyOiRjb250cm9sbGVyLCB0ZWFtOnRlYW19KSk7XG5cdHRoaXMub25Qb3N0R2VuZXJhdGUgPSBmdW5jdGlvbihxcykge1xuXHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKHFzKTtcblx0fVxuXHR0aGlzLmRvbmVCdXR0b25UZXh0ID0gJ0RvbmUnO1xuXHRpZiAob3B0aW9uU3RyaW5nICE9PSBcIlwiKSB7XG5cdFx0dmFyIG9wdGlvbnMgPSB7fTtcblx0XHRvcHRpb25TdHJpbmcgPSBvcHRpb25TdHJpbmcuc3BsaXQoJyYnKTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgb3B0aW9uU3RyaW5nLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgb3AgPSBvcHRpb25TdHJpbmdbaV0uc3BsaXQoJz0nKTtcblx0XHRcdG9wdGlvbnNbb3BbMF1dID0gb3BbMV07XG5cdFx0fVxuXHRcdHRoaXMuZnVsbG5hbWUgPSBvcHRpb25zWydzdHVkZW50X25hbWUnXSA9PT0gJ3RydWUnO1xuXHRcdHRoaXMudXNlcm5hbWUgPSBvcHRpb25zWydyb3NlX3VzZXJuYW1lJ10gPT09ICd0cnVlJztcblx0XHR0aGlzLmhhc1RpbWVzdGFtcCA9IG9wdGlvbnNbJ3RpbWV6b25lJ10gIT0gdW5kZWZpbmVkO1xuXHRcdHRoaXMucG9pbnRWYWx1ZSA9IG9wdGlvbnNbJ3BwdSddID8gXCJwb2ludHNcIiA6IFwidGFza3NcIjtcblx0XHR0aGlzLnBvaW50c1BlclVuaXQgPSBwYXJzZUludChvcHRpb25zWydwcHUnXSkgfHwgcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcHVcIikpIHx8IDE7XG5cdFx0dGhpcy5wb2ludHNQZXJUYXNrID0gcGFyc2VJbnQob3B0aW9uc1sncHB0J10pIHx8IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHB0XCIpKSB8fCAxO1xuXHRcdHRoaXMuaW5jbHVkZUNvdXJzZVByb2dyZXNzID0gb3B0aW9uc1snY291cnNlX3Byb2dyZXNzJ10gPT09ICd0cnVlJztcblx0XHR0aGlzLmluY2x1ZGVUcmFja1Byb2dyZXNzID0gb3B0aW9uc1sndHJhY2tfcHJvZ3Jlc3MnXSA9PT0gJ3RydWUnO1xuXHRcdHRoaXMudGltZXpvbmUgPSBvcHRpb25zWyd0aW1lem9uZSddIHx8ICdFU1QnO1xuICAgIHRoaXMudGltZXpvbmVzID0gWydVVEMnLCAnUERUJywgJ01EVCcsICdDRFQnLCAnRURUJywgJ1BTVCcsICdNU1QnLCAnQ1NUJywgJ0VTVCddO1xuXHR9XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnT3ZlcnZpZXdDb250cm9sbGVycycsIFtdKVxuLmNvbnRyb2xsZXIoJ092ZXJ2aWV3Q3RybCcsIGZ1bmN0aW9uKCkge1xufSlcbi5jb250cm9sbGVyKCdQcmV2aWV3Q3RybCcsIFtcIm9BdXRoXCIsIFwiJGxvY2F0aW9uXCIsIFwic2lkZWJhclwiLCBcIiRyb290U2NvcGVcIiwgXCJzbmFja2JhclwiLCBcInVzZXJFbWFpbFwiLCBmdW5jdGlvbihvQXV0aCwgJGxvY2F0aW9uLCBzaWRlYmFyLCAkcm9vdFNjb3BlLCBzbmFja2JhciwgdXNlckVtYWlsKSB7XG5cdG9BdXRoLmNoZWNrKCkudGhlbihmdW5jdGlvbigpIHtcblx0XHQkbG9jYXRpb24ucGF0aCgnL292ZXJ2aWV3Jyk7XG5cdFx0c2lkZWJhci5zaG93LnNldCh0cnVlKTtcblx0XHQkcm9vdFNjb3BlLiRhcHBseSgpO1xuXHR9KTtcblx0dGhpcy5zaWdudXAgPSBmdW5jdGlvbigpIHtcblx0XHRvQXV0aC5zaWdudXAoKS50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdFx0b0F1dGguZ2V0VXNlckluZm8oKS50aGVuKGZ1bmN0aW9uKHVzZXJJbmZvKSB7XG5cdFx0XHRcdGlmKHVzZXJJbmZvLmVtYWlsICE9PSB1c2VyRW1haWwpIHtcblx0XHRcdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPkRhbmdlciE8L2I+IFNpZ25pbmcgdXAgZm9yIHRlYW1zIHdpdGggYW5vdGhlciBhY2NvdW50IG1heSBjYXVzZSBlcnJvcnMhXCIsIDYwMDApO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvb3ZlcnZpZXcnKTtcblx0XHRcdHNpZGViYXIuc2hvdy5zZXQodHJ1ZSk7XG5cdFx0fSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRzbmFja2Jhci5jcmVhdGVXaXRoVGltZW91dChcIjxiPkVycm9yITwvYj4gU2lnbiB1cCBmYWlsZWRcIik7XG5cdFx0fSk7XG5cdH07XG59XSlcbi5jb250cm9sbGVyKCdTaWRlYmFyQ3RybCcsIFtcInNpZGViYXJcIiwgXCIkbG9jYXRpb25cIiwgXCIkc2NvcGVcIiwgZnVuY3Rpb24oc2lkZWJhciwgJGxvY2F0aW9uLCAkc2NvcGUpIHtcblx0dGhpcy5yb3V0ZXMgPSBzaWRlYmFyLnJvdXRlcztcblx0dGhpcy5zaG93ID0gc2lkZWJhci5zaG93LmdldCgpO1xuXHR2YXIgc2VsZiA9IHRoaXM7XG5cdCRzY29wZS4kd2F0Y2goZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lkZWJhci5zaG93LmdldCgpOyB9LFxuXHRcdFx0ZnVuY3Rpb24gKHZhbHVlKSB7IHNlbGYuc2hvdyA9IHZhbHVlOyB9KTtcblxuXHR0aGlzLmlzQWN0aXZlID0gZnVuY3Rpb24ocm91dGVVcmwpIHtcblx0XHR2YXIgcGF0aCA9ICRsb2NhdGlvbi5wYXRoKCk7XG5cdFx0cm91dGVVcmwgPSByb3V0ZVVybC5zdWJzdHJpbmcoMSk7XG5cdFx0cmV0dXJuIHBhdGguc3RhcnRzV2l0aChyb3V0ZVVybCk7XG5cdH1cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdUZWFtQ29udHJvbGxlcnMnLCBbXSlcbi5jb250cm9sbGVyKCdUZWFtc0N0cmwnLCBbXCIkbW9kYWxcIiwgXCJ0ZWFtc1wiLCBmdW5jdGlvbigkbW9kYWwsIHRlYW1zKSB7XG5cdHRoaXMuaXRlbXMgPSB0ZWFtc1tcInRlYW1zXCJdO1xuXHR2YXIgc2VsZiA9IHRoaXM7XG59XSlcbi5jb250cm9sbGVyKCdUZWFtc1BhcmVudEN0cmwnLCBbJyRtb2RhbCcsICd0ZWFtJywgZnVuY3Rpb24oJG1vZGFsLCB0ZWFtKSB7XG5cdHRoaXMudG9nZ2xlRXhwb3J0UHJvZ3Jlc3NNb2RhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgdGVtcGxhdGVVcmw6ICcvc3RhdGljL3RlYW1zL3BhcnRpYWxzL21vZGFscy9leHBvcnRfcHJvZ3Jlc3NfbW9kYWwuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnRXhwb3J0TW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdCAgY29udHJvbGxlckFzOiAnbW9kYWwnLFxuXHRcdCAgcmVzb2x2ZToge1xuXHRcdFx0ICB0ZWFtOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0ICByZXR1cm4gdGVhbTtcblx0XHRcdCAgfVxuXHRcdCAgfVxuXHRcdH0pO1xuXHR9O1xufV0pXG4uY29udHJvbGxlcignVGVhbXNDb3Vyc2VDdHJsJywgW1wiJG1vZGFsXCIsIFwidGVhbVwiLCBcIiRjb250cm9sbGVyXCIsIGZ1bmN0aW9uKCRtb2RhbCwgdGVhbSwgJGNvbnRyb2xsZXIpIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ1RlYW1zUGFyZW50Q3RybCcsIHskbW9kYWw6ICRtb2RhbCwgdGVhbTogdGVhbX0pKTtcbiAgdGhpcy50ZWFtID0gdGVhbTtcblx0aWYgKHRlYW0ubWVtYmVyc19wcm9ncmVzcyA9PSB1bmRlZmluZWQpIHtcblx0XHR0aGlzLnRlYW0ubWVtYmVyc19wcm9ncmVzcyA9IFtdO1xuXHR9XG5cdHRoaXMuY291cnNlcyA9IFtdO1xuXHRpZiAodGVhbS5tZW1iZXJzX3Byb2dyZXNzLmxlbmd0aCA+IDApIHtcblx0XHRjb3Vyc2VzID0gdGVhbS5tZW1iZXJzX3Byb2dyZXNzWzBdLmNvdXJzZV9wcm9ncmVzcztcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGNvdXJzZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHRoaXMuY291cnNlcy5wdXNoKGNvdXJzZXNbaV0ubmFtZSk7XG5cdFx0fVxuXHR9XG59XSlcbi5jb250cm9sbGVyKCdUZWFtc1RyYWNrQ3RybCcsIFtcIiRyb3V0ZVBhcmFtc1wiLCBcInRlYW1cIiwgXCIkbW9kYWxcIiwgXCIkY29udHJvbGxlclwiLCBmdW5jdGlvbigkcm91dGVQYXJhbXMsIHRlYW0sICRtb2RhbCwgJGNvbnRyb2xsZXIpIHtcblx0YW5ndWxhci5leHRlbmQodGhpcywgJGNvbnRyb2xsZXIoJ1RlYW1zUGFyZW50Q3RybCcsIHskbW9kYWw6ICRtb2RhbCwgdGVhbTogdGVhbX0pKTtcblx0dGhpcy50ZWFtID0gdGVhbTtcblx0aWYgKHRlYW0ubWVtYmVyc19wcm9ncmVzcyA9PSB1bmRlZmluZWQpIHtcblx0XHR0aGlzLnRlYW0ubWVtYmVyc19wcm9ncmVzcyA9IFtdO1xuXHR9XG5cdHRoaXMuY291cnNlID0gJHJvdXRlUGFyYW1zLmNvdXJzZV9uYW1lO1xuXHR0aGlzLnRyYWNrcyA9IFtdO1xuXHRpZiAodGVhbS5tZW1iZXJzX3Byb2dyZXNzLmxlbmd0aCA+IDApIHtcblx0XHR2YXIgY291cnNlcyA9IHRlYW0ubWVtYmVyc19wcm9ncmVzc1swXS5jb3Vyc2VfcHJvZ3Jlc3M7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb3Vyc2VzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAoY291cnNlc1tpXS5uYW1lID09PSB0aGlzLmNvdXJzZSkge1xuXHRcdFx0XHR0aGlzLmNvdXJzZU51bSA9IGk7XG5cdFx0XHRcdHZhciBjb3Vyc2VUcmFja3MgPSBjb3Vyc2VzW2ldLnRyYWNrX3Byb2dyZXNzO1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGNvdXJzZVRyYWNrcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdHRoaXMudHJhY2tzLnB1c2goY291cnNlVHJhY2tzW2pdLm5hbWUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHR2YXIgc2VsZiA9IHRoaXM7XG5cdHRoaXMuZ2V0UHJvZ3Jlc3NGb3JNZW1iZXJUcmFjayA9IGZ1bmN0aW9uKG1lbWJlciwgdHJhY2tOdW0pIHtcblx0XHRyZXR1cm4gbWVtYmVyLmNvdXJzZV9wcm9ncmVzc1tzZWxmLmNvdXJzZU51bV0udHJhY2tfcHJvZ3Jlc3NbdHJhY2tOdW1dLnByb2dyZXNzO1xuXHR9XG59XSlcbi5jb250cm9sbGVyKCdUZWFtc1VuaXRDdHJsJywgW1wiJHJvdXRlUGFyYW1zXCIsIFwidGVhbVwiLCBcIiRtb2RhbFwiLCBcIiRjb250cm9sbGVyXCIsIGZ1bmN0aW9uKCRyb3V0ZVBhcmFtcywgdGVhbSwgJG1vZGFsLCAkY29udHJvbGxlcikge1xuXHRhbmd1bGFyLmV4dGVuZCh0aGlzLCAkY29udHJvbGxlcignVGVhbXNQYXJlbnRDdHJsJywgeyRtb2RhbDogJG1vZGFsLCB0ZWFtOiB0ZWFtfSkpO1xuXHR0aGlzLnRlYW0gPSB0ZWFtO1xuXHRpZiAodGVhbS5tZW1iZXJzX3Byb2dyZXNzID09IHVuZGVmaW5lZCkge1xuXHRcdHRoaXMudGVhbS5tZW1iZXJzX3Byb2dyZXNzID0gW107XG5cdH1cblx0dGhpcy5jb3Vyc2UgPSAkcm91dGVQYXJhbXMuY291cnNlX25hbWU7XG5cdHRoaXMudHJhY2sgPSAkcm91dGVQYXJhbXMudHJhY2tfbmFtZTtcblx0dGhpcy51bml0cyA9IFtdO1xuXHRpZiAodGVhbS5tZW1iZXJzX3Byb2dyZXNzLmxlbmd0aCA+IDApIHtcblx0XHR2YXIgY291cnNlcyA9IHRlYW0ubWVtYmVyc19wcm9ncmVzc1swXS5jb3Vyc2VfcHJvZ3Jlc3M7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb3Vyc2VzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAoY291cnNlc1tpXS5uYW1lID09PSB0aGlzLmNvdXJzZSkge1xuXHRcdFx0XHR0aGlzLmNvdXJzZU51bSA9IGk7XG5cdFx0XHRcdHZhciB0cmFja3MgPSBjb3Vyc2VzW2ldLnRyYWNrX3Byb2dyZXNzO1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IHRyYWNrcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdGlmICh0cmFja3Nbal0ubmFtZSA9PT0gdGhpcy50cmFjaykge1xuXHRcdFx0XHRcdFx0dGhpcy50cmFja051bSA9IGo7XG5cdFx0XHRcdFx0XHR2YXIgdHJhY2tVbml0cyA9IHRyYWNrc1tqXS51bml0X3Byb2dyZXNzO1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgayA9IDA7IGsgPCB0cmFja1VuaXRzLmxlbmd0aDsgaysrKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMudW5pdHMucHVzaCh0cmFja1VuaXRzW2tdLm5hbWUpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHR2YXIgc2VsZiA9IHRoaXM7XG5cdHRoaXMuZ2V0UHJvZ3Jlc3NGb3JNZW1iZXJVbml0ID0gZnVuY3Rpb24obWVtYmVyLCB1bml0TnVtKSB7XG5cdFx0cmV0dXJuIG1lbWJlci5jb3Vyc2VfcHJvZ3Jlc3Nbc2VsZi5jb3Vyc2VOdW1dLnRyYWNrX3Byb2dyZXNzW3NlbGYudHJhY2tOdW1dLnVuaXRfcHJvZ3Jlc3NbdW5pdE51bV0ucHJvZ3Jlc3M7XG5cdH1cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdUZWFtU2VydmljZXMnLCBbXSlcbi5mYWN0b3J5KCdzaWRlYmFyJywgZnVuY3Rpb24oKSB7XG5cdHZhciBpc1Nob3dpbmcgPSB0cnVlO1xuXHRyZXR1cm4geyByb3V0ZXMgOlxuXHRcdFt7bmFtZTonT3ZlcnZpZXcnLCBocmVmOicjL292ZXJ2aWV3Lyd9LFxuXHRcdHtuYW1lOidUZWFtcycsIGhyZWY6JyMvdGVhbXMvJ30sXG5cdFx0e25hbWU6J0ludml0ZXMnLCBocmVmOicjL2ludml0ZXMvJ30sXG5cdFx0e25hbWU6J01hbmFnZScsIGhyZWY6JyMvbWFuYWdlLyd9XSxcblx0XHRzaG93OlxuXHRcdHtcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBpc1Nob3dpbmc7XG5cdFx0XHR9LFxuXHRcdFx0c2V0OiBmdW5jdGlvbihzaG93aW5nKSB7XG5cdFx0XHRcdGlzU2hvd2luZyA9IHNob3dpbmc7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufSlcbi5mYWN0b3J5KCd1c2VyRW1haWwnLCBbXCIkcm9vdFNjb3BlXCIsIGZ1bmN0aW9uKCRyb290U2NvcGUpIHtcblx0cmV0dXJuICRyb290U2NvcGUudXNlckVtYWlsO1xufV0pXG4uZmFjdG9yeSgnQ1NWJywgZnVuY3Rpb24oKSB7XG4gICAgLy8gRlJPTTogaHR0cDovL3d3dy5iZW5uYWRlbC5jb20vYmxvZy8xNTA0LWFzay1iZW4tcGFyc2luZy1jc3Ytc3RyaW5ncy13aXRoLWphdmFzY3JpcHQtZXhlYy1yZWd1bGFyLWV4cHJlc3Npb24tY29tbWFuZC5odG1cbiAgICAvLyBUaGlzIHdpbGwgcGFyc2UgYSBkZWxpbWl0ZWQgc3RyaW5nIGludG8gYW4gYXJyYXkgb2ZcbiAgICAvLyBhcnJheXMuIFRoZSBkZWZhdWx0IGRlbGltaXRlciBpcyB0aGUgY29tbWEsIGJ1dCB0aGlzXG4gICAgLy8gY2FuIGJlIG92ZXJyaWRlbiBpbiB0aGUgc2Vjb25kIGFyZ3VtZW50LlxuICAgIHZhciBDU1ZUb0FycmF5ID0gZnVuY3Rpb24gKCBzdHJEYXRhLCBzdHJEZWxpbWl0ZXIgKSB7XG4gICAgICAgIC8vIENoZWNrIHRvIHNlZSBpZiB0aGUgZGVsaW1pdGVyIGlzIGRlZmluZWQuIElmIG5vdCxcbiAgICAgICAgLy8gdGhlbiBkZWZhdWx0IHRvIGNvbW1hLlxuICAgICAgICBzdHJEZWxpbWl0ZXIgPSAoc3RyRGVsaW1pdGVyIHx8IFwiLFwiKTtcbiAgICAgICAgLy8gQ3JlYXRlIGEgcmVndWxhciBleHByZXNzaW9uIHRvIHBhcnNlIHRoZSBDU1YgdmFsdWVzLlxuICAgICAgICB2YXIgb2JqUGF0dGVybiA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgLy8gRGVsaW1pdGVycy5cbiAgICAgICAgICAgICAgICBcIihcXFxcXCIgKyBzdHJEZWxpbWl0ZXIgKyBcInxcXFxccj9cXFxcbnxcXFxccnxeKVwiICtcbiAgICAgICAgICAgICAgICAvLyBRdW90ZWQgZmllbGRzLlxuICAgICAgICAgICAgICAgIFwiKD86XFxcIihbXlxcXCJdKig/OlxcXCJcXFwiW15cXFwiXSopKilcXFwifFwiICtcbiAgICAgICAgICAgICAgICAvLyBTdGFuZGFyZCBmaWVsZHMuXG4gICAgICAgICAgICAgICAgXCIoW15cXFwiXFxcXFwiICsgc3RyRGVsaW1pdGVyICsgXCJcXFxcclxcXFxuXSopKVwiXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgXCJnaVwiXG4gICAgICAgICAgICApO1xuICAgICAgICAvLyBDcmVhdGUgYW4gYXJyYXkgdG8gaG9sZCBvdXIgZGF0YS4gR2l2ZSB0aGUgYXJyYXlcbiAgICAgICAgLy8gYSBkZWZhdWx0IGVtcHR5IGZpcnN0IHJvdy5cbiAgICAgICAgdmFyIGFyckRhdGEgPSBbW11dO1xuICAgICAgICAvLyBDcmVhdGUgYW4gYXJyYXkgdG8gaG9sZCBvdXIgaW5kaXZpZHVhbCBwYXR0ZXJuXG4gICAgICAgIC8vIG1hdGNoaW5nIGdyb3Vwcy5cbiAgICAgICAgdmFyIGFyck1hdGNoZXMgPSBudWxsO1xuICAgICAgICAvLyBLZWVwIGxvb3Bpbmcgb3ZlciB0aGUgcmVndWxhciBleHByZXNzaW9uIG1hdGNoZXNcbiAgICAgICAgLy8gdW50aWwgd2UgY2FuIG5vIGxvbmdlciBmaW5kIGEgbWF0Y2guXG4gICAgICAgIHdoaWxlIChhcnJNYXRjaGVzID0gb2JqUGF0dGVybi5leGVjKCBzdHJEYXRhICkpe1xuICAgICAgICAgICAgLy8gR2V0IHRoZSBkZWxpbWl0ZXIgdGhhdCB3YXMgZm91bmQuXG4gICAgICAgICAgICB2YXIgc3RyTWF0Y2hlZERlbGltaXRlciA9IGFyck1hdGNoZXNbIDEgXTtcbiAgICAgICAgICAgIC8vIENoZWNrIHRvIHNlZSBpZiB0aGUgZ2l2ZW4gZGVsaW1pdGVyIGhhcyBhIGxlbmd0aFxuICAgICAgICAgICAgLy8gKGlzIG5vdCB0aGUgc3RhcnQgb2Ygc3RyaW5nKSBhbmQgaWYgaXQgbWF0Y2hlc1xuICAgICAgICAgICAgLy8gZmllbGQgZGVsaW1pdGVyLiBJZiBpZCBkb2VzIG5vdCwgdGhlbiB3ZSBrbm93XG4gICAgICAgICAgICAvLyB0aGF0IHRoaXMgZGVsaW1pdGVyIGlzIGEgcm93IGRlbGltaXRlci5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBzdHJNYXRjaGVkRGVsaW1pdGVyLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgIChzdHJNYXRjaGVkRGVsaW1pdGVyICE9IHN0ckRlbGltaXRlcilcbiAgICAgICAgICAgICAgICApe1xuICAgICAgICAgICAgICAgIC8vIFNpbmNlIHdlIGhhdmUgcmVhY2hlZCBhIG5ldyByb3cgb2YgZGF0YSxcbiAgICAgICAgICAgICAgICAvLyBhZGQgYW4gZW1wdHkgcm93IHRvIG91ciBkYXRhIGFycmF5LlxuICAgICAgICAgICAgICAgIGFyckRhdGEucHVzaCggW10gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE5vdyB0aGF0IHdlIGhhdmUgb3VyIGRlbGltaXRlciBvdXQgb2YgdGhlIHdheSxcbiAgICAgICAgICAgIC8vIGxldCdzIGNoZWNrIHRvIHNlZSB3aGljaCBraW5kIG9mIHZhbHVlIHdlXG4gICAgICAgICAgICAvLyBjYXB0dXJlZCAocXVvdGVkIG9yIHVucXVvdGVkKS5cbiAgICAgICAgICAgIGlmIChhcnJNYXRjaGVzWzJdKSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgZm91bmQgYSBxdW90ZWQgdmFsdWUuIFdoZW4gd2UgY2FwdHVyZVxuICAgICAgICAgICAgICAgIC8vIHRoaXMgdmFsdWUsIHVuZXNjYXBlIGFueSBkb3VibGUgcXVvdGVzLlxuICAgICAgICAgICAgICAgIHZhciBzdHJNYXRjaGVkVmFsdWUgPSBhcnJNYXRjaGVzWyAyIF0ucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgbmV3IFJlZ0V4cCggXCJcXFwiXFxcIlwiLCBcImdcIiApLFxuICAgICAgICAgICAgICAgICAgICBcIlxcXCJcIlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBXZSBmb3VuZCBhIG5vbi1xdW90ZWQgdmFsdWUuXG4gICAgICAgICAgICAgICAgdmFyIHN0ck1hdGNoZWRWYWx1ZSA9IGFyck1hdGNoZXNbIDMgXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE5vdyB0aGF0IHdlIGhhdmUgb3VyIHZhbHVlIHN0cmluZywgbGV0J3MgYWRkXG4gICAgICAgICAgICAvLyBpdCB0byB0aGUgZGF0YSBhcnJheS5cbiAgICAgICAgICAgIGFyckRhdGFbIGFyckRhdGEubGVuZ3RoIC0gMSBdLnB1c2goIHN0ck1hdGNoZWRWYWx1ZSApO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJldHVybiB0aGUgcGFyc2VkIGRhdGEuXG4gICAgICAgIHJldHVybiggYXJyRGF0YSApO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgdG9BcnJheTogQ1NWVG9BcnJheVxuICAgIH07XG59KVxuLnNlcnZpY2UoJ29BdXRoJywgW1wiJHFcIiwgXCIkbG9jYXRpb25cIiwgZnVuY3Rpb24gKCRxLCAkbG9jYXRpb24pIHtcblx0dmFyIHNpZ25pbiA9IGZ1bmN0aW9uKGltbWVkaWF0ZSkge1xuXHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBwID0gJHEuZGVmZXIoKTtcblx0XHRcdGdhcGkuYXV0aC5hdXRob3JpemUoe1xuXHRcdFx0XHRjbGllbnRfaWQ6IENMSUVOVF9JRCxcblx0XHRcdFx0c2NvcGU6IFNDT1BFUyxcblx0XHRcdFx0aW1tZWRpYXRlOiBpbW1lZGlhdGVcblx0XHRcdH0sIGZ1bmN0aW9uKGF1dGhSZXN1bHQpIHtcblx0XHRcdFx0aWYgKGF1dGhSZXN1bHQuZXJyb3IpIHtcblx0XHRcdFx0XHRwLnJlamVjdChhdXRoUmVzdWx0KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwLnJlc29sdmUoYXV0aFJlc3VsdCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHAucHJvbWlzZTtcblx0XHR9XG5cdH07XG5cdHRoaXMuc2lnbnVwID0gc2lnbmluKGZhbHNlKTtcblx0dGhpcy5jaGVjayA9IHNpZ25pbih0cnVlKTtcblx0dGhpcy5leGVjdXRlID0gZnVuY3Rpb24oYXBpTWV0aG9kKSB7XG5cdFx0dmFyIHAgPSAkcS5kZWZlcigpO1xuXHRcdGdhcGkuYXV0aC5hdXRob3JpemUoe1xuXHRcdFx0Y2xpZW50X2lkIDogQ0xJRU5UX0lELFxuXHRcdFx0c2NvcGUgOiBTQ09QRVMsXG5cdFx0XHRpbW1lZGlhdGUgOiB0cnVlXG5cdFx0fSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhcGlNZXRob2QuZXhlY3V0ZShmdW5jdGlvbihyZXNwKSB7XG5cdFx0XHRcdGlmICghcmVzcC5jb2RlKSB7XG5cdFx0XHRcdFx0cC5yZXNvbHZlKHJlc3AucmVzdWx0KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwLnJlamVjdChyZXNwKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFx0cmV0dXJuIHAucHJvbWlzZTtcblx0fTtcblx0dGhpcy5nZXRVc2VySW5mbyA9IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmV4ZWN1dGUoZ2FwaS5jbGllbnQub2F1dGgyLnVzZXJpbmZvLmdldCgpKTtcblx0fTtcbn1dKVxuLnNlcnZpY2UoJ2FwaScsIFtcIm9BdXRoXCIsIFwiJHFcIiwgZnVuY3Rpb24gKG9BdXRoLCAkcSkge1xuXHR2YXIgY2FjaGUgPSB7fTtcblx0dGhpcy5kZWxldGVDYWNoZSA9IGZ1bmN0aW9uKCkge1xuXHRcdGNhY2hlID0ge307XG5cdH1cblx0dmFyIGNhY2hlZEFwaUNhbGwgPSBmdW5jdGlvbihjYWNoZUtleSwgYXBpTWV0aG9kKSB7XG5cdFx0cmV0dXJuIGZ1bmN0aW9uKGZvcmNlUmVmcmVzaCkge1xuXHRcdFx0dmFyIHAgPSAkcS5kZWZlcigpO1xuXHRcdFx0aWYgKGNhY2hlW2NhY2hlS2V5XSAhPSB1bmRlZmluZWQgJiYgZm9yY2VSZWZyZXNoID09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRwLnJlc29sdmUoY2FjaGVbY2FjaGVLZXldKTtcblx0XHRcdFx0cmV0dXJuIHAucHJvbWlzZTtcblx0XHRcdH1cblx0XHRcdG9BdXRoLmV4ZWN1dGUoYXBpTWV0aG9kKVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuXHRcdFx0XHRjYWNoZVtjYWNoZUtleV0gPSByZXNwO1xuXHRcdFx0XHRwLnJlc29sdmUocmVzcCk7XG5cdFx0XHR9LCBmdW5jdGlvbihlcnJvcikge1xuXHRcdFx0XHRwLnJlamVjdChlcnJvcik7XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBwLnByb21pc2U7XG5cdFx0fTtcblx0fTtcblx0dmFyIGNhY2hlZFRlYW1BcGlDYWxsID0gZnVuY3Rpb24odHlwZSwgYXBpTWV0aG9kKSB7XG5cdFx0cmV0dXJuIGZ1bmN0aW9uKHBhcmFtcykge1xuXHRcdFx0dmFyIHAgPSAkcS5kZWZlcigpO1xuXHRcdFx0aWYoY2FjaGVbdHlwZSArIHBhcmFtcy50ZWFtX2tleV0gIT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdHAucmVzb2x2ZShjYWNoZVt0eXBlICsgcGFyYW1zLnRlYW1fa2V5XSk7XG5cdFx0XHRcdHJldHVybiBwLnByb21pc2U7XG5cdFx0XHR9XG5cdFx0XHRvQXV0aC5leGVjdXRlKGFwaU1ldGhvZChwYXJhbXMpKVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuXHRcdFx0XHRjYWNoZVt0eXBlICsgcGFyYW1zLnRlYW1fa2V5XSA9IHJlc3A7XG5cdFx0XHRcdHAucmVzb2x2ZShyZXNwKTtcblx0XHRcdH0sIGZ1bmN0aW9uKGVycm9yKSB7XG5cdFx0XHRcdHAucmVqZWN0KGVycm9yKTtcblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHAucHJvbWlzZTtcblx0XHR9O1xuXHR9O1xuXHR0aGlzLmRlbGV0ZVRlYW0gPSBmdW5jdGlvbih0ZWFtKSB7XG5cdFx0aWYgKGNhY2hlW1wiZ2V0X3RlYW1zXCJdICE9IHVuZGVmaW5lZCkge1xuXHRcdFx0dmFyIHRlYW1zID0gY2FjaGVbXCJnZXRfdGVhbXNcIl1bXCJ0ZWFtc1wiXTtcblx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0ZWFtcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZih0ZWFtLnRlYW1fa2V5ID09IHRlYW1zW2ldLnRlYW1fa2V5KSB7XG5cdFx0XHRcdFx0dGVhbXMuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBvQXV0aC5leGVjdXRlKGdhcGkuY2xpZW50LnRlYW1zLmRlbGV0ZSh0ZWFtKSk7XG5cdH07XG5cdHRoaXMuaW5zZXJ0VGVhbSA9IGZ1bmN0aW9uKHRlYW0pIHtcblx0XHR2YXIgcCA9ICRxLmRlZmVyKCk7XG5cdFx0dmFyIHVwZGF0ZUNhY2hlID0gY2FjaGVbXCJnZXRfdGVhbXNcIl0gIT0gdW5kZWZpbmVkO1xuXHRcdHZhciB0ZWFtcyA9IHVuZGVmaW5lZDtcblx0XHR2YXIgbmV3VGVhbSA9IHRlYW0udGVhbV9rZXkgPT0gdW5kZWZpbmVkO1xuXHRcdGlmICh1cGRhdGVDYWNoZSkge1xuXHRcdFx0dGVhbXMgPSBjYWNoZVtcImdldF90ZWFtc1wiXVtcInRlYW1zXCJdO1xuXHRcdFx0aWYodGVhbXMgPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdGNhY2hlW1wiZ2V0X3RlYW1zXCJdW1widGVhbXNcIl0gPSBbXTtcblx0XHRcdFx0dGVhbXMgPSBjYWNoZVtcImdldF90ZWFtc1wiXVtcInRlYW1zXCJdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRvQXV0aC5leGVjdXRlKGdhcGkuY2xpZW50LnRlYW1zLmluc2VydCh0ZWFtKSlcblx0XHQudGhlbihmdW5jdGlvbihyZXNwKSB7XG5cdFx0XHRpZih1cGRhdGVDYWNoZSkge1xuXHRcdFx0XHRpZihuZXdUZWFtKSB7XG5cdFx0XHRcdFx0dGVhbXMucHVzaChyZXNwKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0ZWFtcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdFx0aWYocmVzcC50ZWFtX2tleSA9PT0gdGVhbXNbaV0udGVhbV9rZXkpIHtcblx0XHRcdFx0XHRcdFx0dGVhbXNbaV0gPSByZXNwO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHAucmVzb2x2ZShyZXNwKTtcblx0XHR9LCBmdW5jdGlvbihlcnJvcikge1xuXHRcdFx0cC5yZWplY3QoZXJyb3IpO1xuXHRcdH0pO1xuXHRcdHJldHVybiBwLnByb21pc2U7XG5cdH07XG5cdHRoaXMuZ2V0SW52aXRlcyA9IGNhY2hlZEFwaUNhbGwoXCJnZXRfaW52aXRlc1wiLCBnYXBpLmNsaWVudC50ZWFtcy5pbnZpdGVzLmxpc3QoKSk7XG5cdHRoaXMuZWRpdEludml0ZSA9IGZ1bmN0aW9uKGludml0ZSkge1xuXHRcdHJldHVybiBvQXV0aC5leGVjdXRlKGdhcGkuY2xpZW50LnRlYW1zLmludml0ZXMucmVzcG9uZChpbnZpdGUpKTtcblx0fTtcblx0dGhpcy5nZXRUZWFtcyA9IGNhY2hlZEFwaUNhbGwoXCJnZXRfdGVhbXNcIiwgZ2FwaS5jbGllbnQudGVhbXMubGlzdC5hbGwoKSk7XG5cdHRoaXMuZ2V0TGVhZFRlYW1zID0gY2FjaGVkQXBpQ2FsbChcImdldF9sZWFkX3RlYW1zXCIsIGdhcGkuY2xpZW50LnRlYW1zLmxpc3QubGVhZGVyKCkpO1xuXHR0aGlzLmdldFByb2dyZXNzID0gY2FjaGVkVGVhbUFwaUNhbGwoXCJwcm9ncmVzc1wiLCBnYXBpLmNsaWVudC50ZWFtcy5wcm9ncmVzcyk7XG5cdHRoaXMuZ2V0U3dlZXBzID0gY2FjaGVkVGVhbUFwaUNhbGwoXCJzd2VlcFwiLCBnYXBpLmNsaWVudC50ZWFtcy5zd2VlcHMuZ2V0KTtcblx0dGhpcy5pbnNlcnRTd2VlcCA9IGZ1bmN0aW9uKHN3ZWVwKSB7XG5cdFx0cmV0dXJuIG9BdXRoLmV4ZWN1dGUoZ2FwaS5jbGllbnQudGVhbXMuc3dlZXBzLmluc2VydChzd2VlcCkpO1xuXHR9XG5cdHRoaXMuZGVsZXRlU3dlZXAgPSBmdW5jdGlvbihzd2VlcCkge1xuXHRcdHJldHVybiBvQXV0aC5leGVjdXRlKGdhcGkuY2xpZW50LnRlYW1zLnN3ZWVwcy5kZWxldGUoc3dlZXApKTtcblx0fVxuXHR0aGlzLmdldENvdXJzZXMgPSBjYWNoZWRBcGlDYWxsKFwiY291cnNlc1wiLCBnYXBpLmNsaWVudC50ZWFtcy5jb3Vyc2VzKCkpO1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ1RlYW1EaXJlY3RpdmVzJywgW10pXG4uZGlyZWN0aXZlKCd0ZWFtVGl0bGUnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0UnLFxuICAgIHNjb3BlOiB7XG4gICAgICB0ZWFtOiAnPSdcbiAgICB9LFxuICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy90ZWFtcy9wYXJ0aWFscy9jb21wb25lbnRzL3RlYW1fdGl0bGUuaHRtbCdcbiAgfTtcbn0pXG4uZGlyZWN0aXZlKCdyb3V0ZUxvYWRpbmdJbmRpY2F0b3InLCBbJyRyb290U2NvcGUnLCBmdW5jdGlvbigkcm9vdFNjb3BlKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFJyxcbiAgICB0ZW1wbGF0ZVVybDogJy9zdGF0aWMvdGVhbXMvcGFydGlhbHMvY29tcG9uZW50cy9sb2FkaW5nX3NwaW5uZXIuaHRtbCcsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0sIGF0dHJzKSB7XG5cbiAgICAgICRyb290U2NvcGUuJG9uKCckcm91dGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgICRyb290U2NvcGUuaXNSb3V0ZUxvYWRpbmcgPSB0cnVlO1xuICAgICAgfSk7XG5cbiAgICAgICRyb290U2NvcGUuJG9uKCckcm91dGVDaGFuZ2VTdWNjZXNzJywgZnVuY3Rpb24oKXtcbiAgICAgICAgJHJvb3RTY29wZS5pc1JvdXRlTG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufV0pXG4uZGlyZWN0aXZlKCdmaWxlQ2hhbmdlJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgcmVxdWlyZTogJ25nTW9kZWwnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgZmlsZUNoYW5nZTogJyYnXG4gICAgICB9LFxuICAgICAgbGluazogZnVuY3Rpb24gbGluayhzY29wZSwgZWxlbWVudCwgYXR0cnMsIGN0cmwpIHtcbiAgICAgICAgZWxlbWVudC5vbignY2hhbmdlJywgb25DaGFuZ2UpO1xuXG4gICAgICAgIHNjb3BlLiRvbignZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGVsZW1lbnQub2ZmKCdjaGFuZ2UnLCBvbkNoYW5nZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZ1bmN0aW9uIG9uQ2hhbmdlKCkge1xuICAgICAgICAgIGF0dHJzLm11bHRpcGxlID8gY3RybC4kc2V0Vmlld1ZhbHVlKGVsZW1lbnRbMF0uZmlsZXMpIDogY3RybC4kc2V0Vmlld1ZhbHVlKGVsZW1lbnRbMF0uZmlsZXNbMF0pO1xuICAgICAgICAgIHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNjb3BlLmZpbGVDaGFuZ2UoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG59KVxuLmZpbHRlcigncGVyY2VudGFnZScsIFsnJGZpbHRlcicsIGZ1bmN0aW9uICgkZmlsdGVyKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaW5wdXQsIGRlY2ltYWxzKSB7XG4gICAgcmV0dXJuICRmaWx0ZXIoJ251bWJlcicpKGlucHV0ICogMTAwLCBkZWNpbWFscykgKyAnJSc7XG4gIH07XG59XSlcbi5maWx0ZXIoJ3BlbmRpbmdTd2VlcHMnLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oaXRlbXMpIHtcbiAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgdmFyIGNvbXBhcmVEYXRlID0gbmV3IERhdGUoMCk7XG4gICAgICBjb21wYXJlRGF0ZS5zZXRGdWxsWWVhcihub3cuZ2V0RnVsbFllYXIoKSk7XG5cdCAgY29tcGFyZURhdGUuc2V0TW9udGgobm93LmdldE1vbnRoKCksIG5vdy5nZXREYXRlKCkpO1xuICAgICAgdmFyIGhvdXJOdW0gPSBub3cuZ2V0SG91cnMoKTtcbiAgICAgIHZhciBmaWx0ZXJlZCA9IFtdO1xuICAgICAgYW5ndWxhci5mb3JFYWNoKGl0ZW1zLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgIGlmKGl0ZW0uZHQuZ2V0VGltZSgpID4gY29tcGFyZURhdGUuZ2V0VGltZSgpIHx8IChpdGVtLmR0LmdldFRpbWUoKSA9PT0gY29tcGFyZURhdGUuZ2V0VGltZSgpICYmIGl0ZW0uaG91ck51bSA+IGhvdXJOdW0pKSB7XG4gICAgICAgICAgZmlsdGVyZWQucHVzaChpdGVtKTsgXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZpbHRlcmVkO1xuICAgIH07XG59KVxuLmZpbHRlcignZmlyZWRTd2VlcHMnLCBmdW5jdGlvbigpIHtcblx0cmV0dXJuIGZ1bmN0aW9uKGl0ZW1zKSB7XG5cdCAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7XG5cdCAgdmFyIGNvbXBhcmVEYXRlID0gbmV3IERhdGUoMCk7XG5cdCAgY29tcGFyZURhdGUuc2V0RnVsbFllYXIobm93LmdldEZ1bGxZZWFyKCkpO1xuXHQgIGNvbXBhcmVEYXRlLnNldE1vbnRoKG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpKTtcblx0ICB2YXIgaG91ck51bSA9IG5vdy5nZXRIb3VycygpO1xuXHQgIHZhciBmaWx0ZXJlZCA9IFtdO1xuXHQgIGFuZ3VsYXIuZm9yRWFjaChpdGVtcywgZnVuY3Rpb24oaXRlbSkge1xuXHQgICAgaWYoaXRlbS5kdC5nZXRUaW1lKCkgPCBjb21wYXJlRGF0ZS5nZXRUaW1lKCkgfHwgKGl0ZW0uZHQuZ2V0VGltZSgpID09PSBjb21wYXJlRGF0ZS5nZXRUaW1lKCkgJiYgaXRlbS5ob3VyTnVtIDw9IGhvdXJOdW0pKSB7XG5cdCAgICAgIGZpbHRlcmVkLnB1c2goaXRlbSk7XG5cdCAgICB9XG5cdCAgfSk7XG5cdCAgcmV0dXJuIGZpbHRlcmVkO1xuXHR9O1xufSk7XG4iLCIvKlxuXHRAbGljZW5zZSBBbmd1bGFyIFNuYWNrYmFyIHZlcnNpb24gMS4wLjFcblx04pOSIDIwMTUgVHlsZXIgUm9ja3dvb2QgaHR0cHM6Ly9naXRodWIuY29tL3JvY2t3b3RqL2FuZ3VsYXIuc25hY2tiYXJcblx0TGljZW5zZTogTUlUXG4qL1xuXG4hZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49YS5tb2R1bGUoXCJhbmd1bGFyLnNuYWNrYmFyXCIsW10pO24uZmFjdG9yeShcInNuYWNrYmFyXCIsW1wiJHJvb3RTY29wZVwiLGZ1bmN0aW9uKGEpe3JldHVybntjcmVhdGVXaXRoVGltZW91dDpmdW5jdGlvbihuLGUpe2EuJGJyb2FkY2FzdChcImNyZWF0ZVNuYWNrYmFyV2l0aFRpbWVvdXRcIix7Y29udGVudDpuLGR1cmF0aW9uOmV9KX0sY3JlYXRlOmZ1bmN0aW9uKG4sZSl7YS4kYnJvYWRjYXN0KFwiY3JlYXRlU25hY2tiYXJcIix7Y29udGVudDpuLGlkOmV9KX0scmVtb3ZlOmZ1bmN0aW9uKG4pe2EuJGJyb2FkY2FzdChcInJlbW92ZVNuYWNrYmFyXCIse2lkOm59KX19fV0pLG4uZGlyZWN0aXZlKFwic25hY2tiYXJcIixbXCIkcm9vdFNjb3BlXCIsXCIkY29tcGlsZVwiLFwiJHRpbWVvdXRcIixmdW5jdGlvbihuLGUsYyl7cmV0dXJuIGZ1bmN0aW9uKHQscixvKXt2YXIgcz1hLmVsZW1lbnQociksaT1vLnNuYWNrYmFyRHVyYXRpb258fDNlMyx1PW8uc25hY2tiYXJSZW1vdmVEZWxheXx8MjA7bi4kb24oXCJjcmVhdGVTbmFja2JhcldpdGhUaW1lb3V0XCIsZnVuY3Rpb24obixyKXt2YXIgbz0nPGRpdiBjbGFzcz1cInNuYWNrYmFyIHNuYWNrYmFyLW9wZW5lZFwiPjxzcGFuIGNsYXNzPVwic25hY2tiYXItY29udGVudFwiPicrci5jb250ZW50K1wiPC9zcGFuPjwvZGl2PlwiLGI9YS5lbGVtZW50KGUobykodCkpO3MuYXBwZW5kKGIpLGMoZnVuY3Rpb24oKXtiLnJlbW92ZUNsYXNzKFwic25hY2tiYXItb3BlbmVkXCIpLGMoZnVuY3Rpb24oKXtiLnJlbW92ZSgpfSx1LCExKX0sci5kdXJhdGlvbnx8aSwhMSl9KSxuLiRvbihcImNyZWF0ZVNuYWNrYmFyXCIsZnVuY3Rpb24obixjKXt2YXIgcj0nPGRpdiBjbGFzcz1cInNuYWNrYmFyIHNuYWNrYmFyLW9wZW5lZCBzbmFja2Jhci1pZC0nK2MuaWQrJ1wiPjxzcGFuIGNsYXNzPVwic25hY2tiYXItY29udGVudFwiPicrYy5jb250ZW50K1wiPC9zcGFuPjwvZGl2PlwiLG89YS5lbGVtZW50KGUocikodCkpO3MuYXBwZW5kKG8pfSksbi4kb24oXCJyZW1vdmVTbmFja2JhclwiLGZ1bmN0aW9uKG4sZSl7dmFyIGM9YS5lbGVtZW50KHNbMF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNuYWNrYmFyLWlkLVwiK2UuaWQpKTtjLnJlbW92ZUNsYXNzKFwic25hY2tiYXItb3BlbmVkXCIpLGMucmVtb3ZlKCl9KX19XSl9KGFuZ3VsYXIpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
