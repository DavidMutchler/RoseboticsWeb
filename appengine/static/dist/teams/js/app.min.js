CLIENT_ID="963009065087-2a5ccl5rhm4ghgm88li21fkjgsu5eua0@developer.gserviceaccount.com",SCOPES="https://www.googleapis.com/auth/userinfo.email",RESPONSE_TYPE="token id_token",init=function(){var o,a="//"+window.location.host+"/_ah/api";-1===window.location.host.indexOf("localhost")&&(a="https://roseboticsweb.appspot.com/_ah/api");var t=function(){0==--o&&angular.bootstrap(document,["TeamApp"])};o=2,gapi.client.load("teams","v1",t,a),gapi.client.load("oauth2","v2",t)};
"use strict";angular.module("TeamApp",["TeamControllers","ModalControllers","OverviewControllers","ManageControllers","TeamServices","InviteControllers","ui.bootstrap","ngRoute","TeamDirectives","angular.snackbar"]).config(["$routeProvider",function(e){e.when("/overview/",{templateUrl:"/static/teams/partials/overview.html",controller:"OverviewCtrl as overview"}).when("/preview/",{templateUrl:"/static/teams/partials/preview.html",controller:"PreviewCtrl as preview"}).when("/teams/",{templateUrl:"/static/teams/partials/teams.html",controller:"TeamsCtrl as teams",resolve:{teams:["api",function(e){return e.getTeams()}]}}).when("/teams/:team_key/courses",{templateUrl:"/static/teams/partials/teams_course.html",controller:"TeamsCourseCtrl as courses",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/teams/:team_key/courses/:course_name/tracks",{templateUrl:"/static/teams/partials/teams_track.html",controller:"TeamsTrackCtrl as tracks",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/teams/:team_key/courses/:course_name/tracks/:track_name/units",{templateUrl:"/static/teams/partials/teams_unit.html",controller:"TeamsUnitCtrl as units",resolve:{team:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).when("/invites/",{templateUrl:"/static/teams/partials/invites.html",controller:"InvitesCtrl as invites",resolve:{invites:["api",function(e){return e.getInvites()}]}}).when("/manage/",{templateUrl:"/static/teams/partials/manage.html",controller:"ManageCtrl as manage",resolve:{teams:["api",function(e){return e.getLeadTeams()}]}}).when("/manage/:team_key",{templateUrl:"/static/teams/partials/manage_team.html",controller:"ManageTeamCtrl as manage",resolve:{teams:["api",function(e){return e.getLeadTeams()}],user:["oAuth",function(e){return e.getUserInfo()}],courses:["api",function(e){return e.getCourses()}]}}).when("/manage/:team_key/sweeps",{templateUrl:"/static/teams/partials/manage_sweeps.html",controller:"SweepsTeamCtrl as sweeps",resolve:{teams:["api",function(e){return e.getLeadTeams()}],sweeps:["api","$route",function(e,t){return e.getSweeps(t.current.params)}],progress:["api","$route",function(e,t){return e.getProgress(t.current.params)}]}}).otherwise({redirectTo:"/overview/"})}]).run(["$rootScope","$location","oAuth","sidebar",function(e,t,r,a){angular.element(document.querySelectorAll(".hidden.container")).removeClass("hidden"),angular.element(document.querySelector("div.spinner")).addClass("hidden"),r.check().then(null,function(){t.path("/preview"),a.show.set(!1)})}]);
angular.module("InviteControllers",[]).controller("InvitesCtrl",["invites","api","snackbar",function(e,s,n){this.pending=[],this.accepted=[];var t=e.invites;void 0==t&&(t=[]);for(var i=0;i<t.length;i++)"NOT_CHOSEN"===t[i].response?this.pending.push(t[i]):this.accepted.push(t[i]);var r=this;this.editInvite=function(e,t){var i=!1;if("NOT_CHOSEN"===e.response&&"NOT_CHOSEN"!==t){for(var o=0;o<r.pending.length;o++)if(r.pending[o].team_key===e.team_key){r.pending.splice(o,1);break}r.accepted.push(e),i=!0}if("REJECT_INVITE"===t){for(var o=0;o<r.accepted.length;o++)if(r.accepted[o].team_key===e.team_key){r.accepted.splice(o,1);break}i=!0}e.response=t,n.create("Sending response...",4),s.editInvite(e).then(function(){n.remove(4),n.createWithTimeout("<b>Success!</b> Response saved"),i&&s.getTeams(!0)},function(){n.remove(4),n.createWithTimeout("<b>Error!</b> Response not saved")})},this.pendingResponses=["NOT_CHOSEN","ALL_MEMBERS","TEAM_LEADER","REJECT_INVITE"],this.acceptedResponses=["ALL_MEMBERS","TEAM_LEADER","REJECT_INVITE"],this.responseOptions={NOT_CHOSEN:"No response",ALL_MEMBERS:"All members can see my progress",TEAM_LEADER:"Only the leader can see my progress",REJECT_INVITE:"Reject invite and no one can see my progress"}}]);
angular.module("ManageControllers",[]).controller("ManageCtrl",["$modal","teams","api","snackbar","oAuth",function(e,t,r,o,s){this.items=t.teams;var a=this;this.toggleCreateTeamModal=function(){var n=e.open({templateUrl:"/static/teams/partials/modals/create_team_modal.html",controller:"CreateTeamModalInstanceCtrl",controllerAs:"modal",resolve:{user:function(){return s.getUserInfo()},courses:function(){return r.getCourses()}}});n.result.then(function(e){o.create("Creating team...",1),r.insertTeam(e).then(function(e){o.remove(1),o.createWithTimeout("<b>Success!</b> Team created"),void 0==t.teams&&(t.teams=[],a.items=t.teams),t.teams.push(e)},function(e){o.remove(1),o.createWithTimeout("<b>Error!</b> Team not created")})})}}]).controller("ManageTeamCtrl",["$routeParams","$modal","teams","$scope","snackbar","api","$location","user","courses",function(e,t,r,o,s,a,n,i,m){for(var l=r.teams,c=-1,u=0;u<l.length;u++)if(l[u].team_key==e.team_key){this.team=l[u],c=u;break}this.goToSweep=function(){n.path(n.path()+"/sweeps")},this.offeredCourses=m,console.log(m),this.getCourseTitle=function(e){for(var t=0;t<m.ids.length;t++)if(m.ids[t]===e)return m.titles[t];return""};var p=0,h=this,d=o.$watch(function(){return h.team},function(){p++,h.onInputMadeDirty(p)},!0);this.onInputMadeDirty=function(e){e>1&&(s.createWithTimeout("<b>Warning!</b> You must press submit to save your changes"),d())},this.deleteMember=function(e){for(var t=h.team.members,r=0;r<t.length;r++)if(t[r].email==e.email){t.splice(r,1);break}},this.saveTeam=function(){s.create("Saving team...",3),a.insertTeam(h.team).then(function(e){s.remove(3),s.createWithTimeout("<b>Success!</b> Team saved")},function(){s.remove(3),s.createWithTimeout("<b>Error!</b> Team not saved")})},this.toggleDeleteTeamModal=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/delete_team_modal.html",controller:"DeleteTeamModalInstanceCtrl",controllerAs:"modal"});e.result.then(function(){l.splice(u,1),s.create("Deleting team...",2),a.deleteTeam(h.team).then(function(){s.remove(2),s.createWithTimeout("<b>Success!</b> Team deleted")},function(){s.remove(2),s.createWithTimeout("<b>Error!</b> Team not deleted")}),n.path("/manage")})},this.toggleCreateMemberModal=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/create_member_modal.html",controller:"NewMemberModalInstanceCtrl",controllerAs:"modal"});e.result.then(function(e){var t={email:e,visibility:"NOT_CHOSEN"};void 0==h.team.members&&(h.team.members=[]),e==i.email&&(t.visibility="ALL_MEMBERS"),h.team.members.push(t),h.team.newMembers=!0})},this.visibilityOptions={NOT_CHOSEN:"No Response",ALL_MEMBERS:"Progress visible by everyone",TEAM_LEADER:"Progress visible by leader only"}}]).controller("SweepsTeamCtrl",["$routeParams","$modal","teams","sweeps","$location","progress","snackbar","api","$scope",function(e,t,r,o,s,a,n,i,m){var l=r.teams;this.sweeps=o.sweeps||[];var c=-1;this.today=new Date,this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"],this.done=function(){s.path("/manage/"+e.team_key)};for(var u=0;u<l.length;u++)if(l[u].team_key==e.team_key){this.team=l[u],c=u;break}for(var p=this,u=0;u<this.sweeps.length;u++){var h=this.sweeps[u];h.hourNum=parseInt(h.hour);var d=new Date(0);d.setFullYear(h.year),d.setMonth(parseInt(h.month)-1,parseInt(h.day)),h.dt=d}this.saveSweep=function(e){n.create("Saving Sweep...",6),e.hour=e.hourNum.toString(),e.year=e.dt.getFullYear().toString(),e.month=(e.dt.getMonth()+1).toString(),e.day=e.dt.getDate().toString(),i.insertSweep(e).then(function(e){n.remove(6),n.createWithTimeout("<b>Success!</b> Sweep saved")},function(){n.remove(6),n.createWithTimeout("<b>Error!</b> Sweep not saved")})},this.deleteSweep=function(e){n.create("Removing Sweep...",7),i.deleteSweep(e).then(function(){for(var t=0;t<p.sweeps.length;t++)if(e.sweep_key===p.sweeps[t].sweep_key){p.sweeps.splice(t,1);break}n.remove(7),n.createWithTimeout("<b>Success!</b> Sweep removed")},function(){n.remove(7),n.createWithTimeout("<b>Error!</b> Sweep not removed")})},this.stopEvent=function(e){e.preventDefault(),e.stopPropagation()},this.toggleImportSweepsDialog=function(){var e=t.open({templateUrl:"/static/teams/partials/modals/import_sweeps_modal.html",controller:"ImportSweepsModalInstanceCtrl",controllerAs:"modal",resolve:{teams:function(){return l}}});e.result.then(function(e){console.log(e),n.create("Importing from "+e.name+"...",10),i.getSweeps(e).then(function(e){if(console.log(e),!e.sweeps||!e.sweeps.length)return n.remove(10),void n.createWithTimeout("<b>Error!</b> There were no sweeps to import");for(var t=0;t<e.sweeps.length;t++){var r=e.sweeps[t];delete r.sweep_key,r.team_key=p.team.team_key,i.insertSweep(r).then(function(e){console.log(e),e.hourNum=parseInt(e.hour);var t=new Date(0);t.setFullYear(e.year),t.setMonth(parseInt(e.month)-1,parseInt(e.day)),e.dt=t,void 0==o.sweeps&&(o.sweeps=[],p.sweeps=o.sweeps);for(var r=!1,s=0;s<p.sweeps.length;s++)if(p.sweeps[s].dt.getTime()<e.dt.getTime()||p.sweeps[s].dt.getTime()===e.dt.getTime()&&p.sweeps[s].hourNum<e.hourNum){p.sweeps.splice(s,0,e),r=!0;break}r||p.sweeps.push(e)})}n.remove(10),n.createWithTimeout("<b>Success!</b> Sweeps Imported")},function(){n.remove(10),n.createWithTimeout("<b>Error!</b> Import failed")})})},this.toggleSweepOptionsModal=function(e){var r=t.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"SweepOptionsModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return a},optionString:function(){return e.options}}});r.result.then(function(t){e.options=t})},this.toggleCreateSweepDialog=function(){var r=t.open({templateUrl:"/static/teams/partials/modals/create_sweep_modal.html",controller:"NewSweepModalInstanceCtrl",controllerAs:"modal",resolve:{team_key:function(){return e.team_key},progress:function(){return a}}});r.result.then(function(e){n.create("Creating Sweep...",8),e.hour=e.hourNum.toString(),e.year=e.dt.getFullYear().toString(),e.month=(e.dt.getMonth()+1).toString(),e.day=e.dt.getDate().toString(),i.insertSweep(e).then(function(e){console.log(e),e.hourNum=parseInt(e.hour);var t=new Date(0);t.setFullYear(e.year),t.setMonth(parseInt(e.month)-1,parseInt(e.day)),e.dt=t,void 0==o.sweeps&&(o.sweeps=[],p.sweeps=o.sweeps);for(var r=!1,s=0;s<p.sweeps.length;s++)if(p.sweeps[s].dt.getTime()<e.dt.getTime()||p.sweeps[s].dt.getTime()===e.dt.getTime()&&p.sweeps[s].hourNum<e.hourNum){p.sweeps.splice(s,0,e),r=!0;break}r||p.sweeps.push(e),n.remove(8),n.createWithTimeout("<b>Success!</b> Sweep created")},function(){n.remove(8),n.createWithTimeout("<b>Error!</b> Sweep not created")})})}}]);
angular.module("ModalControllers",[]).controller("ModalToggleCtrl",["$modal",function(t){this.toggleSignOutModal=function(){t.open({templateUrl:"logout_modal.html",controller:"SimpleModalInstanceCtrl",controllerAs:"modal"})},this.toggleEditProfileModal=function(){t.open({templateUrl:"edit_profile_modal.html",controller:"SimpleModalInstanceCtrl",controllerAs:"modal"})}}]).controller("SimpleModalInstanceCtrl",["$modalInstance",function(t){this.cancel=function(){t.dismiss("cancel")}}]).controller("NewMemberModalInstanceCtrl",["$modalInstance","$controller",function(t,e){angular.extend(this,e("SimpleModalInstanceCtrl",{$modalInstance:t})),this.email="",this.addMember=function(e){return e=e.trim(),0===e.length?void t.dismiss("cancel"):(e.indexOf("@")<0&&(e+="@gmail.com"),void t.close(e))}}]).controller("DeleteTeamModalInstanceCtrl",["$modalInstance","$controller",function(t,e){angular.extend(this,e("SimpleModalInstanceCtrl",{$modalInstance:t})),this.remove=function(){t.close()}}]).controller("ImportSweepsModalInstanceCtrl",["$modalInstance","$controller","teams",function(t,e,n){angular.extend(this,e("SimpleModalInstanceCtrl",{$modalInstance:t})),this.teams=n,this.selectedTeam=n[0],this["import"]=function(){t.close(this.selectedTeam)}}]).controller("CreateTeamModalInstanceCtrl",["$modalInstance","$controller","user","courses",function(t,e,n,o){angular.extend(this,e("SimpleModalInstanceCtrl",{$modalInstance:t})),this.teamName="",this.teamMembers="",this.includeLeader=!1;var s=this;this.courses=angular.copy(o.ids),this.offeredCourses=o,this.getCourseTitle=function(t){for(var e=0;e<o.ids.length;e++)if(o.ids[e]===t)return o.titles[e];return""},this.add=function(){for(var e={name:s.teamName,leader:n.email,members:[],courses:s.courses},o=s.teamMembers.split(","),l=0;l<o.length;l++){var r=o[l].trim();0!==r.length&&(r.indexOf("@")<0&&(r+="@gmail.com"),e.members.push({email:r,visibility:"NOT_CHOSEN"}))}s.includeLeader&&e.members.push({email:n.email,visibility:"ALL_MEMBERS"}),t.close(e)}}]).controller("ExportModalParentCtrl",["$modalInstance","$controller","team","$window",function(t,e,n){angular.extend(this,e("SimpleModalInstanceCtrl",{$modalInstance:t})),this.team=n,this.fullname=!0,this.username=!0,this.hasTimestamp=!0,this.pointValue="points",this.pointsPerUnit=parseInt(localStorage.getItem("ppu"))||1,this.pointsPerTask=parseInt(localStorage.getItem("ppt"))||1,this.includeCourseProgress=!1,this.includeTrackProgress=!1,this.timezone="EST",this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"];this.generate=function(){var t="team_urlsafe="+n.team_key;this.fullname&&(t+="&student_name=true"),this.username&&(t+="&rose_username=true"),this.hasTimestamp&&(t+="&timezone="+this.timezone),this.includeCourseProgress&&(t+="&course_progress=true"),this.includeTrackProgress&&(t+="&track_progress=true"),"points"===this.pointValue?(t+="&ppu="+this.pointsPerUnit,localStorage.setItem("ppu",this.pointsPerUnit)):(t+="&ppt="+this.pointsPerTask,localStorage.setItem("ppt",this.pointsPerTask)),this.onPostGenerate(t)}}]).controller("ExportModalInstanceCtrl",["$modalInstance","$controller","team","$window",function(t,e,n,o){angular.extend(this,e("ExportModalParentCtrl",{$modalInstance:t,$controller:e,team:n})),this.onPostGenerate=function(e){var n="http://"+o.location.host+"/teams/export.csv?";o.open(n+encodeURI(e),"_blank"),t.close()},this.doneButtonText="Generate"}]).controller("NewSweepModalInstanceCtrl",["$modalInstance","$controller","team_key","$modal","progress",function(t,e,n,o,s){angular.extend(this,e("SimpleModalInstanceCtrl",{$modalInstance:t})),this.sweep={dt:new Date,team_key:n,options:"",hourNum:12,tz:"EST"},this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"],this.today=new Date,this.stopEvent=function(t){t.preventDefault(),t.stopPropagation()},this.addSweep=function(){t.close(this.sweep)};var l=this;this.toggleSweepOptionsModal=function(){var t=o.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"SweepOptionsModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return s},optionString:function(){return l.sweep.options}}});t.result.then(function(t){l.sweep.options=t})}}]).controller("SweepOptionsModalInstanceCtrl",["$modalInstance","$controller","team","optionString",function(t,e,n,o){if(angular.extend(this,e("ExportModalParentCtrl",{$modalInstance:t,$controller:e,team:n})),this.onPostGenerate=function(e){t.close(e)},this.doneButtonText="Done",""!==o){var s={};o=o.split("&");for(var l=0;l<o.length;l++){var r=o[l].split("=");s[r[0]]=r[1]}this.fullname="true"===s.student_name,this.username="true"===s.rose_username,this.hasTimestamp=void 0!=s.timezone,this.pointValue=s.ppu?"points":"tasks",this.pointsPerUnit=parseInt(s.ppu)||parseInt(localStorage.getItem("ppu"))||1,this.pointsPerTask=parseInt(s.ppt)||parseInt(localStorage.getItem("ppt"))||1,this.includeCourseProgress="true"===s.course_progress,this.includeTrackProgress="true"===s.track_progress,this.timezone=s.timezone||"EST",this.timezones=["UTC","PDT","MDT","CDT","EDT","PST","MST","CST","EST"]}}]);
angular.module("OverviewControllers",[]).controller("OverviewCtrl",function(){}).controller("PreviewCtrl",["oAuth","$location","sidebar","$rootScope","snackbar","userEmail",function(t,e,o,n,r,i){t.check().then(function(){e.path("/overview"),o.show.set(!0),n.$apply()}),this.signup=function(){t.signup().then(function(){t.getUserInfo().then(function(t){t.email!==i&&r.createWithTimeout("<b>Danger!</b> Signing up for teams with another account may cause errors!",6e3)}),e.path("/overview"),o.show.set(!0)},function(){r.createWithTimeout("<b>Error!</b> Sign up failed")})}}]).controller("SidebarCtrl",["sidebar","$location","$scope",function(t,e,o){this.routes=t.routes,this.show=t.show.get();var n=this;o.$watch(function(){return t.show.get()},function(t){n.show=t}),this.isActive=function(t){var o=e.path();return t=t.substring(1),o.startsWith(t)}}]);
angular.module("TeamControllers",[]).controller("TeamsCtrl",["$modal","teams",function(r,e){this.items=e.teams}]).controller("TeamsParentCtrl",["$modal","team",function(r,e){this.toggleExportProgressModal=function(){r.open({templateUrl:"/static/teams/partials/modals/export_progress_modal.html",controller:"ExportModalInstanceCtrl",controllerAs:"modal",resolve:{team:function(){return e}}})}}]).controller("TeamsCourseCtrl",["$modal","team","$controller",function(r,e,s){if(angular.extend(this,s("TeamsParentCtrl",{$modal:r,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.courses=[],e.members_progress.length>0){courses=e.members_progress[0].course_progress;for(var t=0;t<courses.length;t++)this.courses.push(courses[t].name)}}]).controller("TeamsTrackCtrl",["$routeParams","team","$modal","$controller",function(r,e,s,t){if(angular.extend(this,t("TeamsParentCtrl",{$modal:s,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.course=r.course_name,this.tracks=[],e.members_progress.length>0)for(var o=e.members_progress[0].course_progress,a=0;a<o.length;a++)if(o[a].name===this.course){this.courseNum=a;for(var m=o[a].track_progress,n=0;n<m.length;n++)this.tracks.push(m[n].name);break}var l=this;this.getProgressForMemberTrack=function(r,e){return r.course_progress[l.courseNum].track_progress[e].progress}}]).controller("TeamsUnitCtrl",["$routeParams","team","$modal","$controller",function(r,e,s,t){if(angular.extend(this,t("TeamsParentCtrl",{$modal:s,team:e})),this.team=e,void 0==e.members_progress&&(this.team.members_progress=[]),this.course=r.course_name,this.track=r.track_name,this.units=[],e.members_progress.length>0)for(var o=e.members_progress[0].course_progress,a=0;a<o.length;a++)if(o[a].name===this.course){this.courseNum=a;for(var m=o[a].track_progress,n=0;n<m.length;n++)if(m[n].name===this.track){this.trackNum=n;for(var l=m[n].unit_progress,i=0;i<l.length;i++)this.units.push(l[i].name);break}break}var c=this;this.getProgressForMemberUnit=function(r,e){return r.course_progress[c.courseNum].track_progress[c.trackNum].unit_progress[e].progress}}]);
angular.module("TeamServices",[]).factory("sidebar",function(){var e=!0;return{routes:[{name:"Overview",href:"#/overview/"},{name:"Teams",href:"#/teams/"},{name:"Invites",href:"#/invites/"},{name:"Manage",href:"#/manage/"}],show:{get:function(){return e},set:function(t){e=t}}}}).factory("userEmail",["$rootScope",function(e){return e.userEmail}]).service("oAuth",["$q","$location",function(e,t){var i=function(t){return function(){var i=e.defer();return gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:t},function(e){e.error?i.reject(e):i.resolve(e)}),i.promise}};this.signup=i(!1),this.check=i(!0),this.execute=function(t){var i=e.defer();return gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:!0},function(){t.execute(function(e){e.code?i.reject(e):i.resolve(e.result)})}),i.promise},this.getUserInfo=function(){return this.execute(gapi.client.oauth2.userinfo.get())}}]).service("api",["oAuth","$q",function(e,t){var i={};this.deleteCache=function(){i={}};var n=function(n,r){return function(s){var a=t.defer();return void 0!=i[n]&&void 0==s?(a.resolve(i[n]),a.promise):(e.execute(r).then(function(e){i[n]=e,a.resolve(e)},function(e){a.reject(e)}),a.promise)}},r=function(n,r){return function(s){var a=t.defer();return void 0!=i[n+s.team_key]?(a.resolve(i[n+s.team_key]),a.promise):(e.execute(r(s)).then(function(e){i[n+s.team_key]=e,a.resolve(e)},function(e){a.reject(e)}),a.promise)}};this.deleteTeam=function(t){if(void 0!=i.get_teams)for(var n=i.get_teams.teams,r=0;r<n.length;r++)if(t.team_key==n[r].team_key){n.splice(r,1);break}return e.execute(gapi.client.teams["delete"](t))},this.insertTeam=function(n){var r=t.defer(),s=void 0!=i.get_teams,a=void 0,o=void 0==n.team_key;return s&&(a=i.get_teams.teams,void 0==a&&(i.get_teams.teams=[],a=i.get_teams.teams)),e.execute(gapi.client.teams.insert(n)).then(function(e){if(s)if(o)a.push(e);else for(var t=0;t<a.length;t++)if(e.team_key===a[t].team_key){a[t]=e;break}r.resolve(e)},function(e){r.reject(e)}),r.promise},this.getInvites=n("get_invites",gapi.client.teams.invites.list()),this.editInvite=function(t){return e.execute(gapi.client.teams.invites.respond(t))},this.getTeams=n("get_teams",gapi.client.teams.list.all()),this.getLeadTeams=n("get_lead_teams",gapi.client.teams.list.leader()),this.getProgress=r("progress",gapi.client.teams.progress),this.getSweeps=r("sweep",gapi.client.teams.sweeps.get),this.insertSweep=function(t){return e.execute(gapi.client.teams.sweeps.insert(t))},this.deleteSweep=function(t){return e.execute(gapi.client.teams.sweeps["delete"](t))},this.getCourses=n("courses",gapi.client.teams.courses())}]);
angular.module("TeamDirectives",[]).directive("teamTitle",function(){return{restrict:"E",scope:{team:"="},templateUrl:"/static/teams/partials/components/team_title.html"}}).directive("routeLoadingIndicator",["$rootScope",function(e){return{restrict:"E",templateUrl:"/static/teams/partials/components/loading_spinner.html",link:function(t,n,r){e.$on("$routeChangeStart",function(){e.isRouteLoading=!0}),e.$on("$routeChangeSuccess",function(){e.isRouteLoading=!1})}}}]).filter("percentage",["$filter",function(e){return function(t,n){return e("number")(100*t,n)+"%"}}]).filter("pendingSweeps",function(){return function(e){var t=new Date,n=new Date(0);n.setFullYear(t.getFullYear()),n.setMonth(t.getMonth(),t.getDate());var r=t.getHours(),i=[];return angular.forEach(e,function(e){(e.dt.getTime()>n.getTime()||e.dt.getTime()===n.getTime()&&e.hourNum>r)&&i.push(e)}),i}}).filter("firedSweeps",function(){return function(e){var t=new Date,n=new Date(0);n.setFullYear(t.getFullYear()),n.setMonth(t.getMonth(),t.getDate());var r=t.getHours(),i=[];return angular.forEach(e,function(e){(e.dt.getTime()<n.getTime()||e.dt.getTime()===n.getTime()&&e.hourNum<=r)&&i.push(e)}),i}});
!function(a){"use strict";var n=a.module("angular.snackbar",[]);n.factory("snackbar",["$rootScope",function(a){return{createWithTimeout:function(n,e){a.$broadcast("createSnackbarWithTimeout",{content:n,duration:e})},create:function(n,e){a.$broadcast("createSnackbar",{content:n,id:e})},remove:function(n){a.$broadcast("removeSnackbar",{id:n})}}}]),n.directive("snackbar",["$rootScope","$compile","$timeout",function(n,e,c){return function(t,r,o){var s=a.element(r),i=o.snackbarDuration||3e3,u=o.snackbarRemoveDelay||20;n.$on("createSnackbarWithTimeout",function(n,r){var o='<div class="snackbar snackbar-opened"><span class="snackbar-content">'+r.content+"</span></div>",b=a.element(e(o)(t));s.append(b),c(function(){b.removeClass("snackbar-opened"),c(function(){b.remove()},u,!1)},r.duration||i,!1)}),n.$on("createSnackbar",function(n,c){var r='<div class="snackbar snackbar-opened snackbar-id-'+c.id+'"><span class="snackbar-content">'+c.content+"</span></div>",o=a.element(e(r)(t));s.append(o)}),n.$on("removeSnackbar",function(n,e){var c=a.element(s[0].getElementsByClassName("snackbar-id-"+e.id));c.removeClass("snackbar-opened"),c.remove()})}}])}(angular);
//# sourceMappingURL=data:application/json;base64,
