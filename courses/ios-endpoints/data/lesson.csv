unit_id,unit_title,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_objectives
1,Intro to AppEngine,1,AppEngine Overview,yes,Questions,https://docs.google.com/presentation/d/1SzS6vb0Hqm2s5Ct7PkKh15BY47x9MU4rTJ9spM7xjxM/edit?usp=sharing,z9NYt5v32Zs,"<ul><li>AppEngine is a tool for...</li><li style='margin-left: 30px'>Serving your web apps to the world</li><li style='margin-left: 30px'>Creating APIs for your iOS and Android apps to sync data with the Google Cloud Platform</li><li>Fair warning: When I say the word 'AppEngine' I really mean AppEngine + the Datastore + Endpoints.  It's shorter to simply say 'AppEngine' and mean all three.</li></ul>"
1,Intro to AppEngine,2,Install Test Lab,yes,Questions,https://docs.google.com/document/d/1lzetitdvee5NLJLwa4P88GincZQbNGJcy52RHe9Yc0E/edit?usp=sharing,Np8dMizzunQ,"<ul><li>Here is the <a target='_blank' href='https://docs.google.com/document/d/1lzetitdvee5NLJLwa4P88GincZQbNGJcy52RHe9Yc0E/edit?usp=sharing'>link to the Installation Lab</a></li><li>You will install Eclipse, Python 2.7, the Python Google AppEngine SDK, and the PyDev Eclipse plugin</li><li>After you install the tools you'll register an AppEngine app at <a target='_blank' href='http://console.developers.google.com'>http://console.developers.google.com</a></li><li>Then you'll prove your tools work by deploying a VERY simple AppEngine app</li></ul>"
2,EndpointsBackend,1,Endpoints Overview,,,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,9eezD6XW0K4,"<ul><li>In this lesson you will what Endpoints is and get an overview of the process of creating an Endpoints API.</li></ul>"
2,EndpointsBackend,2,The Road to Learning Endpoints,,,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,UoNVZrP46kw,"<ul><li>In this lesson you will get a high-level overview of the next 2 units.</li><li>Link to the <a href='https://docs.google.com/file/d/0B0fYpl3FdcbZUjIwYkt2aUhheVU' target='_blank'>summary</a>. </li></ul>"
2,EndpointsBackend,3,Setup,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,clms0SvmeHA,"<ul><li>In this lesson, you will register your app ID, set up your project using App Engine Launcher and Eclipse, and run and deploy the starting code.</li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,4,Backend Model,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,BnKindG0L-g,"<ul><li>In this lesson, we'll set up the MovieQuotes model object.</li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,5,MovieQuotes Web App,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,8Q5MRtu_-mo,"<ul><li>In this lesson, we'll test our model using a simple web app we give you.</li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,6,Endpoints API: Create,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,r_tMJcqnNUY,"<ul><li>In this lesson, you will learn how to add a model object to the ndb datastore. </li><li>In the video we'll add the <b>hostname</b> field to the annotation.</li></ul><div style='bulletstyle: none; text-align: center; font: bold 18px Arial; color: red;'>DO NOT ADD THE HOSTNAME FIELD!</div><ul><li>When the video was made it was fine to add hostname='blah', but now you should not have the hostname field at all (just leave it out).  There have been changes to Endpoints since the video was made.  If you do what the video does then it won't let you do localhost API Explorer testing, which we'll need later!</li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,7,Endpoints API: Read,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,ewaKFNSAvq4,"<ul><li>In this lesson, you will learn how to write simple query for an EndpointsModel.</li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,8,Endpoints API: Update,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,D3LqswTqaf0,"<ul><li>In this lesson, </li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,9,Endpoints API: Delete,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,t7QEL7MQ1zk,"<ul><li>In this lesson, you will learn how to remove objects from the datastore. </li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,10,Deploying to App Engine,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,PFGPaUYQzEg,"<ul><li>In this lesson, we'll deploy our app to App Engine and test the API of the live version. This is the last step before working on the client.</li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,11,Troubleshooting and Viewing Data,yes,Questions,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,pRXZr6O3lto,"<ul><li>In this lesson, we'll see where to find the datastore and the logs when testing online. </li><li>Link to <a href='https://docs.google.com/document/d/1mgcc4fBaMCpo2-nJFjsWjNWsj239mpa-LDEN7p7MWoE' target='_blank'>instructions doc</a>. </li></ul>"
2,EndpointsBackend,12,Lab: WeatherpicsBackend,,,https://docs.google.com/presentation/d/1FjzwS8xLvCmtznYU3asEqwiSJA6KEq0X9GbWPntM2H8,XDSYoMPPfWI,"<ul><li>Here is the <a href='https://docs.google.com/document/d/1_aANt_3DM2uGvDhllatRiZUK9bzKiwYoarOL_P2N1zU' target='_blank'>lab specification</a>.</li><li>When done, be sure to submit your zipped Eclipse project (Weatherpics Backend), plus video demo, to the Moodle dropbox.</li><li>We'll wait until after we write the Android client to complete the 'Endpoints' self-evaluation survey.</li></ul>"
3,Endpoints iOS Client,1,iOS Client Intro,yes,Questions,https://docs.google.com/presentation/d/1KReh7ERfT7tjeZ4mz4qPJOyNbC0UXO6P3x8B4U9ROzM/edit?usp=sharing,r4ZX7z5cJR0,"<ul><li>In this unit we'll make an iOS app that communicates with the MovieQuotes Endpoints API</li><li>Make sure your Endpoints API explorer works https://yourusername-movie-quotes.appspot.com/_ah/api/explorer</li><li>Start your localhost backend as well.  We'll talk to both from the iOS client later in the unit.</li></ul>"
3,Endpoints iOS Client,2,Generating Client Code Step #1: Frameworks,yes, Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,hUC0cpAy-Pg,"<ul><li><a href='https://docs.google.com/document/d/1_V6-Rs8DxRcbovUSTfrQOoaZZT73B40tkaByJyilVp4/edit?usp=sharing'>Generation client code</a> is kinda the whole point of using Endpoints instead of some other API tool.</li><li>The first step is to add a few built-in iOS Frameworks (easy)</li><li>It's also nice to make a few placeholder folders for steps 2 and 3 (coming soon)</li></ul>"
3,Endpoints iOS Client,3,Generating Client Code Step #2: GTL Client Library,yes,Questions,https://docs.google.com/document/d/1_V6-Rs8DxRcbovUSTfrQOoaZZT73B40tkaByJyilVp4/edit?usp=sharing,93dtzwuhEjw,"<ul><li><a href='https://docs.google.com/document/d/1_V6-Rs8DxRcbovUSTfrQOoaZZT73B40tkaByJyilVp4/edit?usp=sharing'>Generation client code step #2</a> is just to copy in some code files (about 50 files)</li><li>We'll copy these files from a Google made project called GTL</li><li>Google made this code before ARC was around so you need to tell the compiler -fno-objc-arc</li><li>These 50 files are the exact some regardless of what Endpoints backend you are talking to.</li></ul>"
3,Endpoints iOS Client,4,Generating Client Code Step #3: MovieQuotes API,yes,Questions,https://docs.google.com/document/d/1_V6-Rs8DxRcbovUSTfrQOoaZZT73B40tkaByJyilVp4/edit?usp=sharing,1HF4WB3yZts,"<ul><li><a href='https://docs.google.com/document/d/1_V6-Rs8DxRcbovUSTfrQOoaZZT73B40tkaByJyilVp4/edit?usp=sharing'>Generation client code step #3</a> is a two step process...</li><li>3A: Get the discovery doc via <i>endpointscfg.py get_discovery_doc -f rpc api_filename.api_classname</i></li><li>3B: Feed the discovery doc into the ServiceGenerator executable via <i>/path/ServiceGenerator ./discovery_doc_file --outputDir ./outputDirectory</i></li><li>Then copy the files (other than Sources.m) into your X-Code project.</li><li>It's hard the first time, but it'll get easier.</li></ul>"
3,Endpoints iOS Client,5,Service Object,yes,Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,1h0y4YFyttI,"<ul><li>The first step in using the generated client code is to make a service object.</li><li>In this case the class name for the service object is GTLServiceMoviequotes since it is a service specifically generated for the Moviequotes API</li><li>Your service object has a variable called rpcUrl.  Change the rpcUrl and the service object will talk to a different backend (for example deployed or localhost)</li></ul>"
3,Endpoints iOS Client,6,CRUD: Read,yes,Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,gw4j14eixOA,"<ul><li>The first Moviequotes API method we will call is the moviequotes.moviequote.list method.  It uses a GET request to return a JSON list of Moviequotes.</li><li>All Endpoints methods follow the same format:<ul><li>Make a query object</li><li>Use the service object to execute the query</li><li>Use a callback block to handle the response</li></ul></li><li>When the response comes back (think about it, it goes to like Atlanta and back in 2 seconds) use the data to populate the list.</li></ul><script src='https://gist.github.com/fisherds/f78046a14b904870e3c8.js'></script>"
3,Endpoints iOS Client,7,Refresh Control,yes, Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,c9LUMYMdPhE,"<ul><li>Apple has made a simple way to pull down on a table to refresh the data.</li><li>A UIRefreshControl is built-in to a UITableViewController as the refreshControl property.</li><li>Setup the refreshControl to call a function and make sure that endRefreshing is called when the refresh task is complete.</li></ul>"
3,Endpoints iOS Client,8,CRUD: Create,yes,Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,kkppTveBDsY,"<ul><li>This time we'll make a POST request to insert a new quote (remember list used a GET request).</li><li>A new quote sends up a MovieQuote with only a <b>quote</b> and <b>movie</b> field.</li><li>When the quote comes back in the response the backend adds the <b>last_touch_date_time</b> property and an <b>entityKey</b> (since it now exist in the backend datastore).</li><li>When the response comes back we set the entityKey on the quote so that it can later be edited or deleted.</li><li>We'll have to make a silly hack for localhost to work with POST requests (oh well).</li></ul><script src='https://gist.github.com/fisherds/0892f64f6998c43807e2.js'></script>"
3,Endpoints iOS Client,9,CRUD: Delete,yes,Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,rntg0HvHdao,"<ul><li>This time we'll make a DELETE request to remove a MovieQuote using its entityKey.</li><li>DELETE is functionally identical to GET (it's just a URL with no body), but GET should never modify the data, so we use a DELETE instead. (there are also ways to remove data via POST as well, but on the backend we chose DELETE instead).</li><li>Our implementation will delete the quote immediately on the client, so no action is needed after the response comes back.</li></ul><script src='https://gist.github.com/fisherds/11c237ecc4480459c4e2.js'></script>"
3,Endpoints iOS Client,10,CRUD: Update,yes,Questions,https://docs.google.com/document/d/1mtXjdQFCFIMwvv3Fc15JcF599t0s425ghkKx4XeMPag/edit?usp=sharing,YK0R79oDObQ,"<ul><li>We'll update the quote from the RHDetailViewController (when the user is looking at only that quote)</li><li>In order to do an update, RHDetailViewController will need the service object.  So we'll pass the service and kLocalhostTesting bool into the detail view before the segue.</li><li>An update is VERY similar to a create (they both use the moviequotes.moviequote.insert method).  The only difference is that the MovieQuote already has an entityKey when you do an update.</li></ul><script src='https://gist.github.com/fisherds/9b82adc4a7044b5e3a65.js'></script>"
3,Endpoints iOS Client,11,Lab: Weatherpics iOS Client,yes,Questions,https://docs.google.com/document/d/1uX6rp__4a9dRFirrETZ8Zm1wzJ5Gh9oCWlm51b4Pvlc/edit?usp=sharing,3vzw1Qdpfuk,"<ul><li>For this unit's lab you'll be making an iOS Client for the Weatherpics backend (from scratch)</li><li>You can find the lab instructions at this <a href='https://docs.google.com/document/d/1uX6rp__4a9dRFirrETZ8Zm1wzJ5Gh9oCWlm51b4Pvlc/edit?usp=sharing'> Google Doc</a></li><li>There is a checklist at the end of the doc for the app requirements.</li></ul>"
4,OAuthBackend,1,OAuth Overview,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,g_TJZL0bTYc,"<ul><li>In this lesson you will see a demo of this lesson's app, and learn how this app is more complex than ones in previous units.</li></ul>"
4,OAuthBackend,2,DownloadStartingCode,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,Im0i3vF7Dh8,"<ul><li>In this lesson, you will register your app ID and download the starting code.</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,3,Make Endpoints-ready Models,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,bscA5ck3cS8,"<ul><li>In this lesson, we'll modify the given model classes to make them ready for Endpoints.</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,4,APIClass,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,Vsm2Mcq5kXc,"<ul><li>In this lesson, we'll start to write the API, focusing on those things that are required to use OAuth.</li><li>At around 3 minutes into the video we'll add the <b>hostname</b> field to the annotation.</li></ul><div style='bulletstyle: none; text-align: center; font: bold 18px Arial; color: red;'>DO NOT ADD THE HOSTNAME FIELD!</div><ul><li>When the video was made it was fine to add hostname='blah', but now you should not have the hostname field at all (just leave it out).  There have been changes to Endpoints since the video was made.  If you do what the video does then it won't let you do localhost API Explorer testing, which we'll need later!</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,5,GetWebClientID,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,9tcqIosycjA,"<ul><li>In this lesson, you will learn how to generate a client ID for your web app.</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,6,ListMethods,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,WIElgnq8LgU,"<ul><li>In this lesson, you will learn how to change the annotation for a method to require an authenticated user.</li><li>You'll also learn how to write an ancestor query (to get all records with the same parent key).</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,7,InsertMethods,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,LUTva2dinUU,"<ul><li>In this lesson, we'll write the two needed insert methods. </li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,8,DeleteMethods,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,0PffywYS46I,"<ul><li>In this lesson, we'll write the two needed delete methods</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,9,Deploying to App Engine and Test,yes,Questions,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,7oR2M0MQYrA,"<ul><li>In this lesson, we'll deploy our app to App Engine and test the API of the live version. This is the last step before working on the client.</li><li>Link to <a href='https://docs.google.com/document/d/12o1Ak3vRXfXS1uWRcvvsMlPkFNvJR9DK9dAmGWf2I5o' target='_blank'>instructions doc</a>. </li></ul>"
4,OAuthBackend,10,Summary and Troubleshooting,,,https://docs.google.com/presentation/d/17xT5oWnnHasgv3vfhVHNR9nIVTi4fOyk83DH7Y1-xKs,tOVXw45Ef40,"<ul><li>There is no lab in this unit. If you want to use OAuth in your project, you are ready!</li><li>We'll wait until after we write the Android client to complete the 'OAuth' self-evaluation survey.</li></ul>"
5,Endpoints with OAuth iOS Client,1,Demo and Overview,yes,Questions,https://docs.google.com/presentation/d/1RKrNrfipsX8FaUg55DPhSuUZgLn4S7B-pKKoQxH-kao/edit?usp=sharing,Wqu34NvYwRM,"<ul><li>In this unit we'll be making an iOS app that uses Authentication (OAuth)</li><li>OAuth allows a user to sign in so that an app can make queries for their non-public data</li><li>The <b>Service</b> Object is still the key ingredient to executing Endpoints requests, but...</li><li>The service object can't make authenticated calls without the <b>Authorizer</b> (the key ingredient to iOS OAuth)</li><li>We'll also have to learn about Client IDs before we can make authenticated calls (which are used when creating the Authorizer)</li></ul>"
5,Endpoints with OAuth iOS Client,2,Client IDs,yes,Questions,https://docs.google.com/presentation/d/1RKrNrfipsX8FaUg55DPhSuUZgLn4S7B-pKKoQxH-kao/edit?usp=sharing,Xv3T7qyOoNY,"<ul><li>Client IDs are a security mechanism used to protect your backend from untrusted clients.</li><li>You make a Client ID in the <a href='https://console.developer.google.com' target='_blank'>Developer Console</a> then you put that number in your backend and client app</li><li>If the numbers match then the server knows it is safe to give information to this client.</li><li>Here is the link to the iOS starting code <a target='_blank' href='https://github.com/RoseMobileEndpoints/GradeRecorderiOSClient'>GradeRecorderiOSClient</a></li></ul>"
5,Endpoints with OAuth iOS Client,3,Generate client code,yes,Questions,https://docs.google.com/presentation/d/1RKrNrfipsX8FaUg55DPhSuUZgLn4S7B-pKKoQxH-kao/edit?usp=sharing,-CdWBktCACk,"<ul><li>Our <a href='https://docs.google.com/document/d/1_V6-Rs8DxRcbovUSTfrQOoaZZT73B40tkaByJyilVp4/edit?usp=sharing'>generation client code steps</a> are the exact same with or without OAuth</li><li>Step #1 is to add a few built-in iOS Frameworks (Security and SystemConfiguration)</li><li>Step #2</a> adds files from the GTL Client Library, then add compiler flag -fno-objc-arc</li><li>Step #3 is a two step process...</li><li>3A: Get the discovery doc via <i>endpointscfg.py get_discovery_doc -f rpc api_filename.api_classname</i></li><li>3B: Feed the discovery doc into the ServiceGenerator executable via <i>/path/ServiceGenerator ./discovery_doc_file --outputDir ./outputDirectory</i></li></ul>"
5,Endpoints with OAuth iOS Client,4,Sign In / Sign Out,yes,Questions,https://docs.google.com/document/d/12nDzFj52a64GTX3MXKoyUCE7O0SIfm_kE_aqHIXpF5Q/edit?usp=sharing,PG9kE5lqcac,"<ul><li>When a user clicks the 'Sign in with Google' button, we'll show a web view (within a nav controller) to allow users to sign in.</li><li>The web view is made by Google and we pass in our Client ID and Client Secret.</li><li>When the web view finishes it calls us back, giving us the Authorizer!</li><li>Eventually we'll need to apply this Authorizer on the service, but that won't happen in this video. :)</li></ul><script src='https://gist.github.com/fisherds/0a090018b2e617840908.js'></script>"
5,Endpoints with OAuth iOS Client,5,Service and Authorizer,yes,Questions,https://docs.google.com/document/d/12nDzFj52a64GTX3MXKoyUCE7O0SIfm_kE_aqHIXpF5Q/edit?usp=sharing,n46MKZbeuug,"<ul><li>We'll start by creating a GTLServiceGraderecorder object (the specific name of our Service object)</li><li style='margin-left: 30px;'>Note the <b>NEW</b> line of code within the kLocalHostTesting area that was not required before.</li><li>Once we have a service we'll set its .authorizer property to the Authorizer</li><li>The Authorizer will then magically bless all Service requests with the appropriate auth token to get user data</li><li>An Authorizer is saved in the Keychain for you by Google's code.</li><li>The second time a user launches the app we'll use the saved authorizer to avoid forcing a user to retype their password.</li><li>To prepare for localhost testing (coming later) we set a flag on the authorizer</li></ul><script src='https://gist.github.com/fisherds/5dd61c305289a264c883.js'></script>"
5,Endpoints with OAuth iOS Client,6,Query for Students,yes,Questions,https://docs.google.com/document/d/12nDzFj52a64GTX3MXKoyUCE7O0SIfm_kE_aqHIXpF5Q/edit?usp=sharing,0iH8kX_gro0,"<ul><li>Most of this app is finished, but we wanted to do at least one query to practice <b>using</b> the Service object with the Authorizer</li><li>Additionally this time we'll start using pageTokens correctly if there is more data available in the list.</li><li>We'll also had a callback so that we can notify the caller when all queries are complete.</li></ul><script src='https://gist.github.com/fisherds/4cd2dde07a7d4e9b0bed.js'></script>"
5,Endpoints with OAuth iOS Client,7,localhost development,yes,Questions,https://docs.google.com/document/d/12nDzFj52a64GTX3MXKoyUCE7O0SIfm_kE_aqHIXpF5Q/edit?usp=sharing,X9yqjmvTlXM,"<ul><li>When using localhost + OAuth you need to add a Python package called PyCrypto (Python Cryptography Toolkit)</li><li>Installing PyCrypto is a simple download and two commands.  See the <a href='https://docs.google.com/document/d/12nDzFj52a64GTX3MXKoyUCE7O0SIfm_kE_aqHIXpF5Q/edit#heading=h.rqnli4xb5bmo' target='_blank'>doc</a> for instructions.</li><li>Hopefully PyCrypto is all you need and the code is ready to go, but as Google continually updates code there is a chance for new problems.  A bit more can cause issues with using OAuth with an http backend (instead of https)</li></ul>"
