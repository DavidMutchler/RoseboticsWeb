unit_id,unit_title,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_objectives
1,JavaScript Basics,1,Overview,yes,Questions,https://docs.google.com/presentation/d/1RewSgDBFvwxdrBfdFlVgFg0l4i2uVO74kQSkRqC9rCk/edit?usp=sharing,kotBNNGbE6Y,"<ul><li>There are a lot of great resources for learning jQuery.  Are are a few:</li><li style='margin-left: 20px;'><b>Good one with videos:</b> <a target='_blank' href='http://try.jquery.com/'>http://try.jquery.com/</a></li><li style='margin-left: 20px;'><b>Great hands on learning:</b> <a target='_blank' href='http://www.codecademy.com/en/tracks/jquery'>http://www.codecademy.com/en/tracks/jquery</a></li><li style='margin-left: 20px;'><b>Great examples:</b> <a target='_blank' href='http://www.w3schools.com/jquery/jquery_examples.asp'>http://www.w3schools.com/jquery/jquery_examples.asp</a></li><li style='margin-left: 20px;'><b>Official learn jQuery source:</b> <a target='_blank' href='http://learn.jquery.com/'>http://learn.jquery.com/</a></li><li>There is also an easy to use reference: <a target='_blank' href='http://api.jquery.com/'>http://api.jquery.com/</a></li></ul>"
1,JavaScript Basics,2,Project Setup,yes,Questions,https://docs.google.com/presentation/d/1RewSgDBFvwxdrBfdFlVgFg0l4i2uVO74kQSkRqC9rCk/edit?usp=sharing,di_wzJg6n3U,"<ul><li>Here is a link to the <a target='_blank' href='https://github.com/WebDevCourseMaterial/JavaScriptBasics'>JavaScript Basics Github repo</a></li><li>This app has the html and css code fully complete. We will add JavaScript code to...</li><li style='margin-left: 30px'>Add <b>click</b> listeners for the buttons to update the model</li><li style='margin-left: 30px'>Update the <b>no-cups</b> class on the body</li><li style='margin-left: 30px'>Updating the <b>text</b> in the message</li><li style='margin-left: 30px'>Updating the class on the image to nothing, <b>two-cups</b>, <b>three-cups</b>, <b>four-cups</b>, or <b>many-cups</b></li><li>We'll use the Chrome Dev tools to make this changes manually.  It's neat that we can manually make the changes that our JavaScript will do (good for testing)</li><li>Here is a copy of the code you need to add to get the links:</li></ul><script src='https://gist.github.com/fisherds/77065c12cfd6979215b9.js'></script></ul>"
1,JavaScript Basics,3,Enable Buttons,yes,Questions,https://docs.google.com/presentation/d/1RewSgDBFvwxdrBfdFlVgFg0l4i2uVO74kQSkRqC9rCk/edit?usp=sharing,w0EjepEh46U,"Here is the code you'll need to add to link in the JavaScript<script src='https://gist.github.com/fisherds/6f8015ea5ee30ac4355e.js'></script><ul><li>Then within coffee.js, we'll add a namespace to put all of our variables and functions into <b>rh.coffee</b></li><li>Within that namespace we'll create our model, which is just a single variable called <b>rh.coffee.cups</b></li><li>We'll create an <b>rh.coffee.enableButtons</b> function where we'll add three click listeners that modify the model.</li></ul>"
1,JavaScript Basics,4,Update View,yes,Questions,https://docs.google.com/presentation/d/1RewSgDBFvwxdrBfdFlVgFg0l4i2uVO74kQSkRqC9rCk/edit?usp=sharing,0Y77EKPu5Ng,"<ul><li>Our updateView function will need to...</li><li style='margin-left: 30px'>Update the <b>no-cups</b> class on the body</li><li style='margin-left: 30px'>Updating the <b>text</b> in the message</li><li style='margin-left: 30px'>Updating the class on the image to nothing, <b>two-cups</b>, <b>three-cups</b>, <b>four-cups</b>, or <b>many-cups</b></li></ul>"
1,JavaScript Basics,5,Color Converter Lab,yes,Questions,https://docs.google.com/presentation/d/1RewSgDBFvwxdrBfdFlVgFg0l4i2uVO74kQSkRqC9rCk/edit?usp=sharing,VeJGqIddz_g,"<ul><li>The lab for this unit will be a bit more complex than the Coffee Counter example and will hopefully challenge you.</li><li>We'll add the keyup event, start using the .css() function, and have you do some math. ;)</li><li>Here is the link to the <a target='_blank' href='https://docs.google.com/document/d/1T1fEi37lGe-t_7Vw6PzPjT4pLA63FiyUR6Z_iULRaY0/edit?usp=sharing'>Color Converter Lab</a></li></ul>"
2,JavaScript Objects,1,Making a Constructor,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,QQGEOHKweLc,"<ul><li>Technically JavaScript doesn't have classes (formally it is a prototype-based language not a class-based language), but you can make objects so most people do refer to constructor functions as classes.</li><li>The real magic of creating an object relies on the keyword <b>new</b> and the <a target='_blank' href='https://wildlyinaccurate.com/understanding-javascript-inheritance-and-the-prototype-chain'>prototype chain</a>.</li><li>In this video we'll make a constructor and an instance of that constructor.  Here is the link to the <a target='_blank' href=''>starting code</a> and here are the additions to main.py for this unit:</li></ul><script src='https://gist.github.com/fisherds/281cde58dde82cc148bd.js'></script>"
2,JavaScript Objects,2,Methods,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,u3HL3i_6Xro,"<ul><li>We'll add three methods to our BankAccount prototype: toString, deposit, and withdraw</li><li>These three methods will go onto the rh.objectbasics.BankAccount<b>.prototype</b> object.</li><li>All instances of a BankAccount get that same prototype, so all these functions are available to all instances (without making extra copies of the functions themselves).  It's all part of the prototype chain magic. :)</li><li>Here is the total chain: bob's prototype is rh.objectbasics.BankAccount, rh.objectbasics.BankAccount's prototype is Object, Object's prototype is null (end of the line). VERY similar to superclass mechanisms in other languages.</li><li>We'll end this video with a challenge for you to add another instance variable and another method.  The solution to this challenge will be given NEXT video.</li></ul>"
2,JavaScript Objects,3,Baby Class Exercise,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,eRaugi45oXw,"<ul><li>First we'll walk through the interestRate solution, then time for you to get some practice!</li><li>Here is a link to the <a target='_blank' href='https://docs.google.com/document/d/1fd1rwbRhMZ7q2AKAQ6D4GU5K2k4cwLvY_QePI3NRxJM/edit?usp=sharing'>Baby Class Exercise</a></li></ul>"
2,JavaScript Objects,4,Dice Without Friends Overview,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,q6sW8U5ulnI,"<ul><li>Open the <b>JavaScriptObjects/DiceWithoutFriends/Solution/play.html</b> file to look at the finished product.</li><li>This project uses jQuery and Bootstrap, a fairly simple HTML file, and only a small amount of custom CSS.</li><li>The interesting part is the game implementation in JavaScript.</li><li>There is a file that serves the role of the main function (<b>dwf_play_main.js</b>) then 4 classes:</li><li style='margin-left: 20px;'><b>Die.js</b> Model object to hold the state, location, and value of a single die.</li><li style='margin-left: 20px;'><b>DiceRound.js</b> Model object to manage a single round of the Dice Game (does not care about views).</li><li style='margin-left: 20px;'><b>DiceRoundController.js</b> Informs the DiceRound model object of clicks, then updates the view based on the new state.</li><li style='margin-left: 20px;'><b>DiceGameController.js</b> Cheater class that is a controller with model variables in there too.  Manages the total score, current round, and Fastest Finish feature.</li></ul>"
2,JavaScript Objects,5,Our DWF Starting Point,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,Y8_3JPuTIU8,"<ul><li>Time to start looking at the Dice Without Friends starting point.  We'll complete <b>play.html</b> and <b>dwf_play_main.js</b> in this video.</li><li>Here are the script links you need to add to the html file to bring in the JavaScript.</li></ul><script src='https://gist.github.com/fisherds/bd9154aac93ccd908823.js'></script>"
2,JavaScript Objects,6,This is not this anymore,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,VS8kc9H2oys,"<ul><li>There are many times in JavaScript development with objects that the value of <b>this</b> is not what you'd expect.</li><li>It happen whenever you are within a callback function. <b>this</b> will not be the instance of the class.</li><li>There are a few ways to fix <b>this</b> issue, some fancy, some simple.  The simple way works fine, so that's what we'll show you.</li><li>We'll learn about <b>this</b> technique while we fix our <b>Roll Again</b> and <b>Stop</b> buttons.</li></ul>"
2,JavaScript Objects,7,DWF DiceGameController,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,nf7HGYu7WaY,"<ul><li>We'll implement the DiceGameController so that we can have a total score and round number.</li><li>We'll play with <b>this</b> some more and learn about passing/receiving functions as parameters.</li></ul>"
2,JavaScript Objects,8,localStorage,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,SMv8PEoW6BE,"<ul><li>There are a few mechanism for client side data storage (<a target='_blank' href='http://www.html5rocks.com/en/tutorials/offline/storage/'>fun link</a>), but by far the easiest option is key-value storage via sessionStorage and localStorage, which is called <a target='_blank' href='http://en.wikipedia.org/wiki/Web_storage'>Web Storage</a>.</li><li>Both are 'basically' JavaScript objects that you can add items to which persist in the browser across page reloads.</li><li style='margin-left: 30px;'><b>sessionStorage</b> - key-value storage that lasts for the duration of the browser session</li><li style='margin-left: 30px;'><b>localStorage</b> -  key-value storage that lasts BEYOND the duration of the browser session</li><li>We'll use localStorage to implement our Fastest Finish feature (and it couldn't be easier)</li></ul>"
2,JavaScript Objects,9,Lights Out JavaScript Lab,yes,Questions,https://docs.google.com/presentation/d/1-RJPpvAewlxVBwnryudlJ5JedIwSBcHraVzMpi5poMY/edit?usp=sharing,G1gT4qdINw0,"<ul><li>There is the link to the <a target='_blank' href='https://docs.google.com/document/d/1UmkY7KVOgTC6gJPbvQoWLOOtchgI0Z8J2kTBPef0fU0/edit?usp=sharing'>Lights Out (JavaScript) Lab</a></li></ul>"
